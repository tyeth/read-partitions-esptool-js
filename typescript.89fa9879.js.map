{"mappings":"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AI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IAEvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IAEtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,YAAY;IACvC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,YAAY;IACtC,IAAI,0BAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,Y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AAG;IAAG;IAAG;IAAI;IAAI;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IACnD;IAAG;IAAI;IAAI;IAAG;IAAG;IAAI;IAAI;IAAG;IAAI;IAAG;IAAG;IAAI;IAAI;IAAG;IAAG;IACpD;IAAG;IAAI;IAAG;IAAG;IAAI;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAElD;IAAI;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IACjD;IAAG;IAAG;IAAI;IAAG;IAAI;IAAG;IAAG;IAAI;IAAI;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IACpD;IAAI;IAAG;IAAG;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IACjD;IAAI;IAAG;IAAG;IAAI;IAAG;IAAI;IAAI;IAAG;IAAG;IAAI;IAAI;IAAG;IAAI;IAAG;IAAG;IAEpD;IAAG;IAAI;IAAI;IAAG;IAAI;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAI;IACnD;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAG;IAAI;IAAI;IAAG;IAAI;IAAI;IACnD;IAAI;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAI;IAAG;IAAG;IAAI;IAAI;IACpD;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAEjD;IAAG;IAAI;IAAI;IAAI;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAI;IAAG;IAAI;IAAI;IAAG;IACpD;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAI;IAAI;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAClD;IAAG;IAAI;IAAG;IAAG;IAAG;IAAI;IAAI;IAAG;IAAI;IAAG;IAAI;IAAI;IAAG;IAAG;IAAG;IACnD;IAAI;IAAG;IAAG;IAAI;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAElD;I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AAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,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AAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,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Q;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QA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AK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,O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,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAA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,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AA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ACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;SACF;IACH;IACA,KAAK;QACH,KAAK;QACL,QAAQ;YACN;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBACE;gBACA;aACD;YACD;gBAC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M,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KA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AK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,I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","sources":["node_modules/@parcel/runtime-js/lib/runtime-ac7f0ccb320b9d71.js","node_modules/@parcel/runtime-js/lib/runtime-ca46c969c2dd5ae8.js","node_modules/@parcel/runtime-js/lib/runtime-8a8598986b4b3c6f.js","node_modules/@parcel/runtime-js/lib/runtime-2790f360f2ac537e.js","node_modules/@parcel/runtime-js/lib/runtime-9e60562ada81871c.js","node_modules/@parcel/runtime-js/lib/runtime-12e5f704659aab69.js","node_modules/@parcel/runtime-js/lib/runtime-8c17486fb8599efe.js","node_modules/@parcel/runtime-js/lib/runtime-429a64ad78898c5f.js","node_modules/@parcel/runtime-js/lib/runtime-fa1a30260f673963.js","node_modules/@parcel/runtime-js/lib/runtime-3e058c2d54f5b8d2.js","node_modules/@parcel/runtime-js/lib/runtime-6f3c5ac1514cca71.js","../../lib/targets/esp8266.js","../../lib/targets/rom.js","node_modules/@parcel/runtime-js/lib/runtime-4d58079484d09e2d.js","node_modules/@parcel/runtime-js/lib/runtime-3ab8ff7742537c63.js","node_modules/@parcel/runtime-js/lib/runtime-203f5522c8560e75.js","node_modules/@parcel/runtime-js/lib/runtime-70003da778452b84.js","node_modules/@parcel/runtime-js/lib/runtime-71035d3d50d427d5.js","node_modules/@parcel/runtime-js/lib/runtime-95eed362a17c6b2c.js","node_modules/@parcel/runtime-js/lib/runtime-ef3bdfe63d782f86.js","node_modules/@parcel/runtime-js/lib/runtime-5b3e286d44d39891.js","node_modules/@parcel/runtime-js/lib/runtime-ca5cd6f50c7c30fb.js","node_modules/@parcel/runtime-js/lib/runtime-ad1da532c7fdc5cb.js","../../node_modules/buffer/index.js","../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","../../node_modules/randombytes/browser.js","../../node_modules/process/browser.js","../../node_modules/safe-buffer/index.js","../../node_modules/create-hash/browser.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/md5.js/index.js","../../node_modules/hash-base/index.js","../../node_modules/stream-browserify/index.js","../../node_modules/events/events.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js","../../node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","../../node_modules/util-deprecate/browser.js","../../node_modules/string_decoder/lib/string_decoder.js","../../node_modules/string_decoder/node_modules/safe-buffer/index.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js","../../node_modules/ripemd160/index.js","../../node_modules/sha.js/index.js","../../node_modules/sha.js/sha.js","../../node_modules/sha.js/hash.js","../../node_modules/sha.js/sha1.js","../../node_modules/sha.js/sha224.js","../../node_modules/sha.js/sha256.js","../../node_modules/sha.js/sha384.js","../../node_modules/sha.js/sha512.js","../../node_modules/cipher-base/index.js","../../node_modules/create-hmac/browser.js","../../node_modules/create-hmac/legacy.js","../../node_modules/create-hash/md5.js","../../node_modules/browserify-sign/browser/algorithms.json","../../node_modules/pbkdf2/lib/async.js","../../node_modules/pbkdf2/lib/precondition.js","../../node_modules/pbkdf2/lib/default-encoding.js","../../node_modules/pbkdf2/lib/sync-browser.js","../../node_modules/pbkdf2/lib/to-buffer.js","../../node_modules/des.js/lib/des/utils.js","../../node_modules/des.js/lib/des/cipher.js","../../node_modules/minimalistic-assert/index.js","../../node_modules/des.js/lib/des/des.js","../../node_modules/des.js/lib/des/cbc.js","../../node_modules/des.js/lib/des/ede.js","../../node_modules/browserify-aes/modes/ecb.js","../../node_modules/browserify-aes/modes/cbc.js","../../node_modules/buffer-xor/index.js","../../node_modules/browserify-aes/modes/cfb.js","../../node_modules/browserify-aes/modes/cfb8.js","../../node_modules/browserify-aes/modes/cfb1.js","../../node_modules/browserify-aes/modes/ofb.js","../../node_modules/browserify-aes/modes/ctr.js","../../node_modules/browserify-aes/incr32.js","../../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","../../node_modules/miller-rabin/node_modules/bn.js/lib/bn.js","../../node_modules/brorand/index.js","../../node_modules/readable-stream/readable-browser.js","../../node_modules/readable-stream/lib/_stream_readable.js","../../node_modules/process-nextick-args/index.js","../../node_modules/isarray/index.js","../../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../../node_modules/readable-stream/node_modules/safe-buffer/index.js","../../node_modules/core-util-is/lib/util.js","../../node_modules/readable-stream/lib/internal/streams/BufferList.js","../../node_modules/readable-stream/lib/internal/streams/destroy.js","../../node_modules/readable-stream/lib/_stream_duplex.js","../../node_modules/readable-stream/lib/_stream_writable.js","../../node_modules/readable-stream/lib/_stream_transform.js","../../node_modules/readable-stream/lib/_stream_passthrough.js","../../node_modules/bn.js/lib/bn.js","../../node_modules/elliptic/package.json","../../node_modules/elliptic/lib/elliptic/utils.js","../../node_modules/elliptic/node_modules/bn.js/lib/bn.js","../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../node_modules/elliptic/lib/elliptic/curve/index.js","../../node_modules/elliptic/lib/elliptic/curve/base.js","../../node_modules/elliptic/lib/elliptic/curve/short.js","../../node_modules/elliptic/lib/elliptic/curve/mont.js","../../node_modules/elliptic/lib/elliptic/curve/edwards.js","../../node_modules/elliptic/lib/elliptic/curves.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../../node_modules/elliptic/lib/elliptic/ec/index.js","../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../node_modules/elliptic/lib/elliptic/ec/key.js","../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../node_modules/elliptic/lib/elliptic/eddsa/index.js","../../node_modules/elliptic/lib/elliptic/eddsa/key.js","../../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../node_modules/asn1.js/node_modules/bn.js/lib/bn.js","../../node_modules/asn1.js/lib/asn1/api.js","../../node_modules/asn1.js/lib/asn1.js","../../node_modules/asn1.js/lib/asn1/base/index.js","../../node_modules/asn1.js/lib/asn1/base/reporter.js","../../node_modules/asn1.js/lib/asn1/base/buffer.js","../../node_modules/asn1.js/lib/asn1/base/node.js","../../node_modules/asn1.js/lib/asn1/constants/index.js","../../node_modules/asn1.js/lib/asn1/constants/der.js","../../node_modules/asn1.js/lib/asn1/decoders/index.js","../../node_modules/asn1.js/lib/asn1/decoders/der.js","../../node_modules/asn1.js/lib/asn1/decoders/pem.js","../../node_modules/asn1.js/lib/asn1/encoders/index.js","../../node_modules/asn1.js/lib/asn1/encoders/der.js","../../node_modules/asn1.js/lib/asn1/encoders/pem.js","node_modules/vm-browserify/index.js","../../node_modules/parse-asn1/certificate.js","../../node_modules/create-ecdh/browser.js","../../node_modules/elliptic/lib/elliptic.js","../../node_modules/create-ecdh/node_modules/bn.js/lib/bn.js","../../node_modules/public-encrypt/publicEncrypt.js","../../node_modules/parse-asn1/index.js","../../node_modules/parse-asn1/asn1.js","../../node_modules/parse-asn1/aesid.json","../../node_modules/parse-asn1/fixProc.js","../../node_modules/evp_bytestokey/index.js","../../node_modules/browserify-aes/browser.js","../../node_modules/browserify-aes/encrypter.js","../../node_modules/browserify-aes/modes/index.js","../../node_modules/browserify-aes/modes/list.json","../../node_modules/browserify-aes/authCipher.js","../../node_modules/browserify-aes/aes.js","../../node_modules/browserify-aes/ghash.js","../../node_modules/browserify-aes/streamCipher.js","../../node_modules/browserify-aes/decrypter.js","../../node_modules/pbkdf2/browser.js","../../node_modules/public-encrypt/mgf.js","../../node_modules/public-encrypt/xor.js","../../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","../../node_modules/public-encrypt/withPublic.js","../../node_modules/browserify-rsa/index.js","../../node_modules/public-encrypt/privateDecrypt.js","src/index.ts","../../lib/index.js","../../lib/esploader.js","../../lib/types/error.js","../../node_modules/pako/dist/pako.esm.mjs","../../lib/webserial.js","../../lib/reset.js","../../lib/stubFlasher.js","../../node_modules/atob-lite/atob-browser.js","../../lib/util.js","../../lib/image/index.js","../../lib/image/base.js","../../lib/image/esp32.js","../../lib/image/esp8266.js","../../lib/image/others.js","../../lib/gen_esp32part.py.js","../../node_modules/crypto-browserify/index.js","../../node_modules/browserify-sign/algos.js","../../node_modules/browserify-cipher/browser.js","../../node_modules/browserify-des/index.js","../../node_modules/des.js/lib/des.js","../../node_modules/browserify-des/modes.js","../../node_modules/diffie-hellman/browser.js","../../node_modules/diffie-hellman/lib/generatePrime.js","../../node_modules/miller-rabin/lib/mr.js","../../node_modules/diffie-hellman/lib/primes.json","../../node_modules/diffie-hellman/lib/dh.js","../../node_modules/browserify-sign/browser/index.js","../../node_modules/browserify-sign/browser/sign.js","../../node_modules/browserify-sign/browser/curves.json","../../node_modules/browserify-sign/browser/verify.js","../../node_modules/public-encrypt/browser.js","../../node_modules/randomfill/browser.js","node_modules/web-serial-polyfill/dist/serial.js","node_modules/web-serial-polyfill/serial.ts"],"sourcesContent":["module.exports = (__parcel__import__(\"92hcW\")).then(() => parcelRequire('bE3bn'));","module.exports = (__parcel__import__(\"bs52d\")).then(() => parcelRequire('2eto5'));","module.exports = (__parcel__import__(\"lkv7f\")).then(() => parcelRequire('fp0KE'));","module.exports = (__parcel__import__(\"7HS5L\")).then(() => parcelRequire('a8Y0c'));","module.exports = (__parcel__import__(\"gMHKg\")).then(() => parcelRequire('jSQT9'));","module.exports = (__parcel__import__(\"hiEtq\")).then(() => parcelRequire('e7U7z'));","module.exports = (__parcel__import__(\"1q9zw\")).then(() => parcelRequire('hjhve'));","module.exports = (__parcel__import__(\"bufCH\")).then(() => parcelRequire('dNEtB'));","module.exports = (__parcel__import__(\"eZRsH\")).then(() => parcelRequire('b6zGL'));","module.exports = (__parcel__import__(\"epD2Y\")).then(() => parcelRequire('lAeqt'));","module.exports = (__parcel__import__(\"6dm9x\")).then(() => parcelRequire('cwni9'));","import { ROM } from \"./rom.js\";\r\nexport class ESP8266ROM extends ROM {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.CHIP_NAME = \"ESP8266\";\r\n        this.CHIP_DETECT_MAGIC_VALUE = [0xfff0c101];\r\n        this.EFUSE_RD_REG_BASE = 0x3ff00050;\r\n        this.UART_CLKDIV_REG = 0x60000014;\r\n        this.UART_CLKDIV_MASK = 0xfffff;\r\n        this.XTAL_CLK_DIVIDER = 2;\r\n        this.FLASH_WRITE_SIZE = 0x4000;\r\n        // NOT IMPLEMENTED, SETTING EMPTY VALUE\r\n        this.BOOTLOADER_FLASH_OFFSET = 0;\r\n        this.UART_DATE_REG_ADDR = 0;\r\n        this.FLASH_SIZES = {\r\n            \"512KB\": 0x00,\r\n            \"256KB\": 0x10,\r\n            \"1MB\": 0x20,\r\n            \"2MB\": 0x30,\r\n            \"4MB\": 0x40,\r\n            \"2MB-c1\": 0x50,\r\n            \"4MB-c1\": 0x60,\r\n            \"8MB\": 0x80,\r\n            \"16MB\": 0x90,\r\n        };\r\n        this.FLASH_FREQUENCY = {\r\n            \"80m\": 0xf,\r\n            \"40m\": 0x0,\r\n            \"26m\": 0x1,\r\n            \"20m\": 0x2,\r\n        };\r\n        this.MEMORY_MAP = [\r\n            [0x3ff00000, 0x3ff00010, \"DPORT\"],\r\n            [0x3ffe8000, 0x40000000, \"DRAM\"],\r\n            [0x40100000, 0x40108000, \"IRAM\"],\r\n            [0x40201010, 0x402e1010, \"IROM\"],\r\n        ];\r\n        this.SPI_REG_BASE = 0x60000200;\r\n        this.SPI_USR_OFFS = 0x1c;\r\n        this.SPI_USR1_OFFS = 0x20;\r\n        this.SPI_USR2_OFFS = 0x24;\r\n        this.SPI_MOSI_DLEN_OFFS = 0; // not in esp8266\r\n        this.SPI_MISO_DLEN_OFFS = 0; // not in esp8266\r\n        this.SPI_W0_OFFS = 0x40;\r\n        this.getChipFeatures = async (loader) => {\r\n            const features = [\"WiFi\"];\r\n            if ((await this.getChipDescription(loader)) == \"ESP8285\")\r\n                features.push(\"Embedded Flash\");\r\n            return features;\r\n        };\r\n    }\r\n    async readEfuse(loader, offset) {\r\n        const addr = this.EFUSE_RD_REG_BASE + 4 * offset;\r\n        loader.debug(\"Read efuse \" + addr);\r\n        return await loader.readReg(addr);\r\n    }\r\n    async getChipDescription(loader) {\r\n        const efuse3 = await this.readEfuse(loader, 2);\r\n        const efuse0 = await this.readEfuse(loader, 0);\r\n        const is8285 = ((efuse0 & (1 << 4)) | (efuse3 & (1 << 16))) != 0; // One or the other efuse bit is set for ESP8285\r\n        return is8285 ? \"ESP8285\" : \"ESP8266EX\";\r\n    }\r\n    async getCrystalFreq(loader) {\r\n        const uartDiv = (await loader.readReg(this.UART_CLKDIV_REG)) & this.UART_CLKDIV_MASK;\r\n        const etsXtal = (loader.transport.baudrate * uartDiv) / 1000000 / this.XTAL_CLK_DIVIDER;\r\n        let normXtal;\r\n        if (etsXtal > 33) {\r\n            normXtal = 40;\r\n        }\r\n        else {\r\n            normXtal = 26;\r\n        }\r\n        if (Math.abs(normXtal - etsXtal) > 1) {\r\n            loader.info(\"WARNING: Detected crystal freq \" +\r\n                etsXtal +\r\n                \"MHz is quite different to normalized freq \" +\r\n                normXtal +\r\n                \"MHz. Unsupported crystal in use?\");\r\n        }\r\n        return normXtal;\r\n    }\r\n    _d2h(d) {\r\n        const h = (+d).toString(16);\r\n        return h.length === 1 ? \"0\" + h : h;\r\n    }\r\n    async readMac(loader) {\r\n        let mac0 = await this.readEfuse(loader, 0);\r\n        mac0 = mac0 >>> 0;\r\n        let mac1 = await this.readEfuse(loader, 1);\r\n        mac1 = mac1 >>> 0;\r\n        let mac3 = await this.readEfuse(loader, 3);\r\n        mac3 = mac3 >>> 0;\r\n        const mac = new Uint8Array(6);\r\n        if (mac3 != 0) {\r\n            mac[0] = (mac3 >> 16) & 0xff;\r\n            mac[1] = (mac3 >> 8) & 0xff;\r\n            mac[2] = mac3 & 0xff;\r\n        }\r\n        else if (((mac1 >> 16) & 0xff) == 0) {\r\n            mac[0] = 0x18;\r\n            mac[1] = 0xfe;\r\n            mac[2] = 0x34;\r\n        }\r\n        else if (((mac1 >> 16) & 0xff) == 1) {\r\n            mac[0] = 0xac;\r\n            mac[1] = 0xd0;\r\n            mac[2] = 0x74;\r\n        }\r\n        else {\r\n            loader.error(\"Unknown OUI\");\r\n        }\r\n        mac[3] = (mac1 >> 8) & 0xff;\r\n        mac[4] = mac1 & 0xff;\r\n        mac[5] = (mac0 >> 24) & 0xff;\r\n        return (this._d2h(mac[0]) +\r\n            \":\" +\r\n            this._d2h(mac[1]) +\r\n            \":\" +\r\n            this._d2h(mac[2]) +\r\n            \":\" +\r\n            this._d2h(mac[3]) +\r\n            \":\" +\r\n            this._d2h(mac[4]) +\r\n            \":\" +\r\n            this._d2h(mac[5]));\r\n    }\r\n    getEraseSize(offset, size) {\r\n        return size;\r\n    }\r\n}\r\nESP8266ROM.IROM_MAP_START = 0x40200000;\r\nESP8266ROM.IROM_MAP_END = 0x40300000;\r\n","/**\r\n * Represents a chip ROM with basic registers field and abstract functions.\r\n */\r\nexport class ROM {\r\n    constructor() {\r\n        this.FLASH_SIZES = {\r\n            \"1MB\": 0x00,\r\n            \"2MB\": 0x10,\r\n            \"4MB\": 0x20,\r\n            \"8MB\": 0x30,\r\n            \"16MB\": 0x40,\r\n            \"32MB\": 0x50,\r\n            \"64MB\": 0x60,\r\n            \"128MB\": 0x70,\r\n        };\r\n        this.FLASH_FREQUENCY = {\r\n            \"80m\": 0xf,\r\n            \"40m\": 0x0,\r\n            \"26m\": 0x1,\r\n            \"20m\": 0x2,\r\n        };\r\n    }\r\n    /**\r\n     * Get the chip erase size.\r\n     * @param {number} offset - Offset to start erase.\r\n     * @param {number} size - Size to erase.\r\n     * @returns {number} The erase size of the chip as number.\r\n     */\r\n    getEraseSize(offset, size) {\r\n        return size;\r\n    }\r\n}\r\n","module.exports = (__parcel__import__(\"56ewk\")).then(() => parcelRequire('9BsXL'));","module.exports = Promise.all([__parcel__import__(\"3FBgI\"), __parcel__import__(\"56ewk\"), __parcel__import__(\"khKMY\")]).then(() => parcelRequire('9tA5a'));","module.exports = Promise.all([__parcel__import__(\"56ewk\"), __parcel__import__(\"3FBgI\")]).then(() => parcelRequire('lLOEg'));","module.exports = Promise.all([__parcel__import__(\"3FBgI\"), __parcel__import__(\"56ewk\"), __parcel__import__(\"aALBK\")]).then(() => parcelRequire('8miGt'));","module.exports = Promise.all([__parcel__import__(\"aALBK\"), __parcel__import__(\"3FBgI\"), __parcel__import__(\"56ewk\"), __parcel__import__(\"2lY8V\")]).then(() => parcelRequire('8S4dm'));","module.exports = Promise.all([__parcel__import__(\"aALBK\"), __parcel__import__(\"3FBgI\"), __parcel__import__(\"56ewk\"), __parcel__import__(\"9dyO4\")]).then(() => parcelRequire('bLxto'));","module.exports = Promise.all([__parcel__import__(\"aALBK\"), __parcel__import__(\"3FBgI\"), __parcel__import__(\"56ewk\"), __parcel__import__(\"Q9vYd\")]).then(() => parcelRequire('6DluF'));","module.exports = Promise.all([__parcel__import__(\"56ewk\"), __parcel__import__(\"9S9CI\")]).then(() => parcelRequire('aZ8pA'));","module.exports = Promise.all([__parcel__import__(\"56ewk\"), __parcel__import__(\"DyJhg\")]).then(() => parcelRequire('gzpOb'));","module.exports = Promise.all([__parcel__import__(\"56ewk\"), __parcel__import__(\"i1Yyz\")]).then(() => parcelRequire('iisps'));","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nvar useUint8Array = typeof Uint8Array !== 'undefined'\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined' &&\n  typeof Uint8Array !== 'undefined' &&\n  ArrayBuffer.isView &&\n  (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT)\n\nfunction toBuffer (data, encoding) {\n  // No need to do anything for exact instance\n  // This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n  if (data instanceof Buffer) return data\n\n  // Convert strings to Buffer\n  if (typeof data === 'string') return Buffer.from(data, encoding)\n\n  /*\n   * Wrap any TypedArray instances and DataViews\n   * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n   */\n  if (useArrayBuffer && ArrayBuffer.isView(data)) {\n    if (data.byteLength === 0) return Buffer.alloc(0) // Bug in Node.js <6.3.1, which treats this as out-of-bounds\n    var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n    // Recheck result size, as offset/length doesn't work on Node.js <5.10\n    // We just go to Uint8Array case if this fails\n    if (res.byteLength === data.byteLength) return res\n  }\n\n  /*\n   * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n   * Doesn't make sense with other TypedArray instances\n   */\n  if (useUint8Array && data instanceof Uint8Array) return Buffer.from(data)\n\n  /*\n   * Old Buffer polyfill on an engine that doesn't have TypedArray support\n   * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n   * Convert to our current Buffer implementation\n   */\n  if (\n    Buffer.isBuffer(data) &&\n    data.constructor &&\n    typeof data.constructor.isBuffer === 'function' &&\n    data.constructor.isBuffer(data)\n  ) {\n    return Buffer.from(data)\n  }\n\n  throw new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.')\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n\n  data = toBuffer(data, encoding) // asserts correct input type\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/lib/_stream_readable.js');\nStream.Writable = require('readable-stream/lib/_stream_writable.js');\nStream.Duplex = require('readable-stream/lib/_stream_duplex.js');\nStream.Transform = require('readable-stream/lib/_stream_transform.js');\nStream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\nStream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')\nStream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar StringDecoder = require('string_decoder').StringDecoder;\nvar inherits = require('inherits');\n\nfunction CipherBase(hashMode) {\n\tTransform.call(this);\n\tthis.hashMode = typeof hashMode === 'string';\n\tif (this.hashMode) {\n\t\tthis[hashMode] = this._finalOrDigest;\n\t} else {\n\t\tthis['final'] = this._finalOrDigest;\n\t}\n\tif (this._final) {\n\t\tthis.__final = this._final;\n\t\tthis._final = null;\n\t}\n\tthis._decoder = null;\n\tthis._encoding = null;\n}\ninherits(CipherBase, Transform);\n\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined'\n\t&& typeof Uint8Array !== 'undefined'\n\t&& ArrayBuffer.isView\n\t&& (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT);\n\nfunction toBuffer(data, encoding) {\n\t/*\n\t * No need to do anything for exact instance\n\t * This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n\t */\n\tif (data instanceof Buffer) {\n\t\treturn data;\n\t}\n\n\t// Convert strings to Buffer\n\tif (typeof data === 'string') {\n\t\treturn Buffer.from(data, encoding);\n\t}\n\n\t/*\n\t * Wrap any TypedArray instances and DataViews\n\t * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n\t */\n\tif (useArrayBuffer && ArrayBuffer.isView(data)) {\n\t\t// Bug in Node.js <6.3.1, which treats this as out-of-bounds\n\t\tif (data.byteLength === 0) {\n\t\t\treturn Buffer.alloc(0);\n\t\t}\n\n\t\tvar res = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n\t\t/*\n\t\t * Recheck result size, as offset/length doesn't work on Node.js <5.10\n\t\t * We just go to Uint8Array case if this fails\n\t\t */\n\t\tif (res.byteLength === data.byteLength) {\n\t\t\treturn res;\n\t\t}\n\t}\n\n\t/*\n\t * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n\t * Doesn't make sense with other TypedArray instances\n\t */\n\tif (useUint8Array && data instanceof Uint8Array) {\n\t\treturn Buffer.from(data);\n\t}\n\n\t/*\n\t * Old Buffer polyfill on an engine that doesn't have TypedArray support\n\t * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n\t * Convert to our current Buffer implementation\n\t */\n\tif (\n\t\tBuffer.isBuffer(data)\n\t\t\t&& data.constructor\n\t\t\t&& typeof data.constructor.isBuffer === 'function'\n\t\t\t&& data.constructor.isBuffer(data)\n\t) {\n\t\treturn Buffer.from(data);\n\t}\n\n\tthrow new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');\n}\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n\tvar bufferData = toBuffer(data, inputEnc); // asserts correct input type\n\tvar outData = this._update(bufferData);\n\tif (this.hashMode) {\n\t\treturn this;\n\t}\n\n\tif (outputEnc) {\n\t\toutData = this._toString(outData, outputEnc);\n\t}\n\n\treturn outData;\n};\n\nCipherBase.prototype.setAutoPadding = function () {};\nCipherBase.prototype.getAuthTag = function () {\n\tthrow new Error('trying to get auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAuthTag = function () {\n\tthrow new Error('trying to set auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAAD = function () {\n\tthrow new Error('trying to set aad in unsupported state');\n};\n\nCipherBase.prototype._transform = function (data, _, next) {\n\tvar err;\n\ttry {\n\t\tif (this.hashMode) {\n\t\t\tthis._update(data);\n\t\t} else {\n\t\t\tthis.push(this._update(data));\n\t\t}\n\t} catch (e) {\n\t\terr = e;\n\t} finally {\n\t\tnext(err);\n\t}\n};\nCipherBase.prototype._flush = function (done) {\n\tvar err;\n\ttry {\n\t\tthis.push(this.__final());\n\t} catch (e) {\n\t\terr = e;\n\t}\n\n\tdone(err);\n};\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n\tvar outData = this.__final() || Buffer.alloc(0);\n\tif (outputEnc) {\n\t\toutData = this._toString(outData, outputEnc, true);\n\t}\n\treturn outData;\n};\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n\tif (!this._decoder) {\n\t\tthis._decoder = new StringDecoder(enc);\n\t\tthis._encoding = enc;\n\t}\n\n\tif (this._encoding !== enc) {\n\t\tthrow new Error('can’t switch encodings');\n\t}\n\n\tvar out = this._decoder.write(value);\n\tif (fin) {\n\t\tout += this._decoder.end();\n\t}\n\n\treturn out;\n};\n\nmodule.exports = CipherBase;\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","{\n  \"sha224WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"302d300d06096086480165030402040500041c\"\n  },\n  \"RSA-SHA224\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"302d300d06096086480165030402040500041c\"\n  },\n  \"sha256WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"3031300d060960864801650304020105000420\"\n  },\n  \"RSA-SHA256\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"3031300d060960864801650304020105000420\"\n  },\n  \"sha384WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"3041300d060960864801650304020205000430\"\n  },\n  \"RSA-SHA384\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"3041300d060960864801650304020205000430\"\n  },\n  \"sha512WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"3051300d060960864801650304020305000440\"\n  },\n  \"RSA-SHA512\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"3051300d060960864801650304020305000440\"\n  },\n  \"RSA-SHA1\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"3021300906052b0e03021a05000414\"\n  },\n  \"ecdsa-with-SHA1\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"sha256\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"sha224\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"sha384\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"sha512\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA1\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA224\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA224\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA256\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA256\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA384\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA384\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA512\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA512\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-RIPEMD160\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"\"\n  },\n  \"ripemd160WithRSA\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"3021300906052b2403020105000414\"\n  },\n  \"RSA-RIPEMD160\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"3021300906052b2403020105000414\"\n  },\n  \"md5WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"md5\",\n    \"id\": \"3020300c06082a864886f70d020505000410\"\n  },\n  \"RSA-MD5\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"md5\",\n    \"id\": \"3020300c06082a864886f70d020505000410\"\n  }\n}\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\nvar nextTick\nfunction getNextTick () {\n  if (nextTick) {\n    return nextTick\n  }\n  if (global.process && global.process.nextTick) {\n    nextTick = global.process.nextTick\n  } else if (global.queueMicrotask) {\n    nextTick = global.queueMicrotask\n  } else if (global.setImmediate) {\n    nextTick = global.setImmediate\n  } else {\n    nextTick = global.setTimeout\n  }\n  return nextTick\n}\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    getNextTick()(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    getNextTick()(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    getNextTick()(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n    return\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (global.process && global.process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (global.process && global.process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n  this.padding = options.padding !== false\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar utils = require('./utils');\nvar Cipher = require('./cipher');\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  if (this.padding === false) {\n    return false;\n  }\n\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  if (this.padding === false) {\n    return buffer;\n  }\n\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, { hasUnpiped: false });\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        pna.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        pna.nextTick(emitErrorNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, _this, err);\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","{\n  \"name\": \"elliptic\",\n  \"version\": \"6.6.1\",\n  \"description\": \"EC cryptography\",\n  \"main\": \"lib/elliptic.js\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint lib test\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:indutny/elliptic\"\n  },\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"author\": \"Fedor Indutny <fedor@indutny.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"devDependencies\": {\n    \"brfs\": \"^2.0.2\",\n    \"coveralls\": \"^3.1.0\",\n    \"eslint\": \"^7.6.0\",\n    \"grunt\": \"^1.2.1\",\n    \"grunt-browserify\": \"^5.3.0\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"grunt-contrib-connect\": \"^3.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^5.0.0\",\n    \"grunt-mocha-istanbul\": \"^5.0.2\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^8.0.1\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.9\",\n    \"brorand\": \"^1.1.0\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.1\",\n    \"inherits\": \"^2.0.4\",\n    \"minimalistic-assert\": \"^1.0.1\",\n    \"minimalistic-crypto-utils\": \"^1.0.1\"\n  }\n}\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n  var byteLength;\n  if (BN.isBN(msg) || typeof msg === 'number') {\n    msg = new BN(msg, 16);\n    byteLength = msg.byteLength();\n  } else if (typeof msg === 'object') {\n    // BN assumes an array-like input and asserts length\n    byteLength = msg.length;\n    msg = new BN(msg, 16);\n  } else {\n    // BN converts the value to string\n    var str = msg.toString();\n    // HEX encoding\n    byteLength = (str.length + 1) >>> 1;\n    msg = new BN(str, 16);\n  }\n  // Allow overriding\n  if (typeof bitLength !== 'number') {\n    bitLength = byteLength * 8;\n  }\n  var delta = bitLength - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {\n    assert(typeof msg === 'object' && msg && typeof msg.length === 'number',\n      'Expected message to be an array-like, a hex string, or a BN instance');\n    assert((msg.length >>> 0) === msg.length); // non-negative 32-bit integer\n    for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);\n  }\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n\n  // Would fail further checks, but let's make the error message clear\n  assert(!msg.isNeg(), 'Can not sign a negative message');\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Recheck nonce to be bijective to msg\n  assert((new BN(nonce)).eq(msg), 'Can not sign message');\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc, options) {\n  if (!options)\n    options = {};\n\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature, options) {\n  return this.ec.verify(msg, signature, this, undefined, options);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","var asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","var base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar DecoderBuffer = require('../base').DecoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n","var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n","var decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","var encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict';\n\nvar asn = require('asn1.js');\n\nvar Time = asn.define('Time', function () {\n\tthis.choice({\n\t\tutcTime: this.utctime(),\n\t\tgeneralTime: this.gentime()\n\t});\n});\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n\tthis.seq().obj(\n\t\tthis.key('type').objid(),\n\t\tthis.key('value').any()\n\t);\n});\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('parameters').optional(),\n\t\tthis.key('curve').objid().optional()\n\t);\n});\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n\tthis.setof(AttributeTypeValue);\n});\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n\tthis.seqof(RelativeDistinguishedName);\n});\n\nvar Name = asn.define('Name', function () {\n\tthis.choice({\n\t\trdnSequence: this.use(RDNSequence)\n\t});\n});\n\nvar Validity = asn.define('Validity', function () {\n\tthis.seq().obj(\n\t\tthis.key('notBefore').use(Time),\n\t\tthis.key('notAfter').use(Time)\n\t);\n});\n\nvar Extension = asn.define('Extension', function () {\n\tthis.seq().obj(\n\t\tthis.key('extnID').objid(),\n\t\tthis.key('critical').bool().def(false),\n\t\tthis.key('extnValue').octstr()\n\t);\n});\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('version').explicit(0)['int']().optional(),\n\t\tthis.key('serialNumber')['int'](),\n\t\tthis.key('signature').use(AlgorithmIdentifier),\n\t\tthis.key('issuer').use(Name),\n\t\tthis.key('validity').use(Validity),\n\t\tthis.key('subject').use(Name),\n\t\tthis.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n\t\tthis.key('issuerUniqueID').implicit(1).bitstr().optional(),\n\t\tthis.key('subjectUniqueID').implicit(2).bitstr().optional(),\n\t\tthis.key('extensions').explicit(3).seqof(Extension).optional()\n\t);\n});\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('tbsCertificate').use(TBSCertificate),\n\t\tthis.key('signatureAlgorithm').use(AlgorithmIdentifier),\n\t\tthis.key('signatureValue').bitstr()\n\t);\n});\n\nmodule.exports = X509Certificate;\n","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","'use strict';\n\nvar asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction decrypt(data, password) {\n\tvar salt = data.algorithm.decrypt.kde.kdeparams.salt;\n\tvar iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n\tvar algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n\tvar iv = data.algorithm.decrypt.cipher.iv;\n\tvar cipherText = data.subjectPrivateKey;\n\tvar keylen = parseInt(algo.split('-')[1], 10) / 8;\n\tvar key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n\tvar cipher = ciphers.createDecipheriv(algo, key, iv);\n\tvar out = [];\n\tout.push(cipher.update(cipherText));\n\tout.push(cipher['final']());\n\treturn Buffer.concat(out);\n}\n\nfunction parseKeys(buffer) {\n\tvar password;\n\tif (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n\t\tpassword = buffer.passphrase;\n\t\tbuffer = buffer.key;\n\t}\n\tif (typeof buffer === 'string') {\n\t\tbuffer = Buffer.from(buffer);\n\t}\n\n\tvar stripped = fixProc(buffer, password);\n\n\tvar type = stripped.tag;\n\tvar data = stripped.data;\n\tvar subtype, ndata;\n\tswitch (type) {\n\t\tcase 'CERTIFICATE':\n\t\t\tndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n\t\t\t// falls through\n\t\tcase 'PUBLIC KEY':\n\t\t\tif (!ndata) {\n\t\t\t\tndata = asn1.PublicKey.decode(data, 'der');\n\t\t\t}\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\tndata.subjectPrivateKey = ndata.subjectPublicKey;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'ec',\n\t\t\t\t\t\tdata: ndata\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tdata: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'ENCRYPTED PRIVATE KEY':\n\t\t\tdata = asn1.EncryptedPrivateKey.decode(data, 'der');\n\t\t\tdata = decrypt(data, password);\n\t\t\t// falls through\n\t\tcase 'PRIVATE KEY':\n\t\t\tndata = asn1.PrivateKey.decode(data, 'der');\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcurve: ndata.algorithm.curve,\n\t\t\t\t\t\tprivateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tparams: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'RSA PUBLIC KEY':\n\t\t\treturn asn1.RSAPublicKey.decode(data, 'der');\n\t\tcase 'RSA PRIVATE KEY':\n\t\t\treturn asn1.RSAPrivateKey.decode(data, 'der');\n\t\tcase 'DSA PRIVATE KEY':\n\t\t\treturn {\n\t\t\t\ttype: 'dsa',\n\t\t\t\tparams: asn1.DSAPrivateKey.decode(data, 'der')\n\t\t\t};\n\t\tcase 'EC PRIVATE KEY':\n\t\t\tdata = asn1.ECPrivateKey.decode(data, 'der');\n\t\t\treturn {\n\t\t\t\tcurve: data.parameters.value,\n\t\t\t\tprivateKey: data.privateKey\n\t\t\t};\n\t\tdefault: throw new Error('unknown key type ' + type);\n\t}\n}\nparseKeys.signature = asn1.signature;\n\nmodule.exports = parseKeys;\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\n'use strict';\n\nvar asn1 = require('asn1.js');\n\nexports.certificate = require('./certificate');\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int'](),\n\t\tthis.key('privateExponent')['int'](),\n\t\tthis.key('prime1')['int'](),\n\t\tthis.key('prime2')['int'](),\n\t\tthis.key('exponent1')['int'](),\n\t\tthis.key('exponent2')['int'](),\n\t\tthis.key('coefficient')['int']()\n\t);\n});\nexports.RSAPrivateKey = RSAPrivateKey;\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int']()\n\t);\n});\nexports.RSAPublicKey = RSAPublicKey;\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('none').null_().optional(),\n\t\tthis.key('curve').objid().optional(),\n\t\tthis.key('params').seq().obj(\n\t\t\tthis.key('p')['int'](),\n\t\t\tthis.key('q')['int'](),\n\t\t\tthis.key('g')['int']()\n\t\t).optional()\n\t);\n});\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\nexports.PublicKey = PublicKey;\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\nexports.PrivateKey = PrivateKeyInfo;\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').seq().obj(\n\t\t\tthis.key('id').objid(),\n\t\t\tthis.key('decrypt').seq().obj(\n\t\t\t\tthis.key('kde').seq().obj(\n\t\t\t\t\tthis.key('id').objid(),\n\t\t\t\t\tthis.key('kdeparams').seq().obj(\n\t\t\t\t\t\tthis.key('salt').octstr(),\n\t\t\t\t\t\tthis.key('iters')['int']()\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tthis.key('cipher').seq().obj(\n\t\t\t\t\tthis.key('algo').objid(),\n\t\t\t\t\tthis.key('iv').octstr()\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('p')['int'](),\n\t\tthis.key('q')['int'](),\n\t\tthis.key('g')['int'](),\n\t\tthis.key('pub_key')['int'](),\n\t\tthis.key('priv_key')['int']()\n\t);\n});\nexports.DSAPrivateKey = DSAPrivateKey;\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n\tthis['int']();\n});\n\nvar ECParameters = asn1.define('ECParameters', function () {\n\tthis.choice({\n\t\tnamedCurve: this.objid()\n\t});\n});\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('privateKey').octstr(),\n\t\tthis.key('parameters').optional().explicit(0).use(ECParameters),\n\t\tthis.key('publicKey').optional().explicit(1).bitstr()\n\t);\n});\nexports.ECPrivateKey = ECPrivateKey;\n\nexports.signature = asn1.define('signature', function () {\n\tthis.seq().obj(\n\t\tthis.key('r')['int'](),\n\t\tthis.key('s')['int']()\n\t);\n});\n","{\"2.16.840.1.101.3.4.1.1\": \"aes-128-ecb\",\n\"2.16.840.1.101.3.4.1.2\": \"aes-128-cbc\",\n\"2.16.840.1.101.3.4.1.3\": \"aes-128-ofb\",\n\"2.16.840.1.101.3.4.1.4\": \"aes-128-cfb\",\n\"2.16.840.1.101.3.4.1.21\": \"aes-192-ecb\",\n\"2.16.840.1.101.3.4.1.22\": \"aes-192-cbc\",\n\"2.16.840.1.101.3.4.1.23\": \"aes-192-ofb\",\n\"2.16.840.1.101.3.4.1.24\": \"aes-192-cfb\",\n\"2.16.840.1.101.3.4.1.41\": \"aes-256-ecb\",\n\"2.16.840.1.101.3.4.1.42\": \"aes-256-cbc\",\n\"2.16.840.1.101.3.4.1.43\": \"aes-256-ofb\",\n\"2.16.840.1.101.3.4.1.44\": \"aes-256-cfb\"\n}","'use strict';\n\n// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m;\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m;\nvar evp = require('evp_bytestokey');\nvar ciphers = require('browserify-aes');\nvar Buffer = require('safe-buffer').Buffer;\nmodule.exports = function (okey, password) {\n\tvar key = okey.toString();\n\tvar match = key.match(findProc);\n\tvar decrypted;\n\tif (!match) {\n\t\tvar match2 = key.match(fullRegex);\n\t\tdecrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64');\n\t} else {\n\t\tvar suite = 'aes' + match[1];\n\t\tvar iv = Buffer.from(match[2], 'hex');\n\t\tvar cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64');\n\t\tvar cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;\n\t\tvar out = [];\n\t\tvar cipher = ciphers.createDecipheriv(suite, cipherKey, iv);\n\t\tout.push(cipher.update(cipherText));\n\t\tout.push(cipher['final']());\n\t\tdecrypted = Buffer.concat(out);\n\t}\n\tvar tag = key.match(startRegex)[1];\n\treturn {\n\t\ttag: tag,\n\t\tdata: decrypted\n\t};\n};\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","{\n  \"aes-128-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-192-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-256-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-128-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-192-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-256-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes128\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes192\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes256\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-128-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  },\n  \"aes-192-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  },\n  \"aes-256-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  }\n}\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","'use strict';\n\nvar BN = require('bn.js');\nvar randomBytes = require('randombytes');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction getr(priv) {\n\tvar len = priv.modulus.byteLength();\n\tvar r;\n\tdo {\n\t\tr = new BN(randomBytes(len));\n\t} while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));\n\treturn r;\n}\n\nfunction blind(priv) {\n\tvar r = getr(priv);\n\tvar blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();\n\treturn { blinder: blinder, unblinder: r.invm(priv.modulus) };\n}\n\nfunction crt(msg, priv) {\n\tvar blinds = blind(priv);\n\tvar len = priv.modulus.byteLength();\n\tvar blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);\n\tvar c1 = blinded.toRed(BN.mont(priv.prime1));\n\tvar c2 = blinded.toRed(BN.mont(priv.prime2));\n\tvar qinv = priv.coefficient;\n\tvar p = priv.prime1;\n\tvar q = priv.prime2;\n\tvar m1 = c1.redPow(priv.exponent1).fromRed();\n\tvar m2 = c2.redPow(priv.exponent2).fromRed();\n\tvar h = m1.isub(m2).imul(qinv).umod(p).imul(q);\n\treturn m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);\n}\ncrt.getr = getr;\n\nmodule.exports = crt;\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","//TODO: move Mac to single access, currently used in readFlashData, but better to have custom file names\r\n// where the placeholders can be used to generate the file name with checkboxes for chip/mac/type/offset/size\r\n// and ideally there would be an alternative format for short chip names, but including revision.\r\nconst baudrates = document.getElementById(\"baudrates\") as HTMLSelectElement;\r\nconst consoleBaudrates = document.getElementById(\"consoleBaudrates\") as HTMLSelectElement;\r\nconst connectButton = document.getElementById(\"connectButton\") as HTMLButtonElement;\r\nconst traceButton = document.getElementById(\"copyTraceButton\") as HTMLButtonElement;\r\nconst disconnectButton = document.getElementById(\"disconnectButton\") as HTMLButtonElement;\r\nconst resetButton = document.getElementById(\"resetButton\") as HTMLButtonElement;\r\nconst consoleStartButton = document.getElementById(\"consoleStartButton\") as HTMLButtonElement;\r\nconst consoleStopButton = document.getElementById(\"consoleStopButton\") as HTMLButtonElement;\r\nconst eraseButton = document.getElementById(\"eraseButton\") as HTMLButtonElement;\r\nconst addFileButton = document.getElementById(\"addFile\") as HTMLButtonElement;\r\nconst programButton = document.getElementById(\"programButton\");\r\nconst readFlashOffsetInput = document.getElementById(\"readFlashOffset\") as HTMLInputElement;\r\nconst readFlashSizeInput = document.getElementById(\"readFlashSize\") as HTMLInputElement;\r\nconst readFlashAllInput = document.getElementById(\"readFlashAll\") as HTMLInputElement;\r\nconst readFlashData = document.getElementById(\"readFlashData\") as HTMLButtonElement;\r\nconst partitionOffsetInput = document.getElementById(\"partitionOffset\") as HTMLInputElement;\r\nconst readPartitionButton = document.getElementById(\"readPartitionButton\") as HTMLButtonElement;\r\nconst readPartitionDiv = document.getElementById(\"readPartitionTable\") as HTMLDivElement;\r\nconst partitionTableOutput = document.getElementById(\"partitionTableOutput\");\r\nconst filesDiv = document.getElementById(\"files\");\r\nconst terminal = document.getElementById(\"terminal\");\r\nconst programDiv = document.getElementById(\"program\");\r\nconst consoleDiv = document.getElementById(\"console\");\r\nconst lblBaudrate = document.getElementById(\"lblBaudrate\");\r\nconst lblConsoleBaudrate = document.getElementById(\"lblConsoleBaudrate\");\r\nconst lblConsoleFor = document.getElementById(\"lblConsoleFor\");\r\nconst lblConnTo = document.getElementById(\"lblConnTo\");\r\nconst table = document.getElementById(\"fileTable\") as HTMLTableElement;\r\nconst alertDiv = document.getElementById(\"alertDiv\");\r\n\r\nconst debugLogging = document.getElementById(\"debugLogging\") as HTMLInputElement;\r\n\r\n// This is a frontend example of Esptool-JS using local bundle file\r\n// To optimize use a CDN hosted version like\r\n// https://unpkg.com/esptool-js@0.5.0/bundle.js\r\nimport { ESPLoader, FlashOptions, LoaderOptions, Transport,\r\n  Partitions, PartitionDefinition, PARTITION_TYPES, PARTITION_SUBTYPES, FlashSizeValues } from \"../../../lib\";\r\nimport { serial } from \"web-serial-polyfill\";\r\n\r\nconst serialLib = !navigator.serial && navigator.usb ? serial : navigator.serial;\r\n\r\ndeclare let Terminal; // Terminal is imported in HTML script\r\ndeclare let CryptoJS; // CryptoJS is imported in HTML script\r\n\r\nconst term = new Terminal({ cols: 120, rows: 40 });\r\nterm.open(terminal);\r\n\r\nlet device = null;\r\nlet transport: Transport;\r\nlet chip: string = null;\r\nlet esploader: ESPLoader;\r\n\r\ndisconnectButton.style.display = \"none\";\r\ntraceButton.style.display = \"none\";\r\neraseButton.style.display = \"none\";\r\nconsoleStopButton.style.display = \"none\";\r\nresetButton.style.display = \"none\";\r\nfilesDiv.style.display = \"none\";\r\npartitionTableOutput.style.display = \"none\";\r\nreadPartitionDiv.style.display = \"none\";\r\nreadFlashAllInput.onclick = () => {\r\n  readFlashSizeInput.style.textDecoration = readFlashAllInput.checked ? \"line-through\" : \"none\";\r\n};\r\n\r\n/**\r\n * The built in Event object.\r\n * @external Event\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\r\n */\r\n\r\n/**\r\n * File reader handler to read given local file.\r\n * @param {Event} evt File Select event\r\n */\r\nfunction handleFileSelect(evt) {\r\n  const file = evt.target.files[0];\r\n\r\n  if (!file) return;\r\n\r\n  const reader = new FileReader();\r\n\r\n  reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n    evt.target.data = ev.target.result;\r\n  };\r\n\r\n  reader.readAsBinaryString(file);\r\n}\r\n\r\nconst espLoaderTerminal = {\r\n  clean() {\r\n    term.clear();\r\n  },\r\n  writeLine(data) {\r\n    term.writeln(data);\r\n  },\r\n  write(data) {\r\n    term.write(data);\r\n  },\r\n};\r\n\r\nconnectButton.onclick = async () => {\r\n  try {\r\n    if (device === null) {\r\n      device = await serialLib.requestPort({});\r\n      transport = new Transport(device, true);\r\n    }\r\n    const flashOptions = {\r\n      transport,\r\n      baudrate: parseInt(baudrates.value),\r\n      terminal: espLoaderTerminal,\r\n      debugLogging: debugLogging.checked,\r\n    } as LoaderOptions;\r\n    esploader = new ESPLoader(flashOptions);\r\n\r\n    traceButton.style.display = \"initial\";\r\n    chip = await esploader.main();\r\n\r\n    // Temporarily broken\r\n    // await esploader.flashId();\r\n    console.log(\"Settings done for :\" + chip);\r\n    lblBaudrate.style.display = \"none\";\r\n    lblConnTo.innerHTML = \"Connected to device: \" + chip;\r\n    lblConnTo.style.display = \"block\";\r\n    baudrates.style.display = \"none\";\r\n    connectButton.style.display = \"none\";\r\n    disconnectButton.style.display = \"initial\";\r\n    eraseButton.style.display = \"initial\";\r\n    filesDiv.style.display = \"initial\";\r\n    partitionTableOutput.style.display = \"block\";\r\n    readPartitionDiv.style.display = \"block\";\r\n    consoleDiv.style.display = \"none\";\r\n  } catch (e) {\r\n    console.error(e);\r\n    term.writeln(`Error: ${e.message}`);\r\n  }\r\n};\r\n\r\ntraceButton.onclick = async () => {\r\n  if (transport) {\r\n    transport.returnTrace();\r\n  }\r\n};\r\n\r\nresetButton.onclick = async () => {\r\n  if (transport) {\r\n    await transport.setDTR(false);\r\n    await new Promise((resolve) => setTimeout(resolve, 100));\r\n    await transport.setDTR(true);\r\n  }\r\n};\r\n\r\neraseButton.onclick = async () => {\r\n  eraseButton.disabled = true;\r\n  try {\r\n    await esploader.eraseFlash();\r\n  } catch (e) {\r\n    console.error(e);\r\n    term.writeln(`Error: ${e.message}`);\r\n  } finally {\r\n    eraseButton.disabled = false;\r\n  }\r\n};\r\n\r\naddFileButton.onclick = () => {\r\n  const rowCount = table.rows.length;\r\n  const row = table.insertRow(rowCount);\r\n\r\n  //Column 1 - Offset\r\n  const cell1 = row.insertCell(0);\r\n  const element1 = document.createElement(\"input\");\r\n  element1.type = \"text\";\r\n  element1.id = \"offset\" + rowCount;\r\n  element1.value = \"0x1000\";\r\n  cell1.appendChild(element1);\r\n\r\n  // Column 2 - File selector\r\n  const cell2 = row.insertCell(1);\r\n  const element2 = document.createElement(\"input\");\r\n  element2.type = \"file\";\r\n  element2.id = \"selectFile\" + rowCount;\r\n  element2.name = \"selected_File\" + rowCount;\r\n  element2.addEventListener(\"change\", handleFileSelect, false);\r\n  cell2.appendChild(element2);\r\n\r\n  // Column 3  - Progress\r\n  const cell3 = row.insertCell(2);\r\n  cell3.classList.add(\"progress-cell\");\r\n  cell3.style.display = \"none\";\r\n  cell3.innerHTML = `<progress value=\"0\" max=\"100\"></progress>`;\r\n\r\n  // Column 4  - Remove File\r\n  const cell4 = row.insertCell(3);\r\n  cell4.classList.add(\"action-cell\");\r\n  if (rowCount > 1) {\r\n    const element4 = document.createElement(\"input\");\r\n    element4.type = \"button\";\r\n    const btnName = \"button\" + rowCount;\r\n    element4.name = btnName;\r\n    element4.setAttribute(\"class\", \"btn\");\r\n    element4.setAttribute(\"value\", \"Remove\"); // or element1.value = \"button\";\r\n    element4.onclick = function () {\r\n      removeRow(row);\r\n    };\r\n    cell4.appendChild(element4);\r\n  }\r\n};\r\n\r\n/**\r\n * The built in HTMLTableRowElement object.\r\n * @external HTMLTableRowElement\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement}\r\n */\r\n\r\n/**\r\n * Remove file row from HTML Table\r\n * @param {HTMLTableRowElement} row Table row element to remove\r\n */\r\nfunction removeRow(row: HTMLTableRowElement) {\r\n  const rowIndex = Array.from(table.rows).indexOf(row);\r\n  table.deleteRow(rowIndex);\r\n}\r\n\r\n/**\r\n * Clean devices variables on chip disconnect. Remove stale references if any.\r\n */\r\nfunction cleanUp() {\r\n  device = null;\r\n  transport = null;\r\n  chip = null;\r\n  initializePartitionTable();\r\n}\r\n\r\nlet lastProgress = -1;\r\n/**\r\n * Check and show progress of the current operation.\r\n * @param {number} totalSize Total size of the operation\r\n * @param {number} currentProgress Current progress of the operation\r\n * @param {number} period Period/percentage to show progress at (default 10)\r\n */\r\nfunction checkAndShowProgress(totalSize: number, currentProgress: number, period = 10) {\r\n  const percentage = Math.floor((currentProgress / totalSize) * 100);\r\n  const nearestBlock = Math.floor(percentage / period) * period;\r\n\r\n  if (nearestBlock > lastProgress) {\r\n    term.write(`${nearestBlock}%`);\r\n    console.log(`Progress: ${nearestBlock}%`);\r\n    lastProgress = nearestBlock;\r\n  } else {\r\n    term.write(\".\");\r\n  }\r\n}\r\n\r\nreadFlashData.onclick = async () => {\r\n  let hexOffset = readFlashOffsetInput.value;\r\n  if (hexOffset === \"\") {\r\n    term.writeln(\"Please enter a valid offset to read flash from\");\r\n    return;\r\n  } else if (hexOffset.startsWith(\"0x\")) {\r\n    term.writeln(\"Offset starts 0x and already assumed, stripping leading 0x...\");\r\n    readFlashOffsetInput.value = hexOffset = hexOffset.slice(2);\r\n  }\r\n  const offset = parseInt(hexOffset, 16);\r\n  const readAll = readFlashAllInput.checked;\r\n  const flashSize = esploader.flashSizeBytes((await esploader.detectFlashSize(\"detect\")) as FlashSizeValues);\r\n  const size = readAll ? flashSize - offset : parseInt(readFlashSizeInput.value, 16) || 0;\r\n  if (size <= 0) {\r\n    term.writeln(\"Invalid size received (\" + size + \"), impossible to read flash of 0bytes\");\r\n    return;\r\n  }\r\n  term.writeln(`Reading flash from 0x${hexOffset} of size ${size} bytes`);\r\n  try {\r\n    console.log(\"Reading flash from 0x\" + hexOffset + \" of size \" + size + \" bytes (and turning off tracing)\");\r\n    esploader.transport.tracing = false;\r\n    lastProgress = -1;\r\n    const data = await esploader.readFlash(offset, size, (pkt, progress, total) => {\r\n      checkAndShowProgress(total, progress, 10);\r\n    });\r\n    term.writeln(`\\nSuccessfully read flash data from 0x${hexOffset}`);\r\n    const mac = await esploader.chip.readMac(esploader);\r\n    esploader.transport.tracing = true;\r\n    console.log(\"Done reading, turned tracing back on.\");\r\n    const fileName = `flash_${chip}_${mac}_0x${hexOffset}_0x${size.toString(16)}b.bin`;\r\n    initiateFileDownload(data, fileName);\r\n  } catch (e) {\r\n    console.error(e);\r\n    term.writeln(`Failed reading flash from ${hexOffset}\\nError: ${e.message}`);\r\n  }\r\n};\r\n\r\nreadPartitionButton.onclick = async () => {\r\n  initializePartitionTable();\r\n  const hexOffset = partitionOffsetInput.value;\r\n  const offset = parseInt(hexOffset, 16);\r\n  try {\r\n    esploader.transport.tracing = false;\r\n    const data = await esploader.readFlash(offset, 800);\r\n    esploader.transport.tracing = true;\r\n    const decodedData = decodePartitionTable(data);\r\n    const tableData = decodedData.toCSV();\r\n    term.writeln(`Extracted partition table from 0x${hexOffset}`);\r\n    tableData.split(\"\\n\").forEach((x) => {\r\n      term.writeln(x.trim());\r\n    });\r\n    console.log(JSON.stringify(decodedData, null, 2));\r\n    // partitionTableOutput.innerHTML = tableData.split(\"\\n\").join(\"<br/>\");\r\n    populatePartitionTable(tableData);\r\n  } catch (e) {\r\n    console.error(e);\r\n    const errMsg = `Failed extracting partition table from ${hexOffset}\\nError: ${e.message}`;\r\n    partitionTableOutput.innerHTML = errMsg;\r\n    term.writeln(errMsg);\r\n  }\r\n};\r\n\r\n/**\r\n * Decode the partition table data from binary data.\r\n * @param {Uint8Array} data Partition table data\r\n * @returns {Partitions} Decoded partition table\r\n */\r\nfunction decodePartitionTable(data: Uint8Array) {\r\n  console.log(\"Partition table data: \", data);\r\n  const p = Partitions.fromBinary(data);\r\n  return p;\r\n}\r\n\r\n/**\r\n * Populate the partition table with the given CSV data.\r\n * @param {string} partitionTableCSV Partition table CSV data\r\n */\r\nfunction populatePartitionTable(partitionTableCSV: string) {\r\n  initializePartitionTable();\r\n  const tableBody = document.getElementById(\"partitionTableBody\") as HTMLTableSectionElement;\r\n\r\n  // Clear existing rows\r\n  tableBody.innerHTML = \"\";\r\n\r\n  // Split the CSV into rows\r\n  const rows = partitionTableCSV.trim().split(\"\\n\").slice(1);\r\n\r\n  // Add headers dynamically\r\n  if (rows.length > 0) {\r\n    let headers = rows[0].split(\",\");\r\n    headers.push(\"(Encrypted/ReadOnly)\");\r\n    // headers[0] = headers[0].replace(\"# \", \"\");\r\n    const headerRow = document.createElement(\"tr\");\r\n\r\n    headers.forEach((header) => {\r\n      const th = document.createElement(\"th\");\r\n      th.textContent = header.trim();\r\n      headerRow.appendChild(th);\r\n    });\r\n\r\n    // Add an extra header for the \"Download\" action\r\n    const actionHeader = document.createElement(\"th\");\r\n    actionHeader.textContent = \"Action\";\r\n    headerRow.appendChild(actionHeader);\r\n\r\n    tableBody.appendChild(headerRow);\r\n  }\r\n\r\n  // Iterate over each row except for the header\r\n  rows.slice(1).forEach((row) => {\r\n    const columns = row.split(\",\");\r\n    const rowElement = document.createElement(\"tr\");\r\n\r\n    columns.forEach((column) => {\r\n      const td = document.createElement(\"td\");\r\n      td.textContent = column.trim();\r\n      rowElement.appendChild(td);\r\n    });\r\n\r\n    // Add a download button for each row\r\n    const actionCell = document.createElement(\"td\");\r\n    const downloadButton = document.createElement(\"button\");\r\n    downloadButton.className = \"btn btn-info btn-sm\";\r\n    downloadButton.textContent = \"📂\";\r\n\r\n    downloadButton.title = `Download ${\r\n      // Add subtype if user_fs\r\n      columns[0] == \"user_fs\" ? columns[0] + \" \" + columns[1] : columns[0]\r\n    } partition at ${columns[3]} with size ${columns[4]}`;\r\n\r\n    downloadButton.addEventListener(\"click\", () => {\r\n      downloadPartitionRow(columns);\r\n    });\r\n\r\n    actionCell.appendChild(downloadButton);\r\n    rowElement.appendChild(actionCell);\r\n\r\n    tableBody.appendChild(rowElement);\r\n  });\r\n}\r\n\r\n/**\r\n *  Initialize the partition table with headers and empty body.\r\n */\r\nfunction initializePartitionTable() {\r\n  partitionTableOutput.innerHTML = `\r\n  <table class=\"table table-striped\" id=\"partitionTable\">\r\n    <thead class=\"thead-light\">\r\n        <tr id=\"partitionHeader\"></tr>\r\n    </thead>\r\n    <tbody id=\"partitionTableBody\">\r\n    </tbody>\r\n  </table>\r\n  `;\r\n}\r\n\r\nfunction logToTerm(str: string) {\r\n  term.writeln(str);\r\n  console.log(str);\r\n}\r\n\r\n// Mock function for download action\r\nfunction downloadPartitionRow(row: string[]) {\r\n  logToTerm(`Downloading partition/row: ${row}`);\r\n  try {\r\n    console.log(\"Turning off tracing and reading row: \", row);\r\n    esploader.transport.tracing = false;\r\n    lastProgress = -1;\r\n    const newJob = async () => {\r\n      const data = await esploader.readFlash(parseInt(row[3], 16), parseInt(row[4], 16), (pkt, progress, total) => {\r\n        checkAndShowProgress(total, progress);\r\n      });\r\n      logToTerm(\"\\nDone fetching data, generating download...\");\r\n      // Create blob and download to browser\r\n      generateDownloadLinkFromTableRow(row, data);\r\n    };\r\n    newJob();\r\n  } catch (e) {\r\n    console.error(e);\r\n    logToTerm(\"Error fetching data:\");\r\n    logToTerm(e);\r\n  } finally {\r\n    esploader.transport.tracing = true;\r\n    console.log(\"Turned tracing back on.\");\r\n  }\r\n}\r\n\r\ndisconnectButton.onclick = async () => {\r\n  if (transport) await transport.disconnect();\r\n\r\n  term.reset();\r\n  lblBaudrate.style.display = \"initial\";\r\n  baudrates.style.display = \"initial\";\r\n  consoleBaudrates.style.display = \"initial\";\r\n  connectButton.style.display = \"initial\";\r\n  readPartitionDiv.style.display = \"none\";\r\n  partitionTableOutput.style.display = \"none\";\r\n  disconnectButton.style.display = \"none\";\r\n  traceButton.style.display = \"none\";\r\n  eraseButton.style.display = \"none\";\r\n  lblConnTo.style.display = \"none\";\r\n  filesDiv.style.display = \"none\";\r\n  alertDiv.style.display = \"none\";\r\n  consoleDiv.style.display = \"initial\";\r\n  cleanUp();\r\n};\r\n\r\nlet isConsoleClosed = false;\r\nconsoleStartButton.onclick = async () => {\r\n  if (device === null) {\r\n    device = await serialLib.requestPort({});\r\n    transport = new Transport(device, true);\r\n  }\r\n  lblConsoleFor.style.display = \"block\";\r\n  lblConsoleBaudrate.style.display = \"none\";\r\n  consoleBaudrates.style.display = \"none\";\r\n  consoleStartButton.style.display = \"none\";\r\n  consoleStopButton.style.display = \"initial\";\r\n  resetButton.style.display = \"initial\";\r\n  programDiv.style.display = \"none\";\r\n\r\n  await transport.connect(parseInt(consoleBaudrates.value));\r\n  isConsoleClosed = false;\r\n\r\n  while (true && !isConsoleClosed) {\r\n    const readLoop = transport.rawRead();\r\n    const { value, done } = await readLoop.next();\r\n\r\n    if (done || !value) {\r\n      break;\r\n    }\r\n    term.write(value);\r\n  }\r\n  console.log(\"quitting console\");\r\n};\r\n\r\nconsoleStopButton.onclick = async () => {\r\n  isConsoleClosed = true;\r\n  if (transport) {\r\n    await transport.disconnect();\r\n    await transport.waitForUnlock(1500);\r\n  }\r\n  term.reset();\r\n  lblConsoleBaudrate.style.display = \"initial\";\r\n  consoleBaudrates.style.display = \"initial\";\r\n  consoleStartButton.style.display = \"initial\";\r\n  consoleStopButton.style.display = \"none\";\r\n  resetButton.style.display = \"none\";\r\n  lblConsoleFor.style.display = \"none\";\r\n  programDiv.style.display = \"initial\";\r\n  cleanUp();\r\n};\r\n\r\nfunction generateDownloadLinkFromTableRow(row: string[], data: Uint8Array<ArrayBufferLike>) {\r\n  const type = row[0] === \"user_fs\" ? `${row[0]}_${row[2]}` : row[0];\r\n  const fileName = `${chip}_${type}_${row[3]}_${row[4]}b.bin`;\r\n  initiateFileDownload(data, fileName, row);\r\n}\r\n\r\nfunction initiateFileDownload(\r\n  data: Uint8Array<ArrayBufferLike>,\r\n  fileName: string,\r\n  downloadMsgName: string[] | string = \"\",\r\n) {\r\n  const blob = new Blob([data], { type: 'application/octet-stream' });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.style.display = \"none\";\r\n  a.href = url;\r\n  a.download = fileName;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  window.URL.revokeObjectURL(url);\r\n  document.body.removeChild(a);\r\n  logToTerm(`Download triggered for ${String(downloadMsgName).length > 0 ? downloadMsgName : fileName}`);\r\n}\r\n\r\n/**\r\n * Validate the provided files images and offset to see if they're valid.\r\n * @returns {string} Program input validation result\r\n */\r\nfunction validateProgramInputs() {\r\n  const offsetArr = [];\r\n  const rowCount = table.rows.length;\r\n  let row;\r\n  let offset = 0;\r\n  let fileData = null;\r\n\r\n  // check for mandatory fields\r\n  for (let index = 1; index < rowCount; index++) {\r\n    row = table.rows[index];\r\n\r\n    //offset fields checks\r\n    const offSetObj = row.cells[0].childNodes[0];\r\n    offset = parseInt(offSetObj.value);\r\n\r\n    // Non-numeric or blank offset\r\n    if (Number.isNaN(offset)) return \"Offset field in row \" + index + \" is not a valid address!\";\r\n    // Repeated offset used\r\n    else if (offsetArr.includes(offset)) return \"Offset field in row \" + index + \" is already in use!\";\r\n    else offsetArr.push(offset);\r\n\r\n    const fileObj = row.cells[1].childNodes[0];\r\n    fileData = fileObj.data;\r\n    if (fileData == null) return \"No file selected for row \" + index + \"!\";\r\n  }\r\n  return \"success\";\r\n}\r\n\r\nprogramButton.onclick = async () => {\r\n  const alertMsg = document.getElementById(\"alertmsg\");\r\n  const err = validateProgramInputs();\r\n\r\n  if (err != \"success\") {\r\n    alertMsg.innerHTML = \"<strong>\" + err + \"</strong>\";\r\n    alertDiv.style.display = \"block\";\r\n    return;\r\n  }\r\n\r\n  // Hide error message\r\n  alertDiv.style.display = \"none\";\r\n\r\n  const fileArray = [];\r\n  const progressBars = [];\r\n\r\n  for (let index = 1; index < table.rows.length; index++) {\r\n    const row = table.rows[index];\r\n\r\n    const offSetObj = row.cells[0].childNodes[0] as HTMLInputElement;\r\n    const offset = parseInt(offSetObj.value);\r\n\r\n    const fileObj = row.cells[1].childNodes[0] as ChildNode & { data: string };\r\n    const progressBar = row.cells[2].childNodes[0];\r\n\r\n    progressBar.textContent = \"0\";\r\n    progressBars.push(progressBar);\r\n\r\n    row.cells[2].style.display = \"initial\";\r\n    row.cells[3].style.display = \"none\";\r\n\r\n    fileArray.push({ data: fileObj.data, address: offset });\r\n  }\r\n\r\n  try {\r\n    const flashOptions: FlashOptions = {\r\n      fileArray: fileArray,\r\n      eraseAll: false,\r\n      compress: true,\r\n      reportProgress: (fileIndex, written, total) => {\r\n        progressBars[fileIndex].value = (written / total) * 100;\r\n      },\r\n      calculateMD5Hash: (image) => CryptoJS.MD5(CryptoJS.enc.Latin1.parse(image)),\r\n    } as FlashOptions;\r\n    await esploader.writeFlash(flashOptions);\r\n    await esploader.after();\r\n  } catch (e) {\r\n    console.error(e);\r\n    term.writeln(`Error: ${e.message}`);\r\n  } finally {\r\n    // Hide progress bars and show erase buttons\r\n    for (let index = 1; index < table.rows.length; index++) {\r\n      table.rows[index].cells[2].style.display = \"none\";\r\n      table.rows[index].cells[3].style.display = \"initial\";\r\n    }\r\n  }\r\n};\r\n\r\naddFileButton.onclick(this);\r\n","export { ESPLoader } from \"./esploader.js\";\r\nexport { ClassicReset, CustomReset, HardReset, UsbJtagSerialReset, validateCustomResetStringSequence, } from \"./reset.js\";\r\nexport { ROM } from \"./targets/rom.js\";\r\nexport { Transport } from \"./webserial.js\";\r\nexport { decodeBase64Data, getStubJsonByChipName } from \"./stubFlasher.js\";\r\nexport { PartitionDefinition, Partitions, TYPES as PARTITION_TYPES, SUBTYPES as PARTITION_SUBTYPES, } from \"./gen_esp32part.py.js\";\r\n","import { ESPError } from \"./types/error.js\";\r\nimport { deflate, Inflate } from \"pako\";\r\nimport { Transport } from \"./webserial.js\";\r\nimport { ClassicReset, CustomReset, HardReset, UsbJtagSerialReset } from \"./reset.js\";\r\nimport { getStubJsonByChipName } from \"./stubFlasher.js\";\r\nimport { padTo } from \"./util.js\";\r\nimport { loadFirmwareImage } from \"./image/index.js\";\r\n/**\r\n * Return the chip ROM based on the given magic number\r\n * @param {number} magic - magic hex number to select ROM.\r\n * @returns {ROM} The chip ROM class related to given magic hex number.\r\n */\r\nasync function magic2Chip(magic) {\r\n    switch (magic) {\r\n        case 0x00f01d83: {\r\n            const { ESP32ROM } = await import(\"./targets/esp32.js\");\r\n            return new ESP32ROM();\r\n        }\r\n        case 0xc21e06f:\r\n        case 0x6f51306f:\r\n        case 0x7c41a06f: {\r\n            const { ESP32C2ROM } = await import(\"./targets/esp32c2.js\");\r\n            return new ESP32C2ROM();\r\n        }\r\n        case 0x6921506f:\r\n        case 0x1b31506f:\r\n        case 0x4881606f:\r\n        case 0x4361606f: {\r\n            const { ESP32C3ROM } = await import(\"./targets/esp32c3.js\");\r\n            return new ESP32C3ROM();\r\n        }\r\n        case 0x2ce0806f: {\r\n            const { ESP32C6ROM } = await import(\"./targets/esp32c6.js\");\r\n            return new ESP32C6ROM();\r\n        }\r\n        case 0x2421606f:\r\n        case 0x33f0206f:\r\n        case 0x4f81606f: {\r\n            const { ESP32C61ROM } = await import(\"./targets/esp32c61.js\");\r\n            return new ESP32C61ROM();\r\n        }\r\n        case 0x1101406f:\r\n        case 0x63e1406f:\r\n        case 0x5fd1406f: {\r\n            const { ESP32C5ROM } = await import(\"./targets/esp32c5.js\");\r\n            return new ESP32C5ROM();\r\n        }\r\n        case 0xd7b73e80:\r\n        case 0x97e30068: {\r\n            const { ESP32H2ROM } = await import(\"./targets/esp32h2.js\");\r\n            return new ESP32H2ROM();\r\n        }\r\n        case 0x09: {\r\n            const { ESP32S3ROM } = await import(\"./targets/esp32s3.js\");\r\n            return new ESP32S3ROM();\r\n        }\r\n        case 0x000007c6: {\r\n            const { ESP32S2ROM } = await import(\"./targets/esp32s2.js\");\r\n            return new ESP32S2ROM();\r\n        }\r\n        case 0xfff0c101: {\r\n            const { ESP8266ROM } = await import(\"./targets/esp8266.js\");\r\n            return new ESP8266ROM();\r\n        }\r\n        case 0x0:\r\n        case 0x0addbad0:\r\n        case 0x7039ad9: {\r\n            const { ESP32P4ROM } = await import(\"./targets/esp32p4.js\");\r\n            return new ESP32P4ROM();\r\n        }\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nexport class ESPLoader {\r\n    /**\r\n     * Create a new ESPLoader to perform serial communication\r\n     * such as read/write flash memory and registers using a LoaderOptions object.\r\n     * @param {LoaderOptions} options - LoaderOptions object argument for ESPLoader.\r\n     * ```\r\n     * const myLoader = new ESPLoader({ transport: Transport, baudrate: number, terminal?: IEspLoaderTerminal });\r\n     * ```\r\n     */\r\n    constructor(options) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        this.ESP_RAM_BLOCK = 0x1800;\r\n        this.ESP_FLASH_BEGIN = 0x02;\r\n        this.ESP_FLASH_DATA = 0x03;\r\n        this.ESP_FLASH_END = 0x04;\r\n        this.ESP_MEM_BEGIN = 0x05;\r\n        this.ESP_MEM_END = 0x06;\r\n        this.ESP_MEM_DATA = 0x07;\r\n        this.ESP_WRITE_REG = 0x09;\r\n        this.ESP_READ_REG = 0x0a;\r\n        this.ESP_SPI_ATTACH = 0x0d;\r\n        this.ESP_CHANGE_BAUDRATE = 0x0f;\r\n        this.ESP_FLASH_DEFL_BEGIN = 0x10;\r\n        this.ESP_FLASH_DEFL_DATA = 0x11;\r\n        this.ESP_FLASH_DEFL_END = 0x12;\r\n        this.ESP_SPI_FLASH_MD5 = 0x13;\r\n        // Only Stub supported commands\r\n        this.ESP_ERASE_FLASH = 0xd0;\r\n        this.ESP_ERASE_REGION = 0xd1;\r\n        this.ESP_READ_FLASH = 0xd2;\r\n        this.ESP_RUN_USER_CODE = 0xd3;\r\n        this.ESP_IMAGE_MAGIC = 0xe9;\r\n        this.ESP_CHECKSUM_MAGIC = 0xef;\r\n        // Response code(s) sent by ROM\r\n        this.ROM_INVALID_RECV_MSG = 0x05; // response if an invalid message is received\r\n        this.DEFAULT_TIMEOUT = 3000;\r\n        this.ERASE_REGION_TIMEOUT_PER_MB = 30000;\r\n        this.ERASE_WRITE_TIMEOUT_PER_MB = 40000;\r\n        this.MD5_TIMEOUT_PER_MB = 8000;\r\n        this.CHIP_ERASE_TIMEOUT = 120000;\r\n        this.FLASH_READ_TIMEOUT = 100000;\r\n        this.MAX_TIMEOUT = this.CHIP_ERASE_TIMEOUT * 2;\r\n        this.SPI_ADDR_REG_MSB = true;\r\n        this.CHIP_DETECT_MAGIC_REG_ADDR = 0x40001000;\r\n        this.DETECTED_FLASH_SIZES = {\r\n            0x12: \"256KB\",\r\n            0x13: \"512KB\",\r\n            0x14: \"1MB\",\r\n            0x15: \"2MB\",\r\n            0x16: \"4MB\",\r\n            0x17: \"8MB\",\r\n            0x18: \"16MB\",\r\n            0x19: \"32MB\",\r\n            0x1a: \"64MB\",\r\n            0x1b: \"128MB\",\r\n            0x1c: \"256MB\",\r\n            0x20: \"64MB\",\r\n            0x21: \"128MB\",\r\n            0x22: \"256MB\",\r\n            0x32: \"256KB\",\r\n            0x33: \"512KB\",\r\n            0x34: \"1MB\",\r\n            0x35: \"2MB\",\r\n            0x36: \"4MB\",\r\n            0x37: \"8MB\",\r\n            0x38: \"16MB\",\r\n            0x39: \"32MB\",\r\n            0x3a: \"64MB\",\r\n        };\r\n        this.USB_JTAG_SERIAL_PID = 0x1001;\r\n        this.romBaudrate = 115200;\r\n        this.debugLogging = false;\r\n        this.syncStubDetected = false;\r\n        this.flashSize = \"detect\";\r\n        this.IS_STUB = false;\r\n        this.FLASH_WRITE_SIZE = 0x4000;\r\n        this.transport = options.transport;\r\n        this.baudrate = options.baudrate;\r\n        this.resetConstructors = {\r\n            classicReset: (transport, resetDelay) => new ClassicReset(transport, resetDelay),\r\n            customReset: (transport, sequenceString) => new CustomReset(transport, sequenceString),\r\n            hardReset: (transport, usingUsbOtg) => new HardReset(transport, usingUsbOtg),\r\n            usbJTAGSerialReset: (transport) => new UsbJtagSerialReset(transport),\r\n        };\r\n        if (options.serialOptions) {\r\n            this.serialOptions = options.serialOptions;\r\n        }\r\n        if (options.terminal) {\r\n            this.terminal = options.terminal;\r\n            this.terminal.clean();\r\n        }\r\n        if (typeof options.debugLogging !== \"undefined\") {\r\n            this.debugLogging = options.debugLogging;\r\n        }\r\n        if (options.port) {\r\n            this.transport = new Transport(options.port);\r\n        }\r\n        if (options.flashSize) {\r\n            this.flashSize = options.flashSize;\r\n        }\r\n        if (typeof options.enableTracing !== \"undefined\") {\r\n            this.transport.tracing = options.enableTracing;\r\n        }\r\n        if ((_a = options.resetConstructors) === null || _a === void 0 ? void 0 : _a.classicReset) {\r\n            this.resetConstructors.classicReset = (_b = options.resetConstructors) === null || _b === void 0 ? void 0 : _b.classicReset;\r\n        }\r\n        if ((_c = options.resetConstructors) === null || _c === void 0 ? void 0 : _c.customReset) {\r\n            this.resetConstructors.customReset = (_d = options.resetConstructors) === null || _d === void 0 ? void 0 : _d.customReset;\r\n        }\r\n        if ((_e = options.resetConstructors) === null || _e === void 0 ? void 0 : _e.hardReset) {\r\n            this.resetConstructors.hardReset = (_f = options.resetConstructors) === null || _f === void 0 ? void 0 : _f.hardReset;\r\n        }\r\n        if ((_g = options.resetConstructors) === null || _g === void 0 ? void 0 : _g.usbJTAGSerialReset) {\r\n            this.resetConstructors.usbJTAGSerialReset = (_h = options.resetConstructors) === null || _h === void 0 ? void 0 : _h.usbJTAGSerialReset;\r\n        }\r\n        this.info(\"esptool.js\");\r\n        this.info(\"Serial port \" + this.transport.getInfo());\r\n    }\r\n    _sleep(ms) {\r\n        return new Promise((resolve) => setTimeout(resolve, ms));\r\n    }\r\n    /**\r\n     * Write to ESP Loader constructor's terminal with or without new line.\r\n     * @param {string} str - String to write.\r\n     * @param {boolean} withNewline - Add new line at the end ?\r\n     */\r\n    write(str, withNewline = true) {\r\n        if (this.terminal) {\r\n            if (withNewline) {\r\n                this.terminal.writeLine(str);\r\n            }\r\n            else {\r\n                this.terminal.write(str);\r\n            }\r\n        }\r\n        else {\r\n            // eslint-disable-next-line no-console\r\n            console.log(str);\r\n        }\r\n    }\r\n    /**\r\n     * Write error message to ESP Loader constructor's terminal with or without new line.\r\n     * @param {string} str - String to write.\r\n     * @param {boolean} withNewline - Add new line at the end ?\r\n     */\r\n    error(str, withNewline = true) {\r\n        this.write(`Error: ${str}`, withNewline);\r\n    }\r\n    /**\r\n     * Write information message to ESP Loader constructor's terminal with or without new line.\r\n     * @param {string} str - String to write.\r\n     * @param {boolean} withNewline - Add new line at the end ?\r\n     */\r\n    info(str, withNewline = true) {\r\n        this.write(str, withNewline);\r\n    }\r\n    /**\r\n     * Write debug message to ESP Loader constructor's terminal with or without new line.\r\n     * @param {string} str - String to write.\r\n     * @param {boolean} withNewline - Add new line at the end ?\r\n     */\r\n    debug(str, withNewline = true) {\r\n        if (this.debugLogging) {\r\n            this.write(`Debug: ${str}`, withNewline);\r\n        }\r\n    }\r\n    /**\r\n     * Convert short integer to byte array\r\n     * @param {number} i - Number to convert.\r\n     * @returns {Uint8Array} Byte array.\r\n     */\r\n    _shortToBytearray(i) {\r\n        return new Uint8Array([i & 0xff, (i >> 8) & 0xff]);\r\n    }\r\n    /**\r\n     * Convert an integer to byte array\r\n     * @param {number} i - Number to convert.\r\n     * @returns {ROM} The chip ROM class related to given magic hex number.\r\n     */\r\n    _intToByteArray(i) {\r\n        return new Uint8Array([i & 0xff, (i >> 8) & 0xff, (i >> 16) & 0xff, (i >> 24) & 0xff]);\r\n    }\r\n    /**\r\n     * Convert a byte array to short integer.\r\n     * @param {number} i - Number to convert.\r\n     * @param {number} j - Number to convert.\r\n     * @returns {number} Return a short integer number.\r\n     */\r\n    _byteArrayToShort(i, j) {\r\n        return i | (j >> 8);\r\n    }\r\n    /**\r\n     * Convert a byte array to integer.\r\n     * @param {number} i - Number to convert.\r\n     * @param {number} j - Number to convert.\r\n     * @param {number} k - Number to convert.\r\n     * @param {number} l - Number to convert.\r\n     * @returns {number} Return a integer number.\r\n     */\r\n    _byteArrayToInt(i, j, k, l) {\r\n        return i | (j << 8) | (k << 16) | (l << 24);\r\n    }\r\n    /**\r\n     * Append a buffer array after another buffer array\r\n     * @param {ArrayBuffer} buffer1 - First array buffer.\r\n     * @param {ArrayBuffer} buffer2 - magic hex number to select ROM.\r\n     * @returns {ArrayBufferLike} Return an array buffer.\r\n     */\r\n    _appendBuffer(buffer1, buffer2) {\r\n        const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\r\n        tmp.set(new Uint8Array(buffer1), 0);\r\n        tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\r\n        return tmp.buffer;\r\n    }\r\n    /**\r\n     * Append a buffer array after another buffer array\r\n     * @param {Uint8Array} arr1 - First array buffer.\r\n     * @param {Uint8Array} arr2 - magic hex number to select ROM.\r\n     * @returns {Uint8Array} Return a 8 bit unsigned array.\r\n     */\r\n    _appendArray(arr1, arr2) {\r\n        const c = new Uint8Array(arr1.length + arr2.length);\r\n        c.set(arr1, 0);\r\n        c.set(arr2, arr1.length);\r\n        return c;\r\n    }\r\n    /**\r\n     * Convert a unsigned 8 bit integer array to byte string.\r\n     * @param {Uint8Array} u8Array - magic hex number to select ROM.\r\n     * @returns {string} Return the equivalent string.\r\n     */\r\n    ui8ToBstr(u8Array) {\r\n        let bStr = \"\";\r\n        for (let i = 0; i < u8Array.length; i++) {\r\n            bStr += String.fromCharCode(u8Array[i]);\r\n        }\r\n        return bStr;\r\n    }\r\n    /**\r\n     * Convert a byte string to unsigned 8 bit integer array.\r\n     * @param {string} bStr - binary string input\r\n     * @returns {Uint8Array} Return a 8 bit unsigned integer array.\r\n     */\r\n    bstrToUi8(bStr) {\r\n        const u8Array = new Uint8Array(bStr.length);\r\n        for (let i = 0; i < bStr.length; i++) {\r\n            u8Array[i] = bStr.charCodeAt(i);\r\n        }\r\n        return u8Array;\r\n    }\r\n    /**\r\n     * Flush the serial input by raw read with 200 ms timeout.\r\n     */\r\n    async flushInput() {\r\n        try {\r\n            await this.transport.flushInput();\r\n        }\r\n        catch (e) {\r\n            this.error(e.message);\r\n        }\r\n    }\r\n    /**\r\n     * Use the device serial port read function with given timeout to create a valid packet.\r\n     * @param {number} op Operation number\r\n     * @param {number} timeout timeout number in milliseconds\r\n     * @returns {[number, Uint8Array]} valid response packet.\r\n     */\r\n    async readPacket(op = null, timeout = this.DEFAULT_TIMEOUT) {\r\n        // Check up-to next 100 packets for valid response packet\r\n        for (let i = 0; i < 100; i++) {\r\n            const { value: p } = await this.transport.read(timeout).next();\r\n            if (!p || p.length < 8) {\r\n                continue;\r\n            }\r\n            const resp = p[0];\r\n            if (resp !== 1) {\r\n                continue;\r\n            }\r\n            const opRet = p[1];\r\n            const val = this._byteArrayToInt(p[4], p[5], p[6], p[7]);\r\n            const data = p.slice(8);\r\n            if (resp == 1) {\r\n                if (op == null || opRet == op) {\r\n                    return [val, data];\r\n                }\r\n                else if (data[0] != 0 && data[1] == this.ROM_INVALID_RECV_MSG) {\r\n                    await this.flushInput();\r\n                    throw new ESPError(\"unsupported command error\");\r\n                }\r\n            }\r\n        }\r\n        throw new ESPError(\"invalid response\");\r\n    }\r\n    /**\r\n     * Write a serial command to the chip\r\n     * @param {number} op - Operation number\r\n     * @param {Uint8Array} data - Unsigned 8 bit array\r\n     * @param {number} chk - channel number\r\n     * @param {boolean} waitResponse - wait for response ?\r\n     * @param {number} timeout - timeout number in milliseconds\r\n     * @returns {Promise<[number, Uint8Array]>} Return a number and a 8 bit unsigned integer array.\r\n     */\r\n    async command(op = null, data = new Uint8Array(0), chk = 0, waitResponse = true, timeout = this.DEFAULT_TIMEOUT) {\r\n        if (op != null) {\r\n            if (this.transport.tracing) {\r\n                this.transport.trace(`command op:0x${op.toString(16).padStart(2, \"0\")} data len=${data.length} wait_response=${waitResponse ? 1 : 0} timeout=${(timeout / 1000).toFixed(3)} data=${this.transport.hexConvert(data)}`);\r\n            }\r\n            const pkt = new Uint8Array(8 + data.length);\r\n            pkt[0] = 0x00;\r\n            pkt[1] = op;\r\n            pkt[2] = this._shortToBytearray(data.length)[0];\r\n            pkt[3] = this._shortToBytearray(data.length)[1];\r\n            pkt[4] = this._intToByteArray(chk)[0];\r\n            pkt[5] = this._intToByteArray(chk)[1];\r\n            pkt[6] = this._intToByteArray(chk)[2];\r\n            pkt[7] = this._intToByteArray(chk)[3];\r\n            let i;\r\n            for (i = 0; i < data.length; i++) {\r\n                pkt[8 + i] = data[i];\r\n            }\r\n            await this.transport.write(pkt);\r\n        }\r\n        if (!waitResponse) {\r\n            return [0, new Uint8Array(0)];\r\n        }\r\n        return this.readPacket(op, timeout);\r\n    }\r\n    /**\r\n     * Read a register from chip.\r\n     * @param {number} addr - Register address number\r\n     * @param {number} timeout - Timeout in milliseconds (Default: 3000ms)\r\n     * @returns {number} - Command number value\r\n     */\r\n    async readReg(addr, timeout = this.DEFAULT_TIMEOUT) {\r\n        const pkt = this._intToByteArray(addr);\r\n        const val = await this.command(this.ESP_READ_REG, pkt, undefined, undefined, timeout);\r\n        return val[0];\r\n    }\r\n    /**\r\n     * Write a number value to register address in chip.\r\n     * @param {number} addr - Register address number\r\n     * @param {number} value - Number value to write in register\r\n     * @param {number} mask - Hex number for mask\r\n     * @param {number} delayUs Delay number\r\n     * @param {number} delayAfterUs Delay after previous delay\r\n     */\r\n    async writeReg(addr, value, mask = 0xffffffff, delayUs = 0, delayAfterUs = 0) {\r\n        let pkt = this._appendArray(this._intToByteArray(addr), this._intToByteArray(value));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(mask));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(delayUs));\r\n        if (delayAfterUs > 0) {\r\n            pkt = this._appendArray(pkt, this._intToByteArray(this.chip.UART_DATE_REG_ADDR));\r\n            pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n            pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n            pkt = this._appendArray(pkt, this._intToByteArray(delayAfterUs));\r\n        }\r\n        await this.checkCommand(\"write target memory\", this.ESP_WRITE_REG, pkt);\r\n    }\r\n    /**\r\n     * Sync chip by sending sync command.\r\n     * @returns {[number, Uint8Array]} Command result\r\n     */\r\n    async sync() {\r\n        this.debug(\"Sync\");\r\n        const cmd = new Uint8Array(36);\r\n        let i;\r\n        cmd[0] = 0x07;\r\n        cmd[1] = 0x07;\r\n        cmd[2] = 0x12;\r\n        cmd[3] = 0x20;\r\n        for (i = 0; i < 32; i++) {\r\n            cmd[4 + i] = 0x55;\r\n        }\r\n        try {\r\n            let resp = await this.command(0x08, cmd, undefined, undefined, 100);\r\n            // ROM bootloaders send some non-zero \"val\" response. The flasher stub sends 0.\r\n            // If we receive 0 then it probably indicates that the chip wasn't or couldn't be\r\n            // reset properly and esptool is talking to the flasher stub.\r\n            this.syncStubDetected = resp[0] === 0;\r\n            for (let i = 0; i < 7; i++) {\r\n                resp = await this.command();\r\n                this.syncStubDetected = this.syncStubDetected && resp[0] === 0;\r\n            }\r\n            return resp;\r\n        }\r\n        catch (e) {\r\n            this.debug(\"Sync err \" + e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Attempt to connect to the chip by sending a reset sequence and later a sync command.\r\n     * @param {string} mode - Reset mode to use\r\n     * @param {ResetStrategy} resetStrategy - Reset strategy class to use for connect\r\n     * @returns {string} - Returns 'success' or 'error' message.\r\n     */\r\n    async _connectAttempt(mode = \"default_reset\", resetStrategy) {\r\n        this.debug(\"_connect_attempt \" + mode);\r\n        if (resetStrategy) {\r\n            await resetStrategy.reset();\r\n        }\r\n        const waitingBytes = this.transport.inWaiting();\r\n        const readBytes = await this.transport.newRead(waitingBytes > 0 ? waitingBytes : 1, this.DEFAULT_TIMEOUT);\r\n        const binaryString = Array.from(readBytes, (byte) => String.fromCharCode(byte)).join(\"\");\r\n        const regex = /boot:(0x[0-9a-fA-F]+)(.*waiting for download)?/;\r\n        const match = binaryString.match(regex);\r\n        let bootLogDetected = false, bootMode = \"\", downloadMode = false;\r\n        if (match) {\r\n            bootLogDetected = true;\r\n            bootMode = match[1];\r\n            downloadMode = !!match[2];\r\n        }\r\n        let lastError = \"\";\r\n        for (let i = 0; i < 5; i++) {\r\n            try {\r\n                this.debug(`Sync connect attempt ${i}`);\r\n                const resp = await this.sync();\r\n                this.debug(resp[0].toString());\r\n                return \"success\";\r\n            }\r\n            catch (error) {\r\n                this.debug(`Error at sync ${error}`);\r\n                if (error instanceof Error) {\r\n                    lastError = error.message;\r\n                }\r\n                else if (typeof error === \"string\") {\r\n                    lastError = error;\r\n                }\r\n                else {\r\n                    lastError = JSON.stringify(error);\r\n                }\r\n            }\r\n        }\r\n        if (bootLogDetected) {\r\n            lastError = `Wrong boot mode detected (${bootMode}).\r\n        This chip needs to be in download mode.`;\r\n            if (downloadMode) {\r\n                lastError = `Download mode successfully detected, but getting no sync reply:\r\n           The serial TX path seems to be down.`;\r\n            }\r\n        }\r\n        return lastError;\r\n    }\r\n    /**\r\n     * Constructs a sequence of reset strategies based on the OS,\r\n     * used ESP chip, external settings, and environment variables.\r\n     * Returns a tuple of one or more reset strategies to be tried sequentially.\r\n     * @param {string} mode - Reset mode to use\r\n     * @returns {ResetStrategy[]} - Array of reset strategies\r\n     */\r\n    constructResetSequence(mode) {\r\n        if (mode !== \"no_reset\") {\r\n            if (mode === \"usb_reset\" || this.transport.getPid() === this.USB_JTAG_SERIAL_PID) {\r\n                // Custom reset sequence, which is required when the device\r\n                // is connecting via its USB-JTAG-Serial peripheral\r\n                if (this.resetConstructors.usbJTAGSerialReset) {\r\n                    this.debug(\"using USB JTAG Serial Reset\");\r\n                    return [this.resetConstructors.usbJTAGSerialReset(this.transport)];\r\n                }\r\n            }\r\n            else {\r\n                const DEFAULT_RESET_DELAY = 50;\r\n                const EXTRA_DELAY = DEFAULT_RESET_DELAY + 500;\r\n                if (this.resetConstructors.classicReset) {\r\n                    this.debug(\"using Classic Serial Reset\");\r\n                    return [\r\n                        this.resetConstructors.classicReset(this.transport, DEFAULT_RESET_DELAY),\r\n                        this.resetConstructors.classicReset(this.transport, EXTRA_DELAY),\r\n                    ];\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    /**\r\n     * Perform a connection to chip.\r\n     * @param {string} mode - Reset mode to use. Example: 'default_reset' | 'no_reset'\r\n     * @param {number} attempts - Number of connection attempts\r\n     * @param {boolean} detecting - Detect the connected chip\r\n     */\r\n    async connect(mode = \"default_reset\", attempts = 7, detecting = true) {\r\n        let resp;\r\n        this.info(\"Connecting...\", false);\r\n        await this.transport.connect(this.romBaudrate, this.serialOptions);\r\n        const resetSequences = this.constructResetSequence(mode);\r\n        for (let i = 0; i < attempts; i++) {\r\n            const resetSequence = resetSequences.length > 0 ? resetSequences[i % resetSequences.length] : null;\r\n            resp = await this._connectAttempt(mode, resetSequence);\r\n            if (resp === \"success\") {\r\n                break;\r\n            }\r\n        }\r\n        if (resp !== \"success\") {\r\n            throw new ESPError(\"Failed to connect with the device\");\r\n        }\r\n        this.debug(\"Connect attempt successful.\");\r\n        this.info(\"\\n\\r\", false);\r\n        if (detecting) {\r\n            const chipMagicValue = (await this.readReg(this.CHIP_DETECT_MAGIC_REG_ADDR)) >>> 0;\r\n            this.info(`Chip Magic: 0x${chipMagicValue.toString(16)}`);\r\n            this.debug(\"Chip Magic \" + chipMagicValue.toString(16));\r\n            const chip = await magic2Chip(chipMagicValue);\r\n            if (typeof this.chip === null) {\r\n                throw new ESPError(`Unexpected CHIP magic value ${chipMagicValue}. Failed to autodetect chip type.`);\r\n            }\r\n            else {\r\n                this.chip = chip;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Connect and detect the existing chip.\r\n     * @param {string} mode Reset mode to use for connection.\r\n     */\r\n    async detectChip(mode = \"default_reset\") {\r\n        await this.connect(mode);\r\n        this.info(\"Detecting chip type... \", false);\r\n        if (this.chip != null) {\r\n            this.info(this.chip.CHIP_NAME);\r\n        }\r\n        else {\r\n            this.info(\"unknown!\");\r\n        }\r\n    }\r\n    /**\r\n     * Execute the command and check the command response.\r\n     * @param {string} opDescription Command operation description.\r\n     * @param {number} op Command operation number\r\n     * @param {Uint8Array} data Command value\r\n     * @param {number} chk Checksum to use\r\n     * @param {number} timeout TImeout number in milliseconds (ms)\r\n     * @returns {number} Command result\r\n     */\r\n    async checkCommand(opDescription = \"\", op = null, data = new Uint8Array(0), chk = 0, timeout = this.DEFAULT_TIMEOUT) {\r\n        this.debug(\"check_command \" + opDescription);\r\n        const resp = await this.command(op, data, chk, undefined, timeout);\r\n        if (resp[1].length > 4) {\r\n            return resp[1];\r\n        }\r\n        else {\r\n            return resp[0];\r\n        }\r\n    }\r\n    /**\r\n     * Start downloading an application image to RAM\r\n     * @param {number} size Image size number\r\n     * @param {number} blocks Number of data blocks\r\n     * @param {number} blocksize Size of each data block\r\n     * @param {number} offset Image offset number\r\n     */\r\n    async memBegin(size, blocks, blocksize, offset) {\r\n        /* XXX: Add check to ensure that STUB is not getting overwritten */\r\n        if (this.IS_STUB) {\r\n            const loadStart = offset;\r\n            const loadEnd = offset + size;\r\n            const stub = await getStubJsonByChipName(this.chip.CHIP_NAME);\r\n            if (stub) {\r\n                const areasToCheck = [\r\n                    [stub.bss_start || stub.data_start, stub.data_start + stub.decodedData.length],\r\n                    [stub.text_start, stub.text_start + stub.decodedText.length],\r\n                ];\r\n                for (const [stubStart, stubEnd] of areasToCheck) {\r\n                    if (loadStart < stubEnd && loadEnd > stubStart) {\r\n                        throw new ESPError(`Software loader is resident at 0x${stubStart.toString(16).padStart(8, \"0\")}-0x${stubEnd\r\n                            .toString(16)\r\n                            .padStart(8, \"0\")}.\r\n            Can't load binary at overlapping address range 0x${loadStart.toString(16).padStart(8, \"0\")}-0x${loadEnd\r\n                            .toString(16)\r\n                            .padStart(8, \"0\")}.\r\n            Either change binary loading address, or use the no-stub option to disable the software loader.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.debug(\"mem_begin \" + size + \" \" + blocks + \" \" + blocksize + \" \" + offset.toString(16));\r\n        let pkt = this._appendArray(this._intToByteArray(size), this._intToByteArray(blocks));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(blocksize));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(offset));\r\n        await this.checkCommand(\"enter RAM download mode\", this.ESP_MEM_BEGIN, pkt);\r\n    }\r\n    /**\r\n     * Get the checksum for given unsigned 8-bit array\r\n     * @param {Uint8Array} data Unsigned 8-bit integer array\r\n     * @param {number} state Initial checksum\r\n     * @returns {number} - Array checksum\r\n     */\r\n    checksum(data, state = this.ESP_CHECKSUM_MAGIC) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            state ^= data[i];\r\n        }\r\n        return state;\r\n    }\r\n    /**\r\n     * Send a block of image to RAM\r\n     * @param {Uint8Array} buffer Unsigned 8-bit array\r\n     * @param {number} seq Sequence number\r\n     */\r\n    async memBlock(buffer, seq) {\r\n        let pkt = this._appendArray(this._intToByteArray(buffer.length), this._intToByteArray(seq));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        pkt = this._appendArray(pkt, buffer);\r\n        const checksum = this.checksum(buffer);\r\n        await this.checkCommand(\"write to target RAM\", this.ESP_MEM_DATA, pkt, checksum);\r\n    }\r\n    /**\r\n     * Leave RAM download mode and run application\r\n     * @param {number} entrypoint - Entrypoint number\r\n     */\r\n    async memFinish(entrypoint) {\r\n        const isEntry = entrypoint === 0 ? 1 : 0;\r\n        const pkt = this._appendArray(this._intToByteArray(isEntry), this._intToByteArray(entrypoint));\r\n        await this.checkCommand(\"leave RAM download mode\", this.ESP_MEM_END, pkt, undefined, 200); // XXX: handle non-stub with diff timeout\r\n    }\r\n    /**\r\n     * Configure SPI flash pins\r\n     * @param {number} hspiArg -  Argument for SPI attachment\r\n     */\r\n    async flashSpiAttach(hspiArg) {\r\n        const pkt = this._intToByteArray(hspiArg);\r\n        await this.checkCommand(\"configure SPI flash pins\", this.ESP_SPI_ATTACH, pkt);\r\n    }\r\n    /**\r\n     * Scale timeouts which are size-specific.\r\n     * @param {number} secondsPerMb Seconds per megabytes as number\r\n     * @param {number} sizeBytes Size bytes number\r\n     * @returns {number} - Scaled timeout for specified size.\r\n     */\r\n    timeoutPerMb(secondsPerMb, sizeBytes) {\r\n        const result = secondsPerMb * (sizeBytes / 1000000);\r\n        if (result < 3000) {\r\n            return 3000;\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    }\r\n    /**\r\n     * Start downloading to Flash (performs an erase)\r\n     * @param {number} size Size to erase\r\n     * @param {number} offset Offset to erase\r\n     * @returns {number} Number of blocks (of size self.FLASH_WRITE_SIZE) to write.\r\n     */\r\n    async flashBegin(size, offset) {\r\n        const numBlocks = Math.floor((size + this.FLASH_WRITE_SIZE - 1) / this.FLASH_WRITE_SIZE);\r\n        const eraseSize = this.chip.getEraseSize(offset, size);\r\n        const d = new Date();\r\n        const t1 = d.getTime();\r\n        let timeout = 3000;\r\n        if (this.IS_STUB == false) {\r\n            timeout = this.timeoutPerMb(this.ERASE_REGION_TIMEOUT_PER_MB, size);\r\n        }\r\n        this.debug(\"flash begin \" + eraseSize + \" \" + numBlocks + \" \" + this.FLASH_WRITE_SIZE + \" \" + offset + \" \" + size);\r\n        let pkt = this._appendArray(this._intToByteArray(eraseSize), this._intToByteArray(numBlocks));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(this.FLASH_WRITE_SIZE));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(offset));\r\n        if (this.IS_STUB == false) {\r\n            pkt = this._appendArray(pkt, this._intToByteArray(0)); // XXX: Support encrypted\r\n        }\r\n        await this.checkCommand(\"enter Flash download mode\", this.ESP_FLASH_BEGIN, pkt, undefined, timeout);\r\n        const t2 = d.getTime();\r\n        if (size != 0 && this.IS_STUB == false) {\r\n            this.info(\"Took \" + (t2 - t1) / 1000 + \".\" + ((t2 - t1) % 1000) + \"s to erase flash block\");\r\n        }\r\n        return numBlocks;\r\n    }\r\n    /**\r\n     * Start downloading compressed data to Flash (performs an erase)\r\n     * @param {number} size Write size\r\n     * @param {number} compsize Compressed size\r\n     * @param {number} offset Offset for write\r\n     * @returns {number} Returns number of blocks (size self.FLASH_WRITE_SIZE) to write.\r\n     */\r\n    async flashDeflBegin(size, compsize, offset) {\r\n        const numBlocks = Math.floor((compsize + this.FLASH_WRITE_SIZE - 1) / this.FLASH_WRITE_SIZE);\r\n        const eraseBlocks = Math.floor((size + this.FLASH_WRITE_SIZE - 1) / this.FLASH_WRITE_SIZE);\r\n        const d = new Date();\r\n        const t1 = d.getTime();\r\n        let writeSize, timeout;\r\n        if (this.IS_STUB) {\r\n            writeSize = size;\r\n            timeout = this.DEFAULT_TIMEOUT;\r\n        }\r\n        else {\r\n            writeSize = eraseBlocks * this.FLASH_WRITE_SIZE;\r\n            timeout = this.timeoutPerMb(this.ERASE_REGION_TIMEOUT_PER_MB, writeSize);\r\n        }\r\n        this.info(\"Compressed \" + size + \" bytes to \" + compsize + \"...\");\r\n        let pkt = this._appendArray(this._intToByteArray(writeSize), this._intToByteArray(numBlocks));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(this.FLASH_WRITE_SIZE));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(offset));\r\n        if ((this.chip.CHIP_NAME === \"ESP32-S2\" ||\r\n            this.chip.CHIP_NAME === \"ESP32-S3\" ||\r\n            this.chip.CHIP_NAME === \"ESP32-C3\" ||\r\n            this.chip.CHIP_NAME === \"ESP32-C2\") &&\r\n            this.IS_STUB === false) {\r\n            pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        }\r\n        await this.checkCommand(\"enter compressed flash mode\", this.ESP_FLASH_DEFL_BEGIN, pkt, undefined, timeout);\r\n        const t2 = d.getTime();\r\n        if (size != 0 && this.IS_STUB === false) {\r\n            this.info(\"Took \" + (t2 - t1) / 1000 + \".\" + ((t2 - t1) % 1000) + \"s to erase flash block\");\r\n        }\r\n        return numBlocks;\r\n    }\r\n    /**\r\n     * Write block to flash, retry if fail\r\n     * @param {Uint8Array} data Unsigned 8-bit array data.\r\n     * @param {number} seq Sequence number\r\n     * @param {number} timeout Timeout in milliseconds (ms)\r\n     */\r\n    async flashBlock(data, seq, timeout) {\r\n        let pkt = this._appendArray(this._intToByteArray(data.length), this._intToByteArray(seq));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        pkt = this._appendArray(pkt, data);\r\n        const checksum = this.checksum(data);\r\n        await this.checkCommand(\"write to target Flash after seq \" + seq, this.ESP_FLASH_DATA, pkt, checksum, timeout);\r\n    }\r\n    /**\r\n     * Write block to flash, send compressed, retry if fail\r\n     * @param {Uint8Array} data Unsigned int 8-bit array data to write\r\n     * @param {number} seq Sequence number\r\n     * @param {number} timeout Timeout in milliseconds (ms)\r\n     */\r\n    async flashDeflBlock(data, seq, timeout) {\r\n        let pkt = this._appendArray(this._intToByteArray(data.length), this._intToByteArray(seq));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        pkt = this._appendArray(pkt, data);\r\n        const checksum = this.checksum(data);\r\n        this.debug(\"flash_defl_block \" + data[0].toString(16) + \" \" + data[1].toString(16));\r\n        await this.checkCommand(\"write compressed data to flash after seq \" + seq, this.ESP_FLASH_DEFL_DATA, pkt, checksum, timeout);\r\n    }\r\n    /**\r\n     * Leave flash mode and run/reboot\r\n     * @param {boolean} reboot Reboot after leaving flash mode ?\r\n     */\r\n    async flashFinish(reboot = false) {\r\n        const val = reboot ? 0 : 1;\r\n        const pkt = this._intToByteArray(val);\r\n        await this.checkCommand(\"leave Flash mode\", this.ESP_FLASH_END, pkt);\r\n    }\r\n    /**\r\n     * Leave compressed flash mode and run/reboot\r\n     * @param {boolean} reboot Reboot after leaving flash mode ?\r\n     */\r\n    async flashDeflFinish(reboot = false) {\r\n        const val = reboot ? 0 : 1;\r\n        const pkt = this._intToByteArray(val);\r\n        await this.checkCommand(\"leave compressed flash mode\", this.ESP_FLASH_DEFL_END, pkt);\r\n    }\r\n    /**\r\n     * Run an arbitrary SPI flash command.\r\n     *\r\n     * This function uses the \"USR_COMMAND\" functionality in the ESP\r\n     * SPI hardware, rather than the precanned commands supported by\r\n     * hardware. So the value of spiflashCommand is an actual command\r\n     * byte, sent over the wire.\r\n     *\r\n     * After writing command byte, writes 'data' to MOSI and then\r\n     * reads back 'readBits' of reply on MISO. Result is a number.\r\n     * @param {number} spiflashCommand Command to execute in SPI\r\n     * @param {Uint8Array} data Data to send\r\n     * @param {number} readBits Number of bits to read\r\n     * @param {number} addr Address to use\r\n     * @param {number} addrLen Length of address\r\n     * @param {number} dummyLen length of dummy\r\n     * @returns {number} Register SPI_W0_REG value\r\n     */\r\n    async runSpiflashCommand(spiflashCommand, data, readBits, addr = null, addrLen = 0, dummyLen = 0) {\r\n        // SPI_USR register flags\r\n        const SPI_USR_COMMAND = 1 << 31;\r\n        const SPI_USR_ADDR = 1 << 30;\r\n        const SPI_USR_DUMMY = 1 << 29;\r\n        const SPI_USR_MISO = 1 << 28;\r\n        const SPI_USR_MOSI = 1 << 27;\r\n        // SPI registers, base address differs ESP32* vs 8266\r\n        const base = this.chip.SPI_REG_BASE;\r\n        const SPI_CMD_REG = base + 0x00;\r\n        const SPI_ADDR_REG = base + 0x04;\r\n        const SPI_USR_REG = base + this.chip.SPI_USR_OFFS;\r\n        const SPI_USR1_REG = base + this.chip.SPI_USR1_OFFS;\r\n        const SPI_USR2_REG = base + this.chip.SPI_USR2_OFFS;\r\n        const SPI_W0_REG = base + this.chip.SPI_W0_OFFS;\r\n        let setDataLengths;\r\n        if (this.chip.SPI_MOSI_DLEN_OFFS != null) {\r\n            setDataLengths = async (mosiBits, misoBits) => {\r\n                const SPI_MOSI_DLEN_REG = base + this.chip.SPI_MOSI_DLEN_OFFS;\r\n                const SPI_MISO_DLEN_REG = base + this.chip.SPI_MISO_DLEN_OFFS;\r\n                if (mosiBits > 0) {\r\n                    await this.writeReg(SPI_MOSI_DLEN_REG, mosiBits - 1);\r\n                }\r\n                if (misoBits > 0) {\r\n                    await this.writeReg(SPI_MISO_DLEN_REG, misoBits - 1);\r\n                }\r\n                let flags = 0;\r\n                if (dummyLen > 0) {\r\n                    flags |= dummyLen - 1;\r\n                }\r\n                if (addrLen > 0) {\r\n                    flags |= (addrLen - 1) << SPI_USR_ADDR_LEN_SHIFT;\r\n                }\r\n                if (flags) {\r\n                    await this.writeReg(SPI_USR1_REG, flags);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            setDataLengths = async (mosiBits, misoBits) => {\r\n                const SPI_DATA_LEN_REG = SPI_USR1_REG;\r\n                const SPI_MOSI_BITLEN_S = 17;\r\n                const SPI_MISO_BITLEN_S = 8;\r\n                const mosiMask = mosiBits === 0 ? 0 : mosiBits - 1;\r\n                const misoMask = misoBits === 0 ? 0 : misoBits - 1;\r\n                let flags = (misoMask << SPI_MISO_BITLEN_S) | (mosiMask << SPI_MOSI_BITLEN_S);\r\n                if (dummyLen > 0) {\r\n                    flags |= dummyLen - 1;\r\n                }\r\n                if (addrLen > 0) {\r\n                    flags |= (addrLen - 1) << SPI_USR_ADDR_LEN_SHIFT;\r\n                }\r\n                await this.writeReg(SPI_DATA_LEN_REG, flags);\r\n            };\r\n        }\r\n        const SPI_CMD_USR = 1 << 18;\r\n        const SPI_USR2_COMMAND_LEN_SHIFT = 28;\r\n        const SPI_USR_ADDR_LEN_SHIFT = 26;\r\n        if (readBits > 32) {\r\n            throw new ESPError(\"Reading more than 32 bits back from a SPI flash operation is unsupported\");\r\n        }\r\n        if (data.length > 64) {\r\n            throw new ESPError(\"Writing more than 64 bytes of data with one SPI command is unsupported\");\r\n        }\r\n        const dataBits = data.length * 8;\r\n        const oldSpiUsr = await this.readReg(SPI_USR_REG);\r\n        const oldSpiUsr2 = await this.readReg(SPI_USR2_REG);\r\n        let flags = SPI_USR_COMMAND;\r\n        if (readBits > 0) {\r\n            flags |= SPI_USR_MISO;\r\n        }\r\n        if (dataBits > 0) {\r\n            flags |= SPI_USR_MOSI;\r\n        }\r\n        if (addrLen > 0) {\r\n            flags |= SPI_USR_ADDR;\r\n        }\r\n        if (dummyLen > 0) {\r\n            flags |= SPI_USR_DUMMY;\r\n        }\r\n        await setDataLengths(dataBits, readBits);\r\n        await this.writeReg(SPI_USR_REG, flags);\r\n        let val = (7 << SPI_USR2_COMMAND_LEN_SHIFT) | spiflashCommand;\r\n        await this.writeReg(SPI_USR2_REG, val);\r\n        if (addr && addrLen > 0) {\r\n            if (this.SPI_ADDR_REG_MSB) {\r\n                addr = addr << (32 - addrLen);\r\n            }\r\n            await this.writeReg(SPI_ADDR_REG, addr);\r\n        }\r\n        if (dataBits == 0) {\r\n            await this.writeReg(SPI_W0_REG, 0);\r\n        }\r\n        else {\r\n            data = padTo(data, 4, 0x00);\r\n            const words = [];\r\n            for (let i = 0; i < data.length; i += 4) {\r\n                words.push((data[i] | (data[i + 1] << 8) | (data[i + 2] << 16) | (data[i + 3] << 24)) >>> 0);\r\n            }\r\n            let nextReg = SPI_W0_REG;\r\n            for (const word of words) {\r\n                await this.writeReg(nextReg, word);\r\n                nextReg += 4;\r\n            }\r\n        }\r\n        await this.writeReg(SPI_CMD_REG, SPI_CMD_USR);\r\n        // wait done function\r\n        let i;\r\n        for (i = 0; i < 10; i++) {\r\n            val = (await this.readReg(SPI_CMD_REG)) & SPI_CMD_USR;\r\n            if (val == 0) {\r\n                break;\r\n            }\r\n        }\r\n        if (i === 10) {\r\n            throw new ESPError(\"SPI command did not complete in time\");\r\n        }\r\n        const status = await this.readReg(SPI_W0_REG);\r\n        await this.writeReg(SPI_USR_REG, oldSpiUsr);\r\n        await this.writeReg(SPI_USR2_REG, oldSpiUsr2);\r\n        return status;\r\n    }\r\n    /**\r\n     * Read flash id by executing the SPIFLASH_RDID flash command.\r\n     * @returns {Promise<number>} Register SPI_W0_REG value\r\n     */\r\n    async readFlashId() {\r\n        const SPIFLASH_RDID = 0x9f;\r\n        const pkt = new Uint8Array(0);\r\n        return await this.runSpiflashCommand(SPIFLASH_RDID, pkt, 24);\r\n    }\r\n    /**\r\n     * Execute the erase flash command\r\n     * @returns {Promise<number | Uint8Array>} Erase flash command result\r\n     */\r\n    async eraseFlash() {\r\n        this.info(\"Erasing flash (this may take a while)...\");\r\n        let d = new Date();\r\n        const t1 = d.getTime();\r\n        const ret = await this.checkCommand(\"erase flash\", this.ESP_ERASE_FLASH, undefined, undefined, this.CHIP_ERASE_TIMEOUT);\r\n        d = new Date();\r\n        const t2 = d.getTime();\r\n        this.info(\"Chip erase completed successfully in \" + (t2 - t1) / 1000 + \"s\");\r\n        return ret;\r\n    }\r\n    /**\r\n     * Convert a number or unsigned 8-bit array to hex string\r\n     * @param {number | Uint8Array } buffer Data to convert to hex string.\r\n     * @returns {string} A hex string\r\n     */\r\n    toHex(buffer) {\r\n        return Array.prototype.map.call(buffer, (x) => (\"00\" + x.toString(16)).slice(-2)).join(\"\");\r\n    }\r\n    /**\r\n     * Calculate the MD5 Checksum command\r\n     * @param {number} addr Address number\r\n     * @param {number} size Package size\r\n     * @returns {string} MD5 Checksum string\r\n     */\r\n    async flashMd5sum(addr, size) {\r\n        const timeout = this.timeoutPerMb(this.MD5_TIMEOUT_PER_MB, size);\r\n        let pkt = this._appendArray(this._intToByteArray(addr), this._intToByteArray(size));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0));\r\n        let res = await this.checkCommand(\"calculate md5sum\", this.ESP_SPI_FLASH_MD5, pkt, undefined, timeout);\r\n        if (res instanceof Uint8Array && res.length > 16) {\r\n            res = res.slice(0, 16);\r\n        }\r\n        const strmd5 = this.toHex(res);\r\n        return strmd5;\r\n    }\r\n    /**\r\n     * Read flash memory from the chip.\r\n     * @param {number} addr Address number\r\n     * @param {number} size Package size\r\n     * @param {FlashReadCallback} onPacketReceived Callback function to call when packet is received\r\n     * @returns {Uint8Array} Flash read data\r\n     */\r\n    async readFlash(addr, size, onPacketReceived = null) {\r\n        let pkt = this._appendArray(this._intToByteArray(addr), this._intToByteArray(size));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(0x1000));\r\n        pkt = this._appendArray(pkt, this._intToByteArray(1024));\r\n        const res = await this.checkCommand(\"read flash\", this.ESP_READ_FLASH, pkt);\r\n        if (res != 0) {\r\n            throw new ESPError(\"Failed to read memory: \" + res);\r\n        }\r\n        let resp = new Uint8Array(0);\r\n        while (resp.length < size) {\r\n            const { value: packet } = await this.transport.read(this.FLASH_READ_TIMEOUT).next();\r\n            if (packet instanceof Uint8Array) {\r\n                if (packet.length > 0) {\r\n                    resp = this._appendArray(resp, packet);\r\n                    await this.transport.write(this._intToByteArray(resp.length));\r\n                    if (onPacketReceived) {\r\n                        onPacketReceived(packet, resp.length, size);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw new ESPError(\"Failed to read memory: \" + packet);\r\n            }\r\n        }\r\n        return resp;\r\n    }\r\n    /**\r\n     * Upload the flasher ROM bootloader (flasher stub) to the chip.\r\n     * @returns {ROM} The Chip ROM\r\n     */\r\n    async runStub() {\r\n        if (this.syncStubDetected) {\r\n            this.info(\"Stub is already running. No upload is necessary.\");\r\n            return this.chip;\r\n        }\r\n        this.info(\"Uploading stub...\");\r\n        const stubFlasher = await getStubJsonByChipName(this.chip.CHIP_NAME);\r\n        if (stubFlasher === undefined) {\r\n            this.debug(\"Error loading Stub json\");\r\n            throw new Error(\"Error loading Stub json\");\r\n        }\r\n        const stub = [stubFlasher.decodedText, stubFlasher.decodedData];\r\n        for (let i = 0; i < stub.length; i++) {\r\n            if (stub[i]) {\r\n                const offs = i === 0 ? stubFlasher.text_start : stubFlasher.data_start;\r\n                const length = stub[i].length;\r\n                const blocks = Math.floor((length + this.ESP_RAM_BLOCK - 1) / this.ESP_RAM_BLOCK);\r\n                await this.memBegin(length, blocks, this.ESP_RAM_BLOCK, offs);\r\n                for (let seq = 0; seq < blocks; seq++) {\r\n                    const fromOffs = seq * this.ESP_RAM_BLOCK;\r\n                    const toOffs = fromOffs + this.ESP_RAM_BLOCK;\r\n                    await this.memBlock(stub[i].slice(fromOffs, toOffs), seq);\r\n                }\r\n            }\r\n        }\r\n        this.info(\"Running stub...\");\r\n        await this.memFinish(stubFlasher.entry);\r\n        const { value: packetResult } = await this.transport.read(this.DEFAULT_TIMEOUT).next();\r\n        const packetStr = String.fromCharCode(...packetResult);\r\n        if (packetStr !== \"OHAI\") {\r\n            throw new ESPError(`Failed to start stub. Unexpected response ${packetStr}`);\r\n        }\r\n        this.info(\"Stub running...\");\r\n        this.IS_STUB = true;\r\n        return this.chip;\r\n    }\r\n    /**\r\n     * Change the chip baudrate.\r\n     */\r\n    async changeBaud() {\r\n        this.info(\"Changing baudrate to \" + this.baudrate);\r\n        const secondArg = this.IS_STUB ? this.romBaudrate : 0;\r\n        const pkt = this._appendArray(this._intToByteArray(this.baudrate), this._intToByteArray(secondArg));\r\n        await this.command(this.ESP_CHANGE_BAUDRATE, pkt);\r\n        this.info(\"Changed\");\r\n        this.info(\"If the chip does not respond to any further commands, consider using a lower baud rate.\");\r\n        await this._sleep(50);\r\n        await this.transport.disconnect();\r\n        await this._sleep(50);\r\n        await this.transport.connect(this.baudrate, this.serialOptions);\r\n        await this._sleep(50);\r\n    }\r\n    /**\r\n     * Execute the main function of ESPLoader.\r\n     * @param {string} mode Reset mode to use\r\n     * @returns {string} chip ROM\r\n     */\r\n    async main(mode = \"default_reset\") {\r\n        await this.detectChip(mode);\r\n        const chip = await this.chip.getChipDescription(this);\r\n        this.info(\"Chip is \" + chip);\r\n        this.info(\"Features: \" + (await this.chip.getChipFeatures(this)));\r\n        this.info(\"Crystal is \" + (await this.chip.getCrystalFreq(this)) + \"MHz\");\r\n        this.info(\"MAC: \" + (await this.chip.readMac(this)));\r\n        await this.chip.readMac(this);\r\n        if (typeof this.chip.postConnect != \"undefined\") {\r\n            await this.chip.postConnect(this);\r\n        }\r\n        await this.runStub();\r\n        if (this.romBaudrate !== this.baudrate) {\r\n            await this.changeBaud();\r\n        }\r\n        // Check flash chip connection\r\n        try {\r\n            const flashId = await this.readFlashId();\r\n            this.info(\"Flash ID: \" + flashId.toString(16));\r\n            if (flashId === 0xffffff || flashId === 0x000000) {\r\n                this.info(`WARNING: Failed to communicate with the flash chip,\\nread/write operations will fail.\\nTry checking the chip connections or removing\\nany other hardware connected to IOs.`);\r\n            }\r\n        }\r\n        catch (error) {\r\n            throw new ESPError(\"Unable to verify flash chip connection \" + error);\r\n        }\r\n        if (this.flashSize === \"keep\" || this.flashSize == \"detect\") {\r\n            this.info(\"Configuring flash size...\");\r\n            // update this to match given flash size command\r\n            const flashSize = await this.detectFlashSize(this.flashSize);\r\n            this.info(\"Detected flash size set to \" + flashSize);\r\n            this.flashSize = flashSize;\r\n        }\r\n        return chip;\r\n    }\r\n    /**\r\n     * Get flash size bytes from flash size string.\r\n     * @param {string} flashSize Flash Size string\r\n     * @returns {number} Flash size bytes\r\n     */\r\n    flashSizeBytes(flashSize) {\r\n        let flashSizeB = -1;\r\n        this.transport.trace(`Flash size string ${flashSize}`);\r\n        if (flashSize.toString().indexOf(\"KB\") !== -1) {\r\n            flashSizeB = parseInt(flashSize.toString().slice(0, flashSize.toString().indexOf(\"KB\"))) * 1024;\r\n        }\r\n        else if (flashSize.toString().indexOf(\"MB\") !== -1) {\r\n            flashSizeB = parseInt(flashSize.toString().slice(0, flashSize.toString().indexOf(\"MB\"))) * 1024 * 1024;\r\n        }\r\n        this.transport.trace(`Flash size in bytes ${flashSizeB}`);\r\n        return flashSizeB;\r\n    }\r\n    /**\r\n     * Parse a given flash size string to a number\r\n     * @param {string} flsz Flash size to request\r\n     * @returns {number} Flash size number\r\n     */\r\n    parseFlashSizeArg(flsz) {\r\n        if (typeof this.chip.FLASH_SIZES[flsz] === \"undefined\") {\r\n            throw new ESPError(\"Flash size \" + flsz + \" is not supported by this chip type. Supported sizes: \" + this.chip.FLASH_SIZES);\r\n        }\r\n        return this.chip.FLASH_SIZES[flsz];\r\n    }\r\n    /**\r\n     * Update the image flash parameters with given arguments.\r\n     * @param {string} image binary image as string\r\n     * @param {number} address flash address number\r\n     * @param {FlashModeValues} flashMode Flash mode string\r\n     * @param {FlashFreqValues} flashFreq Flash frequency string\r\n     * @returns {string} modified image string\r\n     */\r\n    async _updateImageFlashParams(image, address, flashMode = \"keep\", flashFreq = \"keep\") {\r\n        this.debug(`_update_image_flash_params ${this.flashSize} ${flashMode} ${flashFreq}`);\r\n        if (image.length < 8) {\r\n            return image;\r\n        }\r\n        if (address != this.chip.BOOTLOADER_FLASH_OFFSET) {\r\n            return image;\r\n        }\r\n        if (this.flashSize === \"keep\" && flashMode === \"keep\" && flashFreq === \"keep\") {\r\n            this.info(\"Not changing the image\");\r\n            return image;\r\n        }\r\n        const magic = parseInt(image[0]);\r\n        let aFlashMode = parseInt(image[2]);\r\n        const flashSizeFreq = parseInt(image[3]);\r\n        if (magic !== this.ESP_IMAGE_MAGIC) {\r\n            this.info(\"Warning: Image file at 0x\" +\r\n                address.toString(16) +\r\n                \" doesn't look like an image file, so not changing any flash settings.\");\r\n            return image;\r\n        }\r\n        // Verify this is a valid image\r\n        try {\r\n            const imageObject = await loadFirmwareImage(this.chip, image);\r\n            imageObject.verify();\r\n        }\r\n        catch (error) {\r\n            console.log(`Warning: Image file at 0x${address.toString(16)} is not a valid ${this.chip.CHIP_NAME} image, so not changing any flash settings.`);\r\n            return image;\r\n        }\r\n        const shaAppended = this.chip.CHIP_NAME !== \"ESP8266\" && image[8 + 15] === \"1\";\r\n        if (flashMode !== \"keep\") {\r\n            const flashModes = { qio: 0, qout: 1, dio: 2, dout: 3 };\r\n            aFlashMode = flashModes[flashMode];\r\n        }\r\n        let aFlashFreq = flashSizeFreq & 0x0f;\r\n        if (flashFreq !== \"keep\") {\r\n            const flashFreqs = { \"40m\": 0, \"26m\": 1, \"20m\": 2, \"80m\": 0xf };\r\n            aFlashFreq = flashFreqs[flashFreq];\r\n        }\r\n        let aFlashSize = flashSizeFreq & 0xf0;\r\n        if (this.flashSize !== \"keep\") {\r\n            aFlashSize = this.parseFlashSizeArg(this.flashSize);\r\n        }\r\n        const flashParams = (aFlashMode << 8) | (aFlashFreq + aFlashSize);\r\n        this.info(\"Flash params set to \" + flashParams.toString(16));\r\n        if (parseInt(image[2]) !== aFlashMode << 8) {\r\n            image = image.substring(0, 2) + (aFlashMode << 8).toString() + image.substring(2 + 1);\r\n        }\r\n        if (parseInt(image[3]) !== aFlashFreq + aFlashSize) {\r\n            image = image.substring(0, 3) + (aFlashFreq + aFlashSize).toString() + image.substring(3 + 1);\r\n        }\r\n        // Recalculate SHA digest if needed\r\n        if (shaAppended) {\r\n            // Create image object to get data length\r\n            const imageObject = await loadFirmwareImage(this.chip, image);\r\n            // Get the image data before SHA digest\r\n            const imageDataBeforeSha = image.slice(0, imageObject.datalength);\r\n            // Get the image data after SHA digest\r\n            const imageDataAfterSha = image.slice(imageObject.datalength + imageObject.SHA256_DIGEST_LEN);\r\n            // Calculate new SHA digest\r\n            const shaDigestCalculated = await crypto.subtle.digest(\"SHA-256\", this.bstrToUi8(imageDataAfterSha));\r\n            const shaDigestCalculatedUintArray = new Uint8Array(shaDigestCalculated);\r\n            // Combine all parts\r\n            const updatedImage = imageDataBeforeSha + shaDigestCalculated + imageDataAfterSha;\r\n            // Get the SHA digest stored in the image\r\n            const imageStoredSha = updatedImage.slice(imageObject.datalength, imageObject.datalength + imageObject.SHA256_DIGEST_LEN);\r\n            // Compare calculated and stored SHA digests\r\n            if (this.transport.hexify(shaDigestCalculatedUintArray) === this.transport.hexify(this.bstrToUi8(imageStoredSha))) {\r\n                this.info(\"SHA digest in image updated\");\r\n            }\r\n            else {\r\n                this.info(\"WARNING: SHA recalculation for binary failed!\\n\" +\r\n                    `\\tExpected calculated SHA: ${this.transport.hexify(shaDigestCalculatedUintArray)}\\n` +\r\n                    `\\tSHA stored in binary:    ${this.transport.hexify(this.bstrToUi8(imageStoredSha))}`);\r\n            }\r\n            return updatedImage;\r\n        }\r\n        return image;\r\n    }\r\n    /**\r\n     * Write set of file images into given address based on given FlashOptions object.\r\n     * @param {FlashOptions} options FlashOptions to configure how and what to write into flash.\r\n     */\r\n    async writeFlash(options) {\r\n        this.debug(\"EspLoader program\");\r\n        if (this.flashSize !== \"keep\") {\r\n            const flashEnd = this.flashSizeBytes(this.flashSize);\r\n            for (let i = 0; i < options.fileArray.length; i++) {\r\n                if (options.fileArray[i].data.length + options.fileArray[i].address > flashEnd) {\r\n                    throw new ESPError(`File ${i + 1} doesn't fit in the available flash`);\r\n                }\r\n            }\r\n        }\r\n        if (this.IS_STUB === true && options.eraseAll === true) {\r\n            await this.eraseFlash();\r\n        }\r\n        let image, address;\r\n        for (let i = 0; i < options.fileArray.length; i++) {\r\n            this.debug(\"Data Length \" + options.fileArray[i].data.length);\r\n            image = options.fileArray[i].data;\r\n            this.debug(\"Image Length \" + image.length);\r\n            if (image.length === 0) {\r\n                this.debug(\"Warning: File is empty\");\r\n                continue;\r\n            }\r\n            image = this.ui8ToBstr(padTo(this.bstrToUi8(image), 4));\r\n            address = options.fileArray[i].address;\r\n            image = await this._updateImageFlashParams(image, address, options.flashMode, options.flashFreq);\r\n            let calcmd5 = null;\r\n            if (options.calculateMD5Hash) {\r\n                calcmd5 = options.calculateMD5Hash(image);\r\n                this.debug(\"Image MD5 \" + calcmd5);\r\n            }\r\n            const uncsize = image.length;\r\n            let blocks;\r\n            if (options.compress) {\r\n                const uncimage = this.bstrToUi8(image);\r\n                image = this.ui8ToBstr(deflate(uncimage, { level: 9 }));\r\n                blocks = await this.flashDeflBegin(uncsize, image.length, address);\r\n            }\r\n            else {\r\n                blocks = await this.flashBegin(uncsize, address);\r\n            }\r\n            let seq = 0;\r\n            let bytesSent = 0;\r\n            const totalBytes = image.length;\r\n            if (options.reportProgress)\r\n                options.reportProgress(i, 0, totalBytes);\r\n            let d = new Date();\r\n            const t1 = d.getTime();\r\n            let timeout = 5000;\r\n            // Create a decompressor to keep track of the size of uncompressed data\r\n            // to be written in each chunk.\r\n            const inflate = new Inflate({ chunkSize: 1 });\r\n            let totalLenUncompressed = 0;\r\n            inflate.onData = function (chunk) {\r\n                totalLenUncompressed += chunk.byteLength;\r\n            };\r\n            while (image.length > 0) {\r\n                this.debug(\"Write loop \" + address + \" \" + seq + \" \" + blocks);\r\n                this.info(\"Writing at 0x\" +\r\n                    (address + totalLenUncompressed).toString(16) +\r\n                    \"... (\" +\r\n                    Math.floor((100 * (seq + 1)) / blocks) +\r\n                    \"%)\");\r\n                const block = this.bstrToUi8(image.slice(0, this.FLASH_WRITE_SIZE));\r\n                if (options.compress) {\r\n                    const lenUncompressedPrevious = totalLenUncompressed;\r\n                    inflate.push(block, false);\r\n                    const blockUncompressed = totalLenUncompressed - lenUncompressedPrevious;\r\n                    let blockTimeout = 3000;\r\n                    if (this.timeoutPerMb(this.ERASE_WRITE_TIMEOUT_PER_MB, blockUncompressed) > 3000) {\r\n                        blockTimeout = this.timeoutPerMb(this.ERASE_WRITE_TIMEOUT_PER_MB, blockUncompressed);\r\n                    }\r\n                    if (this.IS_STUB === false) {\r\n                        // ROM code writes block to flash before ACKing\r\n                        timeout = blockTimeout;\r\n                    }\r\n                    await this.flashDeflBlock(block, seq, timeout);\r\n                    if (this.IS_STUB) {\r\n                        // Stub ACKs when block is received, then writes to flash while receiving the block after it\r\n                        timeout = blockTimeout;\r\n                    }\r\n                }\r\n                else {\r\n                    throw new ESPError(\"Yet to handle Non Compressed writes\");\r\n                }\r\n                bytesSent += block.length;\r\n                image = image.slice(this.FLASH_WRITE_SIZE, image.length);\r\n                seq++;\r\n                if (options.reportProgress)\r\n                    options.reportProgress(i, bytesSent, totalBytes);\r\n            }\r\n            if (this.IS_STUB) {\r\n                await this.readReg(this.CHIP_DETECT_MAGIC_REG_ADDR, timeout);\r\n            }\r\n            d = new Date();\r\n            const t = d.getTime() - t1;\r\n            if (options.compress) {\r\n                this.info(\"Wrote \" +\r\n                    uncsize +\r\n                    \" bytes (\" +\r\n                    bytesSent +\r\n                    \" compressed) at 0x\" +\r\n                    address.toString(16) +\r\n                    \" in \" +\r\n                    t / 1000 +\r\n                    \" seconds.\");\r\n            }\r\n            if (calcmd5) {\r\n                const res = await this.flashMd5sum(address, uncsize);\r\n                if (new String(res).valueOf() != new String(calcmd5).valueOf()) {\r\n                    this.info(\"File  md5: \" + calcmd5);\r\n                    this.info(\"Flash md5: \" + res);\r\n                    throw new ESPError(\"MD5 of file does not match data in flash!\");\r\n                }\r\n                else {\r\n                    this.info(\"Hash of data verified.\");\r\n                }\r\n            }\r\n        }\r\n        this.info(\"Leaving...\");\r\n        if (this.IS_STUB) {\r\n            await this.flashBegin(0, 0);\r\n            if (options.compress) {\r\n                await this.flashDeflFinish();\r\n            }\r\n            else {\r\n                await this.flashFinish();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Read SPI flash manufacturer and device id.\r\n     */\r\n    async flashId() {\r\n        this.debug(\"flash_id\");\r\n        const flashid = await this.readFlashId();\r\n        this.info(\"Manufacturer: \" + (flashid & 0xff).toString(16));\r\n        const flidLowbyte = (flashid >> 16) & 0xff;\r\n        this.info(\"Device: \" + ((flashid >> 8) & 0xff).toString(16) + flidLowbyte.toString(16));\r\n        this.info(\"Detected flash size: \" + this.DETECTED_FLASH_SIZES[flidLowbyte]);\r\n    }\r\n    async detectFlashSize(flashSize) {\r\n        this.debug(\"detectFlashSize\");\r\n        const flashid = await this.readFlashId();\r\n        const sizeId = (flashid >> 16) & 0xff;\r\n        let flashSizeStr = this.DETECTED_FLASH_SIZES[sizeId];\r\n        if (!flashSizeStr) {\r\n            flashSizeStr = \"4MB\";\r\n            this.info(\"Could not auto-detect Flash size. defaulting \" + flashSize);\r\n        }\r\n        else {\r\n            this.info(\"Auto-detected Flash size: \" + flashSizeStr);\r\n        }\r\n        return flashSizeStr;\r\n    }\r\n    /**\r\n     * Soft reset the device chip. Soft reset with run user code is the closest.\r\n     * @param {boolean} stayInBootloader Flag to indicate if to stay in bootloader\r\n     */\r\n    async softReset(stayInBootloader) {\r\n        if (!this.IS_STUB) {\r\n            if (stayInBootloader) {\r\n                return; // ROM bootloader is already in bootloader!\r\n            }\r\n            // \"run user code\" is as close to a soft reset as we can do\r\n            await this.flashBegin(0, 0);\r\n            await this.flashFinish(false);\r\n        }\r\n        else if (this.chip.CHIP_NAME != \"ESP8266\") {\r\n            throw new ESPError(\"Soft resetting is currently only supported on ESP8266\");\r\n        }\r\n        else {\r\n            if (stayInBootloader) {\r\n                // soft resetting from the stub loader\r\n                // will re-load the ROM bootloader\r\n                await this.flashBegin(0, 0);\r\n                await this.flashFinish(true);\r\n            }\r\n            else {\r\n                // running user code from stub loader requires some hacks\r\n                // in the stub loader\r\n                await this.command(this.ESP_RUN_USER_CODE, undefined, undefined, false);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Execute this function to execute after operation reset functions.\r\n     * @param {After} mode After operation mode. Default is 'hard_reset'.\r\n     * @param { boolean } usingUsbOtg For 'hard_reset' to specify if using USB-OTG\r\n     */\r\n    async after(mode = \"hard_reset\", usingUsbOtg) {\r\n        switch (mode) {\r\n            case \"hard_reset\":\r\n                if (this.resetConstructors.hardReset) {\r\n                    this.info(\"Hard resetting via RTS pin...\");\r\n                    const hardReset = this.resetConstructors.hardReset(this.transport, usingUsbOtg);\r\n                    await hardReset.reset();\r\n                }\r\n                break;\r\n            case \"soft_reset\":\r\n                this.info(\"Soft resetting...\");\r\n                await this.softReset(false);\r\n                break;\r\n            case \"no_reset_stub\":\r\n                this.info(\"Staying in flasher stub.\");\r\n                break;\r\n            default:\r\n                this.info(\"Staying in bootloader.\");\r\n                if (this.IS_STUB) {\r\n                    this.softReset(true);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Represents a Espressif chip error.\r\n */\r\nclass ESPError extends Error {\r\n}\r\n/**\r\n * Represents a Espressif timeout chip error.\r\n */\r\nclass TimeoutError extends ESPError {\r\n}\r\nexport { ESPError, TimeoutError };\r\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","/* global SerialPort, ParityType, FlowControlType */\r\n/**\r\n * Wrapper class around Webserial API to communicate with the serial device.\r\n * @param {typeof import(\"w3c-web-serial\").SerialPort} device - Requested device prompted by the browser.\r\n *\r\n * ```\r\n * const port = await navigator.serial.requestPort();\r\n * ```\r\n */\r\nclass Transport {\r\n    constructor(device, tracing = false, enableSlipReader = true) {\r\n        this.device = device;\r\n        this.tracing = tracing;\r\n        this.slipReaderEnabled = false;\r\n        this.baudrate = 0;\r\n        this.traceLog = \"\";\r\n        this.lastTraceTime = Date.now();\r\n        this.buffer = new Uint8Array(0);\r\n        this.SLIP_END = 0xc0;\r\n        this.SLIP_ESC = 0xdb;\r\n        this.SLIP_ESC_END = 0xdc;\r\n        this.SLIP_ESC_ESC = 0xdd;\r\n        this._DTR_state = false;\r\n        this.slipReaderEnabled = enableSlipReader;\r\n    }\r\n    /**\r\n     * Request the serial device vendor ID and Product ID as string.\r\n     * @returns {string} Return the device VendorID and ProductID from SerialPortInfo as formatted string.\r\n     */\r\n    getInfo() {\r\n        const info = this.device.getInfo();\r\n        return info.usbVendorId && info.usbProductId\r\n            ? `WebSerial VendorID 0x${info.usbVendorId.toString(16)} ProductID 0x${info.usbProductId.toString(16)}`\r\n            : \"\";\r\n    }\r\n    /**\r\n     * Request the serial device product id from SerialPortInfo.\r\n     * @returns {number | undefined} Return the product ID.\r\n     */\r\n    getPid() {\r\n        return this.device.getInfo().usbProductId;\r\n    }\r\n    /**\r\n     * Format received or sent data for tracing output.\r\n     * @param {string} message Message to format as trace line.\r\n     */\r\n    trace(message) {\r\n        const delta = Date.now() - this.lastTraceTime;\r\n        const prefix = `TRACE ${delta.toFixed(3)}`;\r\n        const traceMessage = `${prefix} ${message}`;\r\n        console.log(traceMessage);\r\n        this.traceLog += traceMessage + \"\\n\";\r\n    }\r\n    async returnTrace() {\r\n        try {\r\n            await navigator.clipboard.writeText(this.traceLog);\r\n            console.log(\"Text copied to clipboard!\");\r\n        }\r\n        catch (err) {\r\n            console.error(\"Failed to copy text:\", err);\r\n        }\r\n    }\r\n    hexify(s) {\r\n        return Array.from(s)\r\n            .map((byte) => byte.toString(16).padStart(2, \"0\"))\r\n            .join(\"\")\r\n            .padEnd(16, \" \");\r\n    }\r\n    hexConvert(uint8Array, autoSplit = true) {\r\n        if (autoSplit && uint8Array.length > 16) {\r\n            let result = \"\";\r\n            let s = uint8Array;\r\n            while (s.length > 0) {\r\n                const line = s.slice(0, 16);\r\n                const asciiLine = String.fromCharCode(...line)\r\n                    .split(\"\")\r\n                    .map((c) => (c === \" \" || (c >= \" \" && c <= \"~\" && c !== \"  \") ? c : \".\"))\r\n                    .join(\"\");\r\n                s = s.slice(16);\r\n                result += `\\n    ${this.hexify(line.slice(0, 8))} ${this.hexify(line.slice(8))} | ${asciiLine}`;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            return this.hexify(uint8Array);\r\n        }\r\n    }\r\n    /**\r\n     * Format data packet using the Serial Line Internet Protocol (SLIP).\r\n     * @param {Uint8Array} data Binary unsigned 8 bit array data to format.\r\n     * @returns {Uint8Array} Formatted unsigned 8 bit data array.\r\n     */\r\n    slipWriter(data) {\r\n        const outData = [];\r\n        outData.push(0xc0);\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i] === 0xdb) {\r\n                outData.push(0xdb, 0xdd);\r\n            }\r\n            else if (data[i] === 0xc0) {\r\n                outData.push(0xdb, 0xdc);\r\n            }\r\n            else {\r\n                outData.push(data[i]);\r\n            }\r\n        }\r\n        outData.push(0xc0);\r\n        return new Uint8Array(outData);\r\n    }\r\n    /**\r\n     * Write binary data to device using the WebSerial device writable stream.\r\n     * @param {Uint8Array} data 8 bit unsigned data array to write to device.\r\n     */\r\n    async write(data) {\r\n        const outData = this.slipWriter(data);\r\n        if (this.device.writable) {\r\n            const writer = this.device.writable.getWriter();\r\n            if (this.tracing) {\r\n                console.log(\"Write bytes\");\r\n                this.trace(`Write ${outData.length} bytes: ${this.hexConvert(outData)}`);\r\n            }\r\n            await writer.write(outData);\r\n            writer.releaseLock();\r\n        }\r\n    }\r\n    /**\r\n     * Append a buffer array after another buffer array\r\n     * @param {Uint8Array} arr1 - First array buffer.\r\n     * @param {Uint8Array} arr2 - magic hex number to select ROM.\r\n     * @returns {Uint8Array} Return a 8 bit unsigned array.\r\n     */\r\n    appendArray(arr1, arr2) {\r\n        const combined = new Uint8Array(arr1.length + arr2.length);\r\n        combined.set(arr1);\r\n        combined.set(arr2, arr1.length);\r\n        return combined;\r\n    }\r\n    // Asynchronous generator to yield incoming data chunks\r\n    async *readLoop(timeout) {\r\n        if (!this.reader)\r\n            return;\r\n        try {\r\n            while (true) {\r\n                const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error(\"Read timeout exceeded\")), timeout));\r\n                // Await the race between the timeout and the reader read\r\n                const result = await Promise.race([this.reader.read(), timeoutPromise]);\r\n                // If a timeout occurs, result will be null; otherwise, it will have { value, done }\r\n                if (result === null)\r\n                    break;\r\n                const { value, done } = result;\r\n                if (done || !value)\r\n                    break;\r\n                yield value; // Yield each data chunk\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Error reading from serial port:\", error);\r\n        }\r\n        finally {\r\n            this.buffer = new Uint8Array(0);\r\n        }\r\n    }\r\n    // Read a specific number of bytes\r\n    async newRead(numBytes, timeout) {\r\n        if (this.buffer.length >= numBytes) {\r\n            const output = this.buffer.slice(0, numBytes);\r\n            this.buffer = this.buffer.slice(numBytes); // Remove the returned data from buffer\r\n            return output;\r\n        }\r\n        while (this.buffer.length < numBytes) {\r\n            const readLoop = this.readLoop(timeout);\r\n            const { value, done } = await readLoop.next();\r\n            if (done || !value) {\r\n                break;\r\n            }\r\n            // Append the newly read data to the buffer\r\n            this.buffer = this.appendArray(this.buffer, value);\r\n        }\r\n        // Return as much data as possible\r\n        const output = this.buffer.slice(0, numBytes);\r\n        this.buffer = this.buffer.slice(numBytes);\r\n        return output;\r\n    }\r\n    async flushInput() {\r\n        var _a, _b, _c;\r\n        try {\r\n            if (!this.reader) {\r\n                this.reader = (_a = this.device.readable) === null || _a === void 0 ? void 0 : _a.getReader();\r\n            }\r\n            await ((_b = this.reader) === null || _b === void 0 ? void 0 : _b.cancel());\r\n            this.reader = (_c = this.device.readable) === null || _c === void 0 ? void 0 : _c.getReader();\r\n        }\r\n        catch (error) {\r\n            this.trace(`Error while flushing input: ${error}`);\r\n        }\r\n        this.buffer = new Uint8Array(0);\r\n    }\r\n    async flushOutput() {\r\n        try {\r\n            if (this.device.writable) {\r\n                const writer = this.device.writable.getWriter();\r\n                await writer.close();\r\n                writer.releaseLock();\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.trace(`Error while flushing output: ${error}`);\r\n        }\r\n    }\r\n    // `inWaiting` returns the count of bytes in the buffer\r\n    inWaiting() {\r\n        return this.buffer.length;\r\n    }\r\n    /**\r\n     * Detect if the data read from device is a Fatal or Guru meditation error.\r\n     * @param {Uint8Array} input Data read from device\r\n     */\r\n    detectPanicHandler(input) {\r\n        const guruMeditationRegex = /G?uru Meditation Error: (?:Core \\d panic'ed \\(([a-zA-Z ]*)\\))?/;\r\n        const fatalExceptionRegex = /F?atal exception \\(\\d+\\): (?:([a-zA-Z ]*)?.*epc)?/;\r\n        const inputString = new TextDecoder(\"utf-8\").decode(input);\r\n        const match = inputString.match(guruMeditationRegex) || inputString.match(fatalExceptionRegex);\r\n        if (match) {\r\n            const cause = match[1] || match[2];\r\n            const msg = `Guru Meditation Error detected${cause ? ` (${cause})` : \"\"}`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    /**\r\n     * Take a data array and return the first well formed packet after\r\n     * replacing the escape sequence. Reads at least 8 bytes.\r\n     * @param {number} timeout Timeout read data.\r\n     * @yields {Uint8Array} Formatted packet using SLIP escape sequences.\r\n     */\r\n    async *read(timeout) {\r\n        var _a;\r\n        if (!this.reader) {\r\n            this.reader = (_a = this.device.readable) === null || _a === void 0 ? void 0 : _a.getReader();\r\n        }\r\n        let partialPacket = null;\r\n        let isEscaping = false;\r\n        let successfulSlip = false;\r\n        while (true) {\r\n            const waitingBytes = this.inWaiting();\r\n            const readBytes = await this.newRead(waitingBytes > 0 ? waitingBytes : 1, timeout);\r\n            if (!readBytes || readBytes.length === 0) {\r\n                const msg = partialPacket === null\r\n                    ? successfulSlip\r\n                        ? \"Serial data stream stopped: Possible serial noise or corruption.\"\r\n                        : \"No serial data received.\"\r\n                    : `Packet content transfer stopped`;\r\n                this.trace(msg);\r\n                throw new Error(msg);\r\n            }\r\n            this.trace(`Read ${readBytes.length} bytes: ${this.hexConvert(readBytes)}`);\r\n            let i = 0; // Track position in readBytes\r\n            while (i < readBytes.length) {\r\n                const byte = readBytes[i++];\r\n                if (partialPacket === null) {\r\n                    if (byte === this.SLIP_END) {\r\n                        partialPacket = new Uint8Array(0); // Start of a new packet\r\n                    }\r\n                    else {\r\n                        this.trace(`Read invalid data: ${this.hexConvert(readBytes)}`);\r\n                        const remainingData = await this.newRead(this.inWaiting(), timeout);\r\n                        this.trace(`Remaining data in serial buffer: ${this.hexConvert(remainingData)}`);\r\n                        this.detectPanicHandler(new Uint8Array([...readBytes, ...(remainingData || [])]));\r\n                        throw new Error(`Invalid head of packet (0x${byte.toString(16)}): Possible serial noise or corruption.`);\r\n                    }\r\n                }\r\n                else if (isEscaping) {\r\n                    isEscaping = false;\r\n                    if (byte === this.SLIP_ESC_END) {\r\n                        partialPacket = this.appendArray(partialPacket, new Uint8Array([this.SLIP_END]));\r\n                    }\r\n                    else if (byte === this.SLIP_ESC_ESC) {\r\n                        partialPacket = this.appendArray(partialPacket, new Uint8Array([this.SLIP_ESC]));\r\n                    }\r\n                    else {\r\n                        this.trace(`Read invalid data: ${this.hexConvert(readBytes)}`);\r\n                        const remainingData = await this.newRead(this.inWaiting(), timeout);\r\n                        this.trace(`Remaining data in serial buffer: ${this.hexConvert(remainingData)}`);\r\n                        this.detectPanicHandler(new Uint8Array([...readBytes, ...(remainingData || [])]));\r\n                        throw new Error(`Invalid SLIP escape (0xdb, 0x${byte.toString(16)})`);\r\n                    }\r\n                }\r\n                else if (byte === this.SLIP_ESC) {\r\n                    isEscaping = true;\r\n                }\r\n                else if (byte === this.SLIP_END) {\r\n                    this.trace(`Received full packet: ${this.hexConvert(partialPacket)}`);\r\n                    this.buffer = this.appendArray(this.buffer, readBytes.slice(i));\r\n                    yield partialPacket;\r\n                    partialPacket = null;\r\n                    successfulSlip = true;\r\n                }\r\n                else {\r\n                    partialPacket = this.appendArray(partialPacket, new Uint8Array([byte]));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Read from serial device without slip formatting.\r\n     * @yields {Uint8Array} The next number in the Fibonacci sequence.\r\n     */\r\n    async *rawRead() {\r\n        if (!this.reader)\r\n            return;\r\n        try {\r\n            while (true) {\r\n                const { value, done } = await this.reader.read();\r\n                if (done || !value)\r\n                    break;\r\n                if (this.tracing) {\r\n                    console.log(\"Raw Read bytes\");\r\n                    this.trace(`Read ${value.length} bytes: ${this.hexConvert(value)}`);\r\n                }\r\n                yield value; // Yield each data chunk\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Error reading from serial port:\", error);\r\n        }\r\n        finally {\r\n            this.buffer = new Uint8Array(0);\r\n        }\r\n    }\r\n    /**\r\n     * Send the RequestToSend (RTS) signal to given state\r\n     * # True for EN=LOW, chip in reset and False EN=HIGH, chip out of reset\r\n     * @param {boolean} state Boolean state to set the signal\r\n     */\r\n    async setRTS(state) {\r\n        await this.device.setSignals({ requestToSend: state });\r\n        // # Work-around for adapters on Windows using the usbser.sys driver:\r\n        // # generate a dummy change to DTR so that the set-control-line-state\r\n        // # request is sent with the updated RTS state and the same DTR state\r\n        // Referenced to esptool.py\r\n        await this.setDTR(this._DTR_state);\r\n    }\r\n    /**\r\n     * Send the dataTerminalReady (DTS) signal to given state\r\n     * # True for IO0=LOW, chip in reset and False IO0=HIGH\r\n     * @param {boolean} state Boolean state to set the signal\r\n     */\r\n    async setDTR(state) {\r\n        this._DTR_state = state;\r\n        await this.device.setSignals({ dataTerminalReady: state });\r\n    }\r\n    /**\r\n     * Connect to serial device using the Webserial open method.\r\n     * @param {number} baud Number baud rate for serial connection. Default is 115200.\r\n     * @param {typeof import(\"w3c-web-serial\").SerialOptions} serialOptions Serial Options for WebUSB SerialPort class.\r\n     */\r\n    async connect(baud = 115200, serialOptions = {}) {\r\n        var _a;\r\n        await this.device.open({\r\n            baudRate: baud,\r\n            dataBits: serialOptions === null || serialOptions === void 0 ? void 0 : serialOptions.dataBits,\r\n            stopBits: serialOptions === null || serialOptions === void 0 ? void 0 : serialOptions.stopBits,\r\n            bufferSize: serialOptions === null || serialOptions === void 0 ? void 0 : serialOptions.bufferSize,\r\n            parity: serialOptions === null || serialOptions === void 0 ? void 0 : serialOptions.parity,\r\n            flowControl: serialOptions === null || serialOptions === void 0 ? void 0 : serialOptions.flowControl,\r\n        });\r\n        this.baudrate = baud;\r\n        this.reader = (_a = this.device.readable) === null || _a === void 0 ? void 0 : _a.getReader();\r\n    }\r\n    async sleep(ms) {\r\n        return new Promise((resolve) => setTimeout(resolve, ms));\r\n    }\r\n    /**\r\n     * Wait for a given timeout ms for serial device unlock.\r\n     * @param {number} timeout Timeout time in milliseconds (ms) to sleep\r\n     */\r\n    async waitForUnlock(timeout) {\r\n        while ((this.device.readable && this.device.readable.locked) ||\r\n            (this.device.writable && this.device.writable.locked)) {\r\n            await this.sleep(timeout);\r\n        }\r\n    }\r\n    /**\r\n     * Disconnect from serial device by running SerialPort.close() after streams unlock.\r\n     */\r\n    async disconnect() {\r\n        var _a, _b;\r\n        if ((_a = this.device.readable) === null || _a === void 0 ? void 0 : _a.locked) {\r\n            await ((_b = this.reader) === null || _b === void 0 ? void 0 : _b.cancel());\r\n        }\r\n        await this.waitForUnlock(400);\r\n        await this.device.close();\r\n        this.reader = undefined;\r\n    }\r\n}\r\nexport { Transport };\r\n","/**\r\n * Sleep for ms milliseconds\r\n * @param {number} ms Milliseconds to wait\r\n * @returns {Promise<void>}\r\n */\r\nfunction sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n/**\r\n * Execute a classic set of commands that will reset the chip.\r\n *\r\n * Commands (e.g. R0) are defined by a code (R) and an argument (0).\r\n *\r\n * The commands are:\r\n *\r\n * D: setDTR - 1=True / 0=False\r\n *\r\n * R: setRTS - 1=True / 0=False\r\n *\r\n * W: Wait (time delay) - positive integer number (miliseconds)\r\n *\r\n * \"D0|R1|W100|D1|R0|W50|D0\" represents the classic reset strategy\r\n * @param {Transport} transport Transport class to perform serial communication.\r\n * @param {number} resetDelay Delay in milliseconds for reset.\r\n */\r\nexport class ClassicReset {\r\n    constructor(transport, resetDelay) {\r\n        this.resetDelay = resetDelay;\r\n        this.transport = transport;\r\n    }\r\n    async reset() {\r\n        await this.transport.setDTR(false);\r\n        await this.transport.setRTS(true);\r\n        await sleep(100);\r\n        await this.transport.setDTR(true);\r\n        await this.transport.setRTS(false);\r\n        await sleep(this.resetDelay);\r\n        await this.transport.setDTR(false);\r\n    }\r\n}\r\n/**\r\n * Execute a set of commands for USB JTAG serial reset.\r\n *\r\n * Commands (e.g. R0) are defined by a code (R) and an argument (0).\r\n *\r\n * The commands are:\r\n *\r\n * D: setDTR - 1=True / 0=False\r\n *\r\n * R: setRTS - 1=True / 0=False\r\n *\r\n * W: Wait (time delay) - positive integer number (miliseconds)\r\n * @param {Transport} transport Transport class to perform serial communication.\r\n */\r\nexport class UsbJtagSerialReset {\r\n    constructor(transport) {\r\n        this.transport = transport;\r\n    }\r\n    async reset() {\r\n        await this.transport.setRTS(false);\r\n        await this.transport.setDTR(false);\r\n        await sleep(100);\r\n        await this.transport.setDTR(true);\r\n        await this.transport.setRTS(false);\r\n        await sleep(100);\r\n        await this.transport.setRTS(true);\r\n        await this.transport.setDTR(false);\r\n        await this.transport.setRTS(true);\r\n        await sleep(100);\r\n        await this.transport.setRTS(false);\r\n        await this.transport.setDTR(false);\r\n    }\r\n}\r\n/**\r\n * Execute a set of commands that will hard reset the chip.\r\n *\r\n * Commands (e.g. R0) are defined by a code (R) and an argument (0).\r\n *\r\n * The commands are:\r\n *\r\n * D: setDTR - 1=True / 0=False\r\n *\r\n * R: setRTS - 1=True / 0=False\r\n *\r\n * W: Wait (time delay) - positive integer number (miliseconds)\r\n * @param {Transport} transport Transport class to perform serial communication.\r\n * @param {boolean} usingUsbOtg is it using USB-OTG ?\r\n */\r\nexport class HardReset {\r\n    constructor(transport, usingUsbOtg = false) {\r\n        this.transport = transport;\r\n        this.usingUsbOtg = usingUsbOtg;\r\n        this.transport = transport;\r\n    }\r\n    async reset() {\r\n        if (this.usingUsbOtg) {\r\n            await sleep(200);\r\n            await this.transport.setRTS(false);\r\n            await sleep(200);\r\n        }\r\n        else {\r\n            await sleep(100);\r\n            await this.transport.setRTS(false);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validate a sequence string based on the following format:\r\n *\r\n * Commands (e.g. R0) are defined by a code (R) and an argument (0).\r\n *\r\n * The commands are:\r\n *\r\n * D: setDTR - 1=True / 0=False\r\n *\r\n * R: setRTS - 1=True / 0=False\r\n *\r\n * W: Wait (time delay) - positive integer number (miliseconds)\r\n * @param {string} seqStr Sequence string to validate\r\n * @returns {boolean} Is the sequence string valid ?\r\n */\r\nexport function validateCustomResetStringSequence(seqStr) {\r\n    const commands = [\"D\", \"R\", \"W\"];\r\n    const commandsList = seqStr.split(\"|\");\r\n    for (const cmd of commandsList) {\r\n        const code = cmd[0];\r\n        const arg = cmd.slice(1);\r\n        if (!commands.includes(code)) {\r\n            return false; // Invalid command code\r\n        }\r\n        if (code === \"D\" || code === \"R\") {\r\n            if (arg !== \"0\" && arg !== \"1\") {\r\n                return false; // Invalid argument for D and R commands\r\n            }\r\n        }\r\n        else if (code === \"W\") {\r\n            const delay = parseInt(arg);\r\n            if (isNaN(delay) || delay <= 0) {\r\n                return false; // Invalid argument for W command\r\n            }\r\n        }\r\n    }\r\n    return true; // All commands are valid\r\n}\r\n/**\r\n * Custom reset strategy defined with a string.\r\n *\r\n * The sequenceString input string consists of individual commands divided by \"|\".\r\n *\r\n * Commands (e.g. R0) are defined by a code (R) and an argument (0).\r\n *\r\n * The commands are:\r\n *\r\n * D: setDTR - 1=True / 0=False\r\n *\r\n * R: setRTS - 1=True / 0=False\r\n *\r\n * W: Wait (time delay) - positive integer number (miliseconds)\r\n *\r\n * \"D0|R1|W100|D1|R0|W50|D0\" represents the classic reset strategy\r\n * @param {Transport} transport Transport class to perform serial communication.\r\n * @param {string} sequenceString Custom string sequence for reset strategy\r\n */\r\nexport class CustomReset {\r\n    constructor(transport, sequenceString) {\r\n        this.transport = transport;\r\n        this.sequenceString = sequenceString;\r\n        this.transport = transport;\r\n    }\r\n    async reset() {\r\n        const resetDictionary = {\r\n            D: async (arg) => await this.transport.setDTR(arg),\r\n            R: async (arg) => await this.transport.setRTS(arg),\r\n            W: async (delay) => await sleep(delay),\r\n        };\r\n        try {\r\n            const isValidSequence = validateCustomResetStringSequence(this.sequenceString);\r\n            if (!isValidSequence) {\r\n                return;\r\n            }\r\n            const cmds = this.sequenceString.split(\"|\");\r\n            for (const cmd of cmds) {\r\n                const cmdKey = cmd[0];\r\n                const cmdVal = cmd.slice(1);\r\n                if (cmdKey === \"W\") {\r\n                    await resetDictionary[\"W\"](Number(cmdVal));\r\n                }\r\n                else if (cmdKey === \"D\" || cmdKey === \"R\") {\r\n                    await resetDictionary[cmdKey](cmdVal === \"1\");\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            throw new Error(\"Invalid custom reset sequence\");\r\n        }\r\n    }\r\n}\r\nexport default { ClassicReset, CustomReset, HardReset, UsbJtagSerialReset, validateCustomResetStringSequence };\r\n","import atob from \"atob-lite\";\r\n/**\r\n * Import flash stub json for the given chip name.\r\n * @param {string} chipName Name of chip to obtain flasher stub\r\n * @returns {Stub} Stub information and decoded text and data\r\n */\r\nexport async function getStubJsonByChipName(chipName) {\r\n    let jsonStub;\r\n    switch (chipName) {\r\n        case \"ESP32\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32.json\");\r\n            break;\r\n        case \"ESP32-C2\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32c2.json\");\r\n            break;\r\n        case \"ESP32-C3\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32c3.json\");\r\n            break;\r\n        case \"ESP32-C5\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32c5.json\");\r\n            break;\r\n        case \"ESP32-C6\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32c6.json\");\r\n            break;\r\n        case \"ESP32-C61\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32c61.json\");\r\n            break;\r\n        case \"ESP32-H2\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32h2.json\");\r\n            break;\r\n        case \"ESP32-P4\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32p4.json\");\r\n            break;\r\n        case \"ESP32-S2\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32s2.json\");\r\n            break;\r\n        case \"ESP32-S3\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_32s3.json\");\r\n            break;\r\n        case \"ESP8266\":\r\n            jsonStub = await import(\"./targets/stub_flasher/stub_flasher_8266.json\");\r\n            break;\r\n    }\r\n    if (jsonStub) {\r\n        return {\r\n            bss_start: jsonStub.bss_start,\r\n            data: jsonStub.data,\r\n            data_start: jsonStub.data_start,\r\n            entry: jsonStub.entry,\r\n            text: jsonStub.text,\r\n            text_start: jsonStub.text_start,\r\n            decodedData: decodeBase64Data(jsonStub.data),\r\n            decodedText: decodeBase64Data(jsonStub.text),\r\n        };\r\n    }\r\n    return;\r\n}\r\n/**\r\n * Convert a base 64 string to Uint8Array.\r\n * @param {string} dataStr Base64 String to decode\r\n * @returns {Uint8Array} Decoded Uint8Array\r\n */\r\nexport function decodeBase64Data(dataStr) {\r\n    const decoded = atob(dataStr);\r\n    const chardata = decoded.split(\"\").map(function (x) {\r\n        return x.charCodeAt(0);\r\n    });\r\n    return new Uint8Array(chardata);\r\n}\r\n","module.exports = function _atob(str) {\n  return atob(str)\n}\n","/**\r\n * Pad to the next alignment boundary\r\n * @param {Uint8Array} data Uint8Array data to pad\r\n * @param {number} alignment Alignment boundary to fulfill\r\n * @param {number} padCharacter Character to fill with\r\n * @returns {Uint8Array} Padded UInt8Array image\r\n */\r\nexport function padTo(data, alignment, padCharacter = 0xff) {\r\n    const padMod = data.length % alignment;\r\n    if (padMod !== 0) {\r\n        const padding = new Uint8Array(alignment - padMod).fill(padCharacter);\r\n        const paddedData = new Uint8Array(data.length + padding.length);\r\n        paddedData.set(data);\r\n        paddedData.set(padding, data.length);\r\n        return paddedData;\r\n    }\r\n    return data;\r\n}\r\nexport const ESP_CHECKSUM_MAGIC = 0xef;\r\n/**\r\n * Get the checksum for given unsigned 8-bit array\r\n * @param {Uint8Array} data Unsigned 8-bit integer array\r\n * @param {number} state Initial checksum\r\n * @returns {number} - Array checksum\r\n */\r\nexport function checksum(data, state = ESP_CHECKSUM_MAGIC) {\r\n    for (let i = 0; i < data.length; i++) {\r\n        state ^= data[i];\r\n    }\r\n    return state;\r\n}\r\n/**\r\n * Convert a byte string to unsigned 8 bit integer array.\r\n * @param {string} bStr - binary string input\r\n * @returns {Uint8Array} Return a 8 bit unsigned integer array.\r\n */\r\nexport function bstrToUi8(bStr) {\r\n    const u8Array = new Uint8Array(bStr.length);\r\n    for (let i = 0; i < bStr.length; i++) {\r\n        u8Array[i] = bStr.charCodeAt(i);\r\n    }\r\n    return u8Array;\r\n}\r\n","import { ESPError } from \"../types/error\";\r\nimport { bstrToUi8 } from \"../util\";\r\nimport { ESP_IMAGE_MAGIC } from \"./base\";\r\nimport { ESP32FirmwareImage } from \"./esp32\";\r\nimport { ESP8266ROMFirmwareImage, ESP8266V2FirmwareImage } from \"./esp8266\";\r\nimport { ESP32C2FirmwareImage, ESP32C3FirmwareImage, ESP32C5FirmwareImage, ESP32C61FirmwareImage, ESP32C6FirmwareImage, ESP32H2FirmwareImage, ESP32P4FirmwareImage, ESP32S2FirmwareImage, ESP32S3FirmwareImage, } from \"./others\";\r\n/**\r\n * Function to load a firmware image from a string (from FileReader)\r\n * @param {ROM} rom - The ROM object representing the target device\r\n * @param imageData Image data as a string\r\n * @returns {Promise<BaseFirmwareImage>} - A promise that resolves to the loaded firmware image\r\n */\r\nexport async function loadFirmwareImage(rom, imageData) {\r\n    // Convert the string data to a Uint8Array\r\n    const binaryData = bstrToUi8(imageData);\r\n    // Select the appropriate image class based on the chip\r\n    const chipName = rom.CHIP_NAME.toLowerCase().replace(/[-()]/g, \"\");\r\n    let firmwareImageClass;\r\n    if (chipName !== \"esp8266\") {\r\n        switch (chipName) {\r\n            case \"esp32\":\r\n                firmwareImageClass = ESP32FirmwareImage;\r\n                break;\r\n            case \"esp32s2\":\r\n                firmwareImageClass = ESP32S2FirmwareImage;\r\n                break;\r\n            case \"esp32s3\":\r\n                firmwareImageClass = ESP32S3FirmwareImage;\r\n                break;\r\n            case \"esp32c3\":\r\n                firmwareImageClass = ESP32C3FirmwareImage;\r\n                break;\r\n            case \"esp32c2\":\r\n                firmwareImageClass = ESP32C2FirmwareImage;\r\n                break;\r\n            case \"esp32c6\":\r\n                firmwareImageClass = ESP32C6FirmwareImage;\r\n                break;\r\n            case \"esp32c61\":\r\n                firmwareImageClass = ESP32C61FirmwareImage;\r\n                break;\r\n            case \"esp32c5\":\r\n                firmwareImageClass = ESP32C5FirmwareImage;\r\n                break;\r\n            case \"esp32h2\":\r\n                firmwareImageClass = ESP32H2FirmwareImage;\r\n                break;\r\n            case \"esp32p4\":\r\n                firmwareImageClass = ESP32P4FirmwareImage;\r\n                break;\r\n            default:\r\n                throw new ESPError(`Unsupported chip name: ${chipName}`);\r\n        }\r\n    }\r\n    else {\r\n        const magic = binaryData[0];\r\n        if (magic === ESP_IMAGE_MAGIC) {\r\n            firmwareImageClass = ESP8266ROMFirmwareImage;\r\n        }\r\n        else if (magic === ESP8266V2FirmwareImage.IMAGE_V2_MAGIC) {\r\n            firmwareImageClass = ESP8266V2FirmwareImage;\r\n        }\r\n        else {\r\n            throw new ESPError(`Invalid image magic number: ${magic}`);\r\n        }\r\n    }\r\n    // Create an instance of the selected image class\r\n    const image = new firmwareImageClass(rom);\r\n    return image;\r\n}\r\n","import { ESP8266ROM } from \"../targets/esp8266\";\r\nimport { ESPError } from \"../types/error\";\r\nimport { checksum, ESP_CHECKSUM_MAGIC, padTo } from \"../util\";\r\nexport const ESP_IMAGE_MAGIC = 0xe9;\r\nexport function alignFilePosition(position, size) {\r\n    const align = size - 1 - (position % size);\r\n    return position + align;\r\n}\r\nfunction readUInt32LE(data, offset) {\r\n    return data[offset] | (data[offset + 1] << 8) | (data[offset + 2] << 16) | (data[offset + 3] << 24);\r\n}\r\n// ImageSegment class\r\nexport class ImageSegment {\r\n    constructor(addr, data, fileOffs = null, flags = 0) {\r\n        this.addr = addr;\r\n        this.data = data;\r\n        this.fileOffs = fileOffs;\r\n        this.flags = flags;\r\n        this.includeInChecksum = true;\r\n        if (this.addr !== 0) {\r\n            this.padToAlignment(4); // pad all \"real\" ImageSegments 4 byte aligned length\r\n        }\r\n    }\r\n    copyWithNewAddr(newAddr) {\r\n        return new ImageSegment(newAddr, this.data, 0);\r\n    }\r\n    splitImage(splitLen) {\r\n        const result = new ImageSegment(this.addr, this.data.slice(0, splitLen), 0);\r\n        this.data = this.data.slice(splitLen);\r\n        this.addr += splitLen;\r\n        this.fileOffs = null;\r\n        return result;\r\n    }\r\n    toString() {\r\n        let r = `len 0x${this.data.length.toString(16).padStart(5, \"0\")} load 0x${this.addr.toString(16).padStart(8, \"0\")}`;\r\n        if (this.fileOffs !== null) {\r\n            r += ` file_offs 0x${this.fileOffs.toString(16).padStart(8, \"0\")}`;\r\n        }\r\n        return r;\r\n    }\r\n    getMemoryType(image) {\r\n        return image.ROM_LOADER.MEMORY_MAP.filter((mapRange) => mapRange[0] <= this.addr && this.addr < mapRange[1]).map((mapRange) => mapRange[2]);\r\n    }\r\n    padToAlignment(alignment) {\r\n        this.data = padTo(this.data, alignment, 0);\r\n    }\r\n}\r\nexport class ELFSection extends ImageSegment {\r\n    constructor(name, addr, data, flags) {\r\n        super(addr, data, null, flags);\r\n        this.name = name;\r\n    }\r\n    toString() {\r\n        return `${this.name} ${super.toString()}`;\r\n    }\r\n}\r\nexport class BaseFirmwareImage {\r\n    constructor(rom) {\r\n        this.SEG_HEADER_LEN = 8;\r\n        this.SHA256_DIGEST_LEN = 32;\r\n        this.ELF_FLAG_WRITE = 0x1;\r\n        this.ELF_FLAG_READ = 0x2;\r\n        this.ELF_FLAG_EXEC = 0x4;\r\n        this.segments = [];\r\n        this.entrypoint = 0;\r\n        this.elfSha256 = null;\r\n        this.elfSha256Offset = 0;\r\n        this.padToSize = 0;\r\n        this.flashMode = 0;\r\n        this.flashSizeFreq = 0;\r\n        this.checksum = 0;\r\n        this.datalength = 0;\r\n        this.IROM_ALIGN = 0;\r\n        this.MMU_PAGE_SIZE_CONF = []; // Default is an empty array\r\n        this.ROM_LOADER = rom;\r\n    }\r\n    loadCommonHeader(data, offset, expectedMagic) {\r\n        const magic = data[offset];\r\n        const segments = data[offset + 1];\r\n        this.flashMode = data[offset + 2];\r\n        this.flashSizeFreq = data[offset + 3];\r\n        this.entrypoint = readUInt32LE(data, offset + 4);\r\n        if (magic !== expectedMagic) {\r\n            throw new ESPError(`Invalid firmware image magic=0x${magic.toString(16)}`);\r\n        }\r\n        return segments;\r\n    }\r\n    verify() {\r\n        if (this.segments.length > 16) {\r\n            throw new ESPError(`Invalid segment count ${this.segments.length} (max 16). ` + \"Usually this indicates a linker script problem.\");\r\n        }\r\n    }\r\n    loadSegment(data, offset, isIromSegment = false) {\r\n        const fileOffs = offset;\r\n        const segmentAddr = readUInt32LE(data, offset);\r\n        const segmentSize = readUInt32LE(data, offset + 4);\r\n        this.warnIfUnusualSegment(segmentAddr, segmentSize, isIromSegment);\r\n        const segmentData = data.slice(offset + 8, offset + 8 + segmentSize);\r\n        if (segmentData.length < segmentSize) {\r\n            throw new ESPError(`End of file reading segment 0x${segmentAddr.toString(16)}, length ${segmentSize} (actual length ${segmentData.length})`);\r\n        }\r\n        const segment = new ImageSegment(segmentAddr, segmentData, fileOffs);\r\n        this.segments.push(segment);\r\n        return segment;\r\n    }\r\n    warnIfUnusualSegment(offset, size, isIromSegment) {\r\n        if (!isIromSegment) {\r\n            if (offset > 0x40200000 || offset < 0x3ffe0000 || size > 65536) {\r\n                console.warn(`WARNING: Suspicious segment 0x${offset.toString(16)}, length ${size}`);\r\n            }\r\n        }\r\n    }\r\n    maybePatchSegmentData(data, filePos) {\r\n        const segmentLen = data.length;\r\n        if (this.elfSha256Offset >= filePos && this.elfSha256Offset < filePos + segmentLen) {\r\n            const patchOffset = this.elfSha256Offset - filePos;\r\n            if (patchOffset < this.SEG_HEADER_LEN || patchOffset + this.SHA256_DIGEST_LEN > segmentLen) {\r\n                throw new ESPError(\"Cannot place SHA256 digest on segment boundary\" +\r\n                    `(elf_sha256_offset=${this.elfSha256Offset}, file_pos=${filePos}, segment_size=${segmentLen})`);\r\n            }\r\n            const dataPatchOffset = patchOffset - this.SEG_HEADER_LEN;\r\n            const targetArea = data.slice(dataPatchOffset, dataPatchOffset + this.SHA256_DIGEST_LEN);\r\n            const isAllZeros = targetArea.every((byte) => byte === 0);\r\n            if (!isAllZeros) {\r\n                throw new ESPError(`Contents of segment at SHA256 digest offset 0x${this.elfSha256Offset.toString(16)} are not all zero. ` +\r\n                    \"Refusing to overwrite.\");\r\n            }\r\n            if (!this.elfSha256 || this.elfSha256.length !== this.SHA256_DIGEST_LEN) {\r\n                throw new ESPError(\"ELF SHA256 digest is not properly initialized\");\r\n            }\r\n            const beforePatch = data.slice(0, dataPatchOffset);\r\n            const afterPatch = data.slice(dataPatchOffset + this.SHA256_DIGEST_LEN);\r\n            const newLength = beforePatch.length + this.elfSha256.length + afterPatch.length;\r\n            const result = new Uint8Array(newLength);\r\n            result.set(beforePatch, 0);\r\n            result.set(this.elfSha256, beforePatch.length);\r\n            result.set(afterPatch, beforePatch.length + this.elfSha256.length);\r\n            return result;\r\n        }\r\n        return data;\r\n    }\r\n    saveSegment(output, offset, segment, checksumValue = null) {\r\n        const segmentData = this.maybePatchSegmentData(segment.data, offset);\r\n        // Write segment header\r\n        const view = new DataView(output.buffer, offset);\r\n        view.setUint32(0, segment.addr, true);\r\n        view.setUint32(4, segmentData.length, true);\r\n        // Write segment data\r\n        output.set(segmentData, offset + 8);\r\n        if (checksumValue !== null) {\r\n            return checksum(segmentData, checksumValue);\r\n        }\r\n        return 0;\r\n    }\r\n    saveFlashSegment(output, offset, segment, checksumValue = null) {\r\n        if (this.ROM_LOADER.CHIP_NAME === \"ESP32\") {\r\n            // Work around a bug in ESP-IDF 2nd stage bootloader, that it didn't map the\r\n            // last MMU page, if an IROM/DROM segment was < 0x24 bytes\r\n            // over the page boundary.\r\n            const segmentEndPos = offset + segment.data.length + this.SEG_HEADER_LEN;\r\n            const segmentLenRemainder = segmentEndPos % this.IROM_ALIGN;\r\n            if (segmentLenRemainder < 0x24) {\r\n                // Create a new array with padding\r\n                const paddedData = new Uint8Array(segment.data.length + (0x24 - segmentLenRemainder));\r\n                paddedData.set(segment.data);\r\n                // Fill the padding with zeros\r\n                paddedData.fill(0, segment.data.length);\r\n                segment.data = paddedData;\r\n            }\r\n        }\r\n        return this.saveSegment(output, offset, segment, checksumValue);\r\n    }\r\n    /**\r\n     * Return ESPLoader checksum from end of just-read image\r\n     * @param data image to read checksum from\r\n     * @param offset Current offset in image\r\n     * @returns {number} checksum value\r\n     */\r\n    readChecksum(data, offset) {\r\n        // Skip the padding. The checksum is stored in the last byte so that the\r\n        // file is a multiple of 16 bytes.\r\n        const alignedOffset = alignFilePosition(offset, 16);\r\n        return data[alignedOffset];\r\n    }\r\n    /**\r\n     * Calculate checksum of loaded image, based on segments in segment array.\r\n     * @returns {number} checksum value\r\n     */\r\n    calculateChecksum() {\r\n        let checksumValue = ESP_CHECKSUM_MAGIC;\r\n        for (const seg of this.segments) {\r\n            if (seg.includeInChecksum) {\r\n                checksumValue = checksum(seg.data, checksumValue);\r\n            }\r\n        }\r\n        return checksumValue;\r\n    }\r\n    appendChecksum(output, offset, checksumValue) {\r\n        const alignedOffset = alignFilePosition(offset, 16);\r\n        output[alignedOffset] = checksumValue;\r\n    }\r\n    writeCommonHeader(output, offset, segments) {\r\n        output[offset] = ESP_IMAGE_MAGIC;\r\n        output[offset + 1] = segments;\r\n        output[offset + 2] = this.flashMode;\r\n        output[offset + 3] = this.flashSizeFreq;\r\n        const view = new DataView(output.buffer, offset + 4);\r\n        view.setUint32(0, this.entrypoint, true);\r\n    }\r\n    isIromAddr(addr) {\r\n        return ESP8266ROM.IROM_MAP_START <= addr && addr < ESP8266ROM.IROM_MAP_END;\r\n    }\r\n    getIromSegment() {\r\n        const iromSegments = this.segments.filter((s) => this.isIromAddr(s.addr));\r\n        if (iromSegments.length > 0) {\r\n            if (iromSegments.length !== 1) {\r\n                throw new ESPError(`Found ${iromSegments.length} segments that could be irom0. Bad ELF file?`);\r\n            }\r\n            return iromSegments[0];\r\n        }\r\n        return null;\r\n    }\r\n    getNonIromSegments() {\r\n        const iromSegment = this.getIromSegment();\r\n        return this.segments.filter((s) => s !== iromSegment);\r\n    }\r\n    sortSegments() {\r\n        if (!this.segments.length) {\r\n            return; // nothing to sort\r\n        }\r\n        this.segments.sort((a, b) => a.addr - b.addr);\r\n    }\r\n    mergeAdjacentSegments() {\r\n        if (!this.segments.length) {\r\n            return; // nothing to merge\r\n        }\r\n        const segments = [];\r\n        // The easiest way to merge the sections is to browse them backward.\r\n        for (let i = this.segments.length - 1; i > 0; i--) {\r\n            // elem is the previous section, the one `next_elem` may need to be\r\n            // merged in\r\n            const elem = this.segments[i - 1];\r\n            const nextElem = this.segments[i];\r\n            if (elem.getMemoryType(this).join(\",\") === nextElem.getMemoryType(this).join(\",\") &&\r\n                elem.includeInChecksum === nextElem.includeInChecksum &&\r\n                nextElem.addr === elem.addr + elem.data.length &&\r\n                (nextElem.flags & this.ELF_FLAG_EXEC) === (elem.flags & this.ELF_FLAG_EXEC)) {\r\n                // Merge any segment that ends where the next one starts,\r\n                // without spanning memory types\r\n                //\r\n                // (don't 'pad' any gaps here as they may be excluded from the image\r\n                // due to 'noinit' or other reasons.)\r\n                const mergedData = new Uint8Array(elem.data.length + nextElem.data.length);\r\n                mergedData.set(elem.data);\r\n                mergedData.set(nextElem.data, elem.data.length);\r\n                elem.data = mergedData;\r\n            }\r\n            else {\r\n                // The section next_elem cannot be merged into the previous one,\r\n                // which means it needs to be part of the final segments.\r\n                // As we are browsing the list backward, the elements need to be\r\n                // inserted at the beginning of the final list.\r\n                segments.unshift(nextElem);\r\n            }\r\n        }\r\n        // The first segment will always be here as it cannot be merged into any\r\n        // \"previous\" section.\r\n        segments.unshift(this.segments[0]);\r\n        this.segments = segments;\r\n    }\r\n    setMmuPageSize(size) {\r\n        if (!this.MMU_PAGE_SIZE_CONF && size !== this.IROM_ALIGN) {\r\n            // For chips where MMU page size cannot be set or is fixed, log a warning and use the default.\r\n            console.warn(`WARNING: Changing MMU page size is not supported on ${this.ROM_LOADER.CHIP_NAME}! ` +\r\n                (this.IROM_ALIGN !== 0 ? `Defaulting to ${this.IROM_ALIGN / 1024}KB.` : \"\"));\r\n        }\r\n        else if (this.MMU_PAGE_SIZE_CONF && !this.MMU_PAGE_SIZE_CONF.includes(size)) {\r\n            // For chips with configurable MMU page sizes, throw an error if the size is invalid.\r\n            const validSizes = this.MMU_PAGE_SIZE_CONF.map((x) => `${x / 1024}KB`).join(\", \");\r\n            throw new ESPError(`${size} bytes is not a valid ${this.ROM_LOADER.CHIP_NAME} page size, select from ${validSizes}.`);\r\n        }\r\n        else {\r\n            // Set the MMU page size if valid.\r\n            this.IROM_ALIGN = size;\r\n        }\r\n    }\r\n}\r\n","import { bstrToUi8, ESP_CHECKSUM_MAGIC } from \"../util\";\r\nimport { alignFilePosition, BaseFirmwareImage, ELFSection, ESP_IMAGE_MAGIC, ImageSegment } from \"./base\";\r\nimport { ESPError } from \"../types/error\";\r\nexport class ESP32FirmwareImage extends BaseFirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom);\r\n        this.securePad = null;\r\n        this.flashMode = 0;\r\n        this.flashSizeFreq = 0;\r\n        this.version = 1;\r\n        // ROM bootloader will read the wp_pin field if SPI flash\r\n        // pins are remapped via flash. IDF actually enables QIO only\r\n        // from software bootloader, so this can be ignored. But needs\r\n        // to be set to this value so ROM bootloader will skip it.\r\n        this.WP_PIN_DISABLED = 0xee;\r\n        this.wpPin = this.WP_PIN_DISABLED;\r\n        // Extended header fields\r\n        this.clkDrv = 0;\r\n        this.qDrv = 0;\r\n        this.dDrv = 0;\r\n        this.csDrv = 0;\r\n        this.hdDrv = 0;\r\n        this.wpDrv = 0;\r\n        this.chipId = 0;\r\n        this.minRev = 0;\r\n        this.minRevFull = 0;\r\n        this.maxRevFull = 0;\r\n        this.storedDigest = null;\r\n        this.calcDigest = null;\r\n        this.dataLength = 0;\r\n        this.IROM_ALIGN = 65536;\r\n        this.ROM_LOADER = rom;\r\n        this.appendDigest = appendDigest;\r\n        this.ramOnlyHeader = ramOnlyHeader;\r\n        if (loadFile !== null) {\r\n            this.loadFromFile(loadFile);\r\n        }\r\n    }\r\n    async loadFromFile(loadFile) {\r\n        const start = 0;\r\n        const binaryData = bstrToUi8(loadFile);\r\n        let offset = 0;\r\n        const segments = this.loadCommonHeader(binaryData, offset, ESP_IMAGE_MAGIC);\r\n        offset += 8;\r\n        this.loadExtendedHeader(binaryData, offset);\r\n        offset += 16; // Extended header is 16 bytes\r\n        // Load segments\r\n        for (let i = 0; i < segments; i++) {\r\n            const segment = this.loadSegment(binaryData, offset);\r\n            offset += 8 + segment.data.length;\r\n        }\r\n        // Read checksum\r\n        this.checksum = this.readChecksum(binaryData, offset);\r\n        offset = alignFilePosition(offset, 16);\r\n        if (this.appendDigest) {\r\n            const end = offset;\r\n            this.storedDigest = binaryData.slice(offset, offset + this.SHA256_DIGEST_LEN);\r\n            const shaDigest = await crypto.subtle.digest(\"SHA-256\", binaryData.slice(start, end));\r\n            this.calcDigest = new Uint8Array(shaDigest);\r\n            this.dataLength = end - start;\r\n        }\r\n        this.verify();\r\n    }\r\n    isFlashAddr(addr) {\r\n        return ((this.ROM_LOADER.IROM_MAP_START <= addr && addr < this.ROM_LOADER.IROM_MAP_END) ||\r\n            (this.ROM_LOADER.DROM_MAP_START <= addr && addr < this.ROM_LOADER.DROM_MAP_END));\r\n    }\r\n    async save() {\r\n        let totalSegments = 0;\r\n        const output = new Uint8Array(1024 * 1024); // Start with 1MB buffer, will grow if needed\r\n        let offset = 0;\r\n        // Write common header\r\n        this.writeCommonHeader(output, offset, this.segments.length);\r\n        offset += 8;\r\n        // Write extended header\r\n        this.saveExtendedHeader(output, offset);\r\n        offset += 16;\r\n        let checksum = ESP_CHECKSUM_MAGIC;\r\n        // Split segments into flash-mapped vs ram-loaded\r\n        const flashSegments = this.segments.filter((s) => this.isFlashAddr(s.addr)).sort((a, b) => a.addr - b.addr);\r\n        const ramSegments = this.segments.filter((s) => !this.isFlashAddr(s.addr)).sort((a, b) => a.addr - b.addr);\r\n        // Patch to support ESP32-C6 union bus memmap\r\n        // move \".flash.appdesc\" segment to the top of the flash segment\r\n        for (let i = 0; i < flashSegments.length; i++) {\r\n            const segment = flashSegments[i];\r\n            if (segment instanceof ELFSection && segment.name === \".flash.appdesc\") {\r\n                flashSegments.splice(i, 1);\r\n                flashSegments.unshift(segment);\r\n                break;\r\n            }\r\n        }\r\n        // For the bootloader image\r\n        // move \".dram0.bootdesc\" segment to the top of the ram segment\r\n        // So bootdesc will be at the very top of the binary at 0x20 offset\r\n        // (in the first segment).\r\n        for (let i = 0; i < ramSegments.length; i++) {\r\n            const segment = ramSegments[i];\r\n            if (segment instanceof ELFSection && segment.name === \".dram0.bootdesc\") {\r\n                ramSegments.splice(i, 1);\r\n                ramSegments.unshift(segment);\r\n                break;\r\n            }\r\n        }\r\n        // Check for multiple ELF sections in same flash mapping region\r\n        if (flashSegments.length > 0) {\r\n            let lastAddr = flashSegments[0].addr;\r\n            for (const segment of flashSegments.slice(1)) {\r\n                if (Math.floor(segment.addr / this.IROM_ALIGN) === Math.floor(lastAddr / this.IROM_ALIGN)) {\r\n                    throw new ESPError(`Segment loaded at 0x${segment.addr.toString(16)} lands in same 64KB flash mapping ` +\r\n                        `as segment loaded at 0x${lastAddr.toString(16)}. Can't generate binary. ` +\r\n                        \"Suggest changing linker script or ELF to merge sections.\");\r\n                }\r\n                lastAddr = segment.addr;\r\n            }\r\n        }\r\n        if (this.ramOnlyHeader) {\r\n            // Write RAM segments first\r\n            for (const segment of ramSegments) {\r\n                checksum = this.saveSegment(output, offset, segment, checksum);\r\n                offset += 8 + segment.data.length;\r\n                totalSegments++;\r\n            }\r\n            this.appendChecksum(output, offset, checksum);\r\n            offset = alignFilePosition(offset, 16);\r\n            // Write flash segments\r\n            for (const segment of flashSegments.reverse()) {\r\n                let padLen = this.getAlignmentDataNeeded(segment, offset);\r\n                if (padLen > 0) {\r\n                    const align_min = this.ROM_LOADER.BOOTLOADER_FLASH_OFFSET - this.SEG_HEADER_LEN;\r\n                    if (padLen < align_min) {\r\n                        // in case pad_len does not fit minimum alignment,\r\n                        // pad it to next aligned boundary\r\n                        padLen += this.IROM_ALIGN;\r\n                    }\r\n                    padLen -= this.ROM_LOADER.BOOTLOADER_FLASH_OFFSET;\r\n                    const padSegment = new ImageSegment(0, new Uint8Array(padLen).fill(0), offset);\r\n                    checksum = this.saveSegment(output, offset, padSegment, checksum);\r\n                    offset += 8 + padLen;\r\n                    totalSegments++;\r\n                }\r\n                this.saveFlashSegment(output, offset, segment);\r\n                offset += 8 + segment.data.length;\r\n                totalSegments++;\r\n            }\r\n        }\r\n        else {\r\n            // Write flash segments with padding\r\n            while (flashSegments.length > 0) {\r\n                const segment = flashSegments[0];\r\n                const padLen = this.getAlignmentDataNeeded(segment, offset);\r\n                if (padLen > 0) {\r\n                    // need to pad\r\n                    if (ramSegments.length > 0 && padLen > this.SEG_HEADER_LEN) {\r\n                        // Split a part of the first RAM segment to use as padding\r\n                        const padSegment = ramSegments[0].splitImage(padLen);\r\n                        if (ramSegments[0].data.length === 0) {\r\n                            ramSegments.shift();\r\n                        }\r\n                        checksum = this.saveSegment(output, offset, padSegment, checksum);\r\n                    }\r\n                    else {\r\n                        // Use zero padding\r\n                        const padSegment = new ImageSegment(0, new Uint8Array(padLen).fill(0), offset);\r\n                        checksum = this.saveSegment(output, offset, padSegment, checksum);\r\n                    }\r\n                    offset += 8 + padLen;\r\n                    totalSegments++;\r\n                }\r\n                else {\r\n                    // write the flash segment\r\n                    if ((offset + 8) % this.IROM_ALIGN !== segment.addr % this.IROM_ALIGN) {\r\n                        throw new Error(\"Flash segment alignment mismatch\");\r\n                    }\r\n                    checksum = this.saveFlashSegment(output, offset, segment, checksum);\r\n                    flashSegments.shift();\r\n                    offset += 8 + segment.data.length;\r\n                    totalSegments++;\r\n                }\r\n            }\r\n            // Write remaining RAM segments\r\n            for (const segment of ramSegments) {\r\n                checksum = this.saveSegment(output, offset, segment, checksum);\r\n                offset += 8 + segment.data.length;\r\n                totalSegments++;\r\n            }\r\n        }\r\n        // Handle secure padding if needed\r\n        if (this.securePad) {\r\n            if (!this.appendDigest) {\r\n                throw new Error(\"secure_pad only applies if a SHA-256 digest is also appended to the image\");\r\n            }\r\n            const alignPast = (offset + this.SEG_HEADER_LEN) % this.IROM_ALIGN;\r\n            const checksumSpace = 16; // 16 byte aligned checksum\r\n            let spaceAfterChecksum = 0;\r\n            if (this.securePad === \"1\") {\r\n                // Secure Boot V1: SHA-256 digest + version + signature + 12 trailing bytes\r\n                spaceAfterChecksum = 32 + 4 + 64 + 12;\r\n            }\r\n            else if (this.securePad === \"2\") {\r\n                // Secure Boot V2: SHA-256 digest + signature sector (placed after 64KB boundary)\r\n                spaceAfterChecksum = 32;\r\n            }\r\n            const padLen = (this.IROM_ALIGN - alignPast - checksumSpace - spaceAfterChecksum) % this.IROM_ALIGN;\r\n            const padSegment = new ImageSegment(0, new Uint8Array(padLen).fill(0), offset);\r\n            checksum = this.saveSegment(output, offset, padSegment, checksum);\r\n            offset += 8 + padLen;\r\n            totalSegments++;\r\n        }\r\n        // Append checksum after all segments are written\r\n        if (!this.ramOnlyHeader) {\r\n            this.appendChecksum(output, offset, checksum);\r\n            offset = alignFilePosition(offset, 16);\r\n        }\r\n        const imageLength = offset;\r\n        // Go back to the initial header and write the new segment count\r\n        // This header is not checksummed\r\n        if (this.ramOnlyHeader) {\r\n            // Update the header with the RAM segments quantity as it should be\r\n            // visible by the ROM bootloader\r\n            output[1] = ramSegments.length;\r\n        }\r\n        else {\r\n            output[1] = totalSegments;\r\n        }\r\n        if (this.appendDigest) {\r\n            // calculate the SHA256 of the whole file and append it\r\n            const shaDigest = await crypto.subtle.digest(\"SHA-256\", output.slice(0, imageLength));\r\n            const digest = new Uint8Array(shaDigest);\r\n            output.set(digest, imageLength);\r\n            offset += 32;\r\n        }\r\n        if (this.padToSize) {\r\n            if (offset % this.padToSize !== 0) {\r\n                const padBy = this.padToSize - (offset % this.padToSize);\r\n                const padding = new Uint8Array(padBy);\r\n                padding.fill(0xff);\r\n                output.set(padding, offset);\r\n                offset += padBy;\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    loadExtendedHeader(data, offset) {\r\n        const view = new DataView(data.buffer, offset);\r\n        this.wpPin = view.getUint8(0);\r\n        const driveConfig = view.getUint8(1);\r\n        [this.clkDrv, this.qDrv] = this.splitByte(driveConfig);\r\n        const dConfig = view.getUint8(2);\r\n        [this.dDrv, this.csDrv] = this.splitByte(dConfig);\r\n        const hdConfig = view.getUint8(3);\r\n        [this.hdDrv, this.wpDrv] = this.splitByte(hdConfig);\r\n        this.chipId = view.getUint8(4);\r\n        if (this.chipId !== this.ROM_LOADER.IMAGE_CHIP_ID) {\r\n            console.warn(`Unexpected chip id in image. Expected ${this.ROM_LOADER.IMAGE_CHIP_ID} but value was ${this.chipId}. ` +\r\n                \"Is this image for a different chip model?\");\r\n        }\r\n        this.minRev = view.getUint8(5);\r\n        this.minRevFull = view.getUint16(6, true);\r\n        this.maxRevFull = view.getUint16(8, true);\r\n        // Last byte is append_digest validation\r\n        const appendDigest = view.getUint8(15);\r\n        if (appendDigest === 0 || appendDigest === 1) {\r\n            this.appendDigest = appendDigest === 1;\r\n        }\r\n        else {\r\n            throw new Error(`Invalid value for append_digest field (0x${appendDigest.toString(16)}). Should be 0 or 1.`);\r\n        }\r\n    }\r\n    saveExtendedHeader(output, offset) {\r\n        const headerBuffer = new ArrayBuffer(16);\r\n        const view = new DataView(headerBuffer);\r\n        view.setUint8(0, this.wpPin);\r\n        view.setUint8(1, this.joinByte(this.clkDrv, this.qDrv));\r\n        view.setUint8(2, this.joinByte(this.dDrv, this.csDrv));\r\n        view.setUint8(3, this.joinByte(this.hdDrv, this.wpDrv));\r\n        view.setUint8(4, this.ROM_LOADER.IMAGE_CHIP_ID);\r\n        view.setUint8(5, this.minRev);\r\n        view.setUint16(6, this.minRevFull, true);\r\n        view.setUint16(8, this.maxRevFull, true);\r\n        for (let i = 9; i < 15; i++) {\r\n            view.setUint8(i, 0);\r\n        }\r\n        view.setUint8(15, this.appendDigest ? 1 : 0);\r\n        // Copy the header buffer to the output\r\n        output.set(new Uint8Array(headerBuffer), offset);\r\n    }\r\n    splitByte(n) {\r\n        return [n & 0x0f, (n >> 4) & 0x0f];\r\n    }\r\n    joinByte(ln, hn) {\r\n        return (ln & 0x0f) | ((hn & 0x0f) << 4);\r\n    }\r\n    getAlignmentDataNeeded(segment, currentOffset) {\r\n        // Calculate alignment needed for segment\r\n        const alignPast = (segment.addr % this.IROM_ALIGN) - this.SEG_HEADER_LEN;\r\n        let padLen = this.IROM_ALIGN - (currentOffset % this.IROM_ALIGN) + alignPast;\r\n        if (padLen === 0 || padLen === this.IROM_ALIGN) {\r\n            return 0; // already aligned\r\n        }\r\n        padLen -= this.SEG_HEADER_LEN;\r\n        if (padLen < 0) {\r\n            padLen += this.IROM_ALIGN;\r\n        }\r\n        return padLen;\r\n    }\r\n}\r\n","import { ESP8266ROM } from \"../targets/esp8266\";\r\nimport { bstrToUi8 } from \"../util\";\r\nimport { BaseFirmwareImage, ESP_IMAGE_MAGIC } from \"./base\";\r\nexport class ESP8266ROMFirmwareImage extends BaseFirmwareImage {\r\n    constructor(rom, loadFile = null) {\r\n        super(rom);\r\n        this.version = 1;\r\n        this.ROM_LOADER = rom;\r\n        this.flashMode = 0;\r\n        this.flashSizeFreq = 0;\r\n        if (loadFile !== null) {\r\n            this.loadFromFile(loadFile);\r\n        }\r\n    }\r\n    loadFromFile(file) {\r\n        const binaryData = bstrToUi8(file);\r\n        let offset = 0;\r\n        const segments = this.loadCommonHeader(binaryData, offset, ESP_IMAGE_MAGIC);\r\n        offset += 8;\r\n        for (let i = 0; i < segments; i++) {\r\n            const segment = this.loadSegment(binaryData, offset);\r\n            offset += 8 + segment.data.length;\r\n        }\r\n        this.checksum = this.readChecksum(binaryData, offset);\r\n        this.verify();\r\n    }\r\n    defaultOutputName(inputFile) {\r\n        return inputFile + \"-\";\r\n    }\r\n}\r\nexport class ESP8266V2FirmwareImage extends BaseFirmwareImage {\r\n    constructor(rom, loadFile = null) {\r\n        super(rom);\r\n        this.version = 2;\r\n        this.ROM_LOADER = rom;\r\n        this.flashMode = 0;\r\n        this.flashSizeFreq = 0;\r\n        if (loadFile !== null) {\r\n            this.loadFromFile(loadFile);\r\n        }\r\n    }\r\n    async loadFromFile(fileStr) {\r\n        const binaryData = bstrToUi8(fileStr);\r\n        let offset = 0;\r\n        // Load first header\r\n        const segments = this.loadCommonHeader(binaryData, offset, ESP8266V2FirmwareImage.IMAGE_V2_MAGIC);\r\n        offset += 8;\r\n        if (segments !== ESP8266V2FirmwareImage.IMAGE_V2_SEGMENT) {\r\n            console.warn(`Warning: V2 header has unexpected \"segment\" count ${segments} (usually 4)`);\r\n        }\r\n        // Save first header values\r\n        const firstFlashMode = this.flashMode;\r\n        const firstFlashSizeFreq = this.flashSizeFreq;\r\n        const firstEntrypoint = this.entrypoint;\r\n        // irom segment comes before the second header\r\n        const iromSegment = this.loadSegment(binaryData, offset, true);\r\n        // for actual mapped addr, add ESP8266ROM.IROM_MAP_START + flashing_addr + 8\r\n        iromSegment.addr = 0;\r\n        iromSegment.includeInChecksum = false;\r\n        offset += 8 + iromSegment.data.length;\r\n        // Load the second header\r\n        const secondSegments = this.loadCommonHeader(binaryData, offset, ESP_IMAGE_MAGIC);\r\n        offset += 8;\r\n        // Compare headers\r\n        if (firstFlashMode !== this.flashMode) {\r\n            console.warn(`WARNING: Flash mode value in first header (0x${firstFlashMode.toString(16)}) disagrees with second (0x${this.flashMode.toString(16)}). Using second value.`);\r\n        }\r\n        if (firstFlashSizeFreq !== this.flashSizeFreq) {\r\n            console.warn(`WARNING: Flash size/freq value in first header (0x${firstFlashSizeFreq.toString(16)}) disagrees with second (0x${this.flashSizeFreq.toString(16)}). Using second value.`);\r\n        }\r\n        if (firstEntrypoint !== this.entrypoint) {\r\n            console.warn(`WARNING: Entrypoint address in first header (0x${firstEntrypoint.toString(16)}) disagrees with second header (0x${this.entrypoint.toString(16)}). Using second value.`);\r\n        }\r\n        // Load all the usual segments\r\n        for (let i = 0; i < secondSegments; i++) {\r\n            const segment = this.loadSegment(binaryData, offset);\r\n            offset += 8 + segment.data.length;\r\n        }\r\n        this.checksum = this.readChecksum(binaryData, offset);\r\n        this.verify();\r\n    }\r\n    defaultOutputName(inputFile) {\r\n        const iromSegment = this.getIromSegment();\r\n        let iromOffs = 0;\r\n        if (iromSegment !== null) {\r\n            iromOffs = iromSegment.addr - ESP8266ROM.IROM_MAP_START;\r\n        }\r\n        // Get the base name without extension\r\n        const baseName = inputFile.replace(/\\.[^/.]+$/, \"\");\r\n        const FLASH_SECTOR_SIZE = 0x1000;\r\n        // Calculate the offset aligned to flash sector size\r\n        const alignedOffset = iromOffs & ~(FLASH_SECTOR_SIZE - 1);\r\n        return `${baseName}-0x${alignedOffset.toString(16).padStart(5, \"0\")}.bin`;\r\n    }\r\n}\r\n// First byte of the \"v2\" application image\r\nESP8266V2FirmwareImage.IMAGE_V2_MAGIC = 0xea;\r\n// First 'segment' value in a \"v2\" application image\r\nESP8266V2FirmwareImage.IMAGE_V2_SEGMENT = 4;\r\n","import { ESP32FirmwareImage } from \"./esp32\";\r\nexport class ESP32S2FirmwareImage extends ESP32FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\nexport class ESP32S3FirmwareImage extends ESP32FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\nexport class ESP32C3FirmwareImage extends ESP32FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\nexport class ESP32C2FirmwareImage extends ESP32FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.MMU_PAGE_SIZE_CONF = [16384, 32768, 65536]; // 16KB, 32KB, 64KB\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\nexport class ESP32C6FirmwareImage extends ESP32FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.MMU_PAGE_SIZE_CONF = [8192, 16384, 32768, 65536];\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\nexport class ESP32C61FirmwareImage extends ESP32C6FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\nexport class ESP32C5FirmwareImage extends ESP32FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\nexport class ESP32P4FirmwareImage extends ESP32FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\nexport class ESP32H2FirmwareImage extends ESP32C6FirmwareImage {\r\n    constructor(rom, loadFile = null, appendDigest = true, ramOnlyHeader = false) {\r\n        super(rom, loadFile, appendDigest, ramOnlyHeader);\r\n        this.ROM_LOADER = rom;\r\n    }\r\n}\r\n","#!/usr/bin/env ts-node\r\nimport * as fs from 'fs';\r\nimport * as crypto from 'crypto';\r\n// import * as yargs from 'yargs';\r\n// import { hideBin } from 'yargs/helpers';\r\nconst MAX_PARTITION_LENGTH = 0xc00; // 3K for partition data (96 entries) leaves 1K in a 4K sector for signature\r\nconst MD5_PARTITION_BEGIN = Buffer.concat([Buffer.from([0xEB, 0xEB]), Buffer.alloc(14, 0xFF)]);\r\n// const PARTITION_TABLE_SIZE = 0x1000; // Size of partition table\r\n// const MIN_PARTITION_SUBTYPE_APP_OTA = 0x10;\r\n// const NUM_PARTITION_SUBTYPE_APP_OTA = 16;\r\n// const SECURE_NONE = null;\r\n// const SECURE_V1 = 'v1';\r\n// const SECURE_V2 = 'v2';\r\n// const __version__ = '1.3';\r\nconst APP_TYPE = 0x00;\r\nconst DATA_TYPE = 0x01;\r\nconst BOOTLOADER_TYPE = 0x02;\r\nconst PARTITION_TABLE_TYPE = 0x03;\r\nexport const TYPES = {\r\n    'bootloader': BOOTLOADER_TYPE,\r\n    'partition_table': PARTITION_TABLE_TYPE,\r\n    'app': APP_TYPE,\r\n    'data': DATA_TYPE,\r\n};\r\n// function getPtypeAsInt(ptype: string | number): number {\r\n//   if (typeof ptype === 'number') return ptype;\r\n//   return TYPES[ptype] ?? parseInt(ptype, 0);\r\n// }\r\nexport const SUBTYPES = {\r\n    [BOOTLOADER_TYPE]: {\r\n        'primary': 0x00,\r\n        'ota': 0x01,\r\n    },\r\n    [PARTITION_TABLE_TYPE]: {\r\n        'primary': 0x00,\r\n        'ota': 0x01,\r\n    },\r\n    [APP_TYPE]: {\r\n        'factory': 0x00,\r\n        'test': 0x20,\r\n    },\r\n    [DATA_TYPE]: {\r\n        'ota': 0x00,\r\n        'phy': 0x01,\r\n        'nvs': 0x02,\r\n        'coredump': 0x03,\r\n        'nvs_keys': 0x04,\r\n        'efuse': 0x05,\r\n        'undefined': 0x06,\r\n        'esphttpd': 0x80,\r\n        'fat': 0x81,\r\n        'spiffs': 0x82,\r\n        'littlefs': 0x83,\r\n    },\r\n};\r\n// function getSubtypeAsInt(ptype: string | number, subtype: string | number): number {\r\n//   ptype = getPtypeAsInt(ptype);\r\n//   if (typeof subtype === 'number') return subtype;\r\n//   return SUBTYPES[ptype][subtype] ?? parseInt(subtype, 0);\r\n// }\r\n// const ALIGNMENT: Record<number, number> = {\r\n//   [APP_TYPE]: 0x10000,\r\n//   [DATA_TYPE]: 0x1000,\r\n//   [BOOTLOADER_TYPE]: 0x1000,\r\n//   [PARTITION_TABLE_TYPE]: 0x1000,\r\n// };\r\n// function getAlignmentOffsetForType(ptype: number): number {\r\n//   return ALIGNMENT[ptype] ?? ALIGNMENT[DATA_TYPE];\r\n// }\r\n// function getAlignmentSizeForType(ptype: number, secure: string): number {\r\n//   if (ptype === APP_TYPE) {\r\n//     if (secure === SECURE_V1) {\r\n//       return 0x10000;\r\n//     } else if (secure === SECURE_V2) {\r\n//       return 0x1000;\r\n//     } else {\r\n//       return 0x1000;\r\n//     }\r\n//   }\r\n//   return 0x1;\r\n// }\r\n// function getPartitionType(ptype: string): number {\r\n//   switch (ptype) {\r\n//     case 'app':\r\n//       return APP_TYPE;\r\n//     case 'data':\r\n//       return DATA_TYPE;\r\n//     case 'bootloader':\r\n//       return BOOTLOADER_TYPE;\r\n//     case 'partition_table':\r\n//       return PARTITION_TABLE_TYPE;\r\n//     default:\r\n//       throw new Error('Invalid partition type');\r\n//   }\r\n// }\r\nfunction parseIntWithSuffix(value, keywords = {}) {\r\n    const lowerValue = value.toLowerCase();\r\n    for (const [suffix, multiplier] of Object.entries({ 'k': 1024, 'm': 1024 * 1024 })) {\r\n        if (lowerValue.endsWith(suffix)) {\r\n            return parseIntWithSuffix(lowerValue.slice(0, -1), keywords) * multiplier;\r\n        }\r\n    }\r\n    if (keywords[lowerValue] !== undefined)\r\n        return keywords[lowerValue];\r\n    return parseInt(value, 0);\r\n}\r\nexport class Partitions {\r\n    constructor() {\r\n        this.partitions = [];\r\n    }\r\n    static async fromFile(filePath) {\r\n        const data = await fs.promises.readFile(filePath);\r\n        if (data.slice(0, 2).equals(PartitionDefinition.MAGIC_BYTES)) {\r\n            console.log('Parsing binary partition input...');\r\n            return [Partitions.fromBinary(data), true];\r\n        }\r\n        console.log('Parsing CSV input...');\r\n        return [Partitions.fromCSV(data.toString()), false];\r\n    }\r\n    static fromCSV(csvContents) {\r\n        const result = new Partitions();\r\n        const lines = csvContents.split('\\n').map(line => line.trim()).filter(line => line.length > 0 && !line.startsWith('#'));\r\n        for (const [index, line] of lines.entries()) {\r\n            try {\r\n                result.partitions.push(PartitionDefinition.fromCSV(line, index + 1));\r\n            }\r\n            catch (error) {\r\n                console.error(`Error parsing CSV line ${index + 1}: ${line}`, error);\r\n                throw error;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    static fromBinary(data) {\r\n        data = Buffer.from(data);\r\n        const result = new Partitions();\r\n        const md5 = crypto.createHash('md5');\r\n        for (let offset = 0; offset < data.length; offset += 32) {\r\n            const chunk = data.slice(offset, offset + 32);\r\n            if (chunk.length !== 32 || chunk.equals(Buffer.alloc(32, 0xFF)))\r\n                break;\r\n            if (chunk.slice(0, 2).equals(MD5_PARTITION_BEGIN.slice(0, 2))) {\r\n                if (chunk.slice(16).equals(md5.digest()))\r\n                    continue;\r\n                else\r\n                    throw new Error(\"MD5 checksums don't match!\");\r\n            }\r\n            md5.update(Buffer.from(chunk));\r\n            result.partitions.push(PartitionDefinition.fromBinary(chunk));\r\n        }\r\n        return result;\r\n    }\r\n    toCSV() {\r\n        const rows = ['# ESP-IDF Partition Table', '# Name, Type, SubType, Offset, Size, Flags'];\r\n        for (const partition of this.partitions) {\r\n            rows.push(partition.toCSV());\r\n        }\r\n        return rows.join('\\n');\r\n    }\r\n    toBinary() {\r\n        let result = Buffer.concat(this.partitions.map((partition) => partition.toBinary()));\r\n        if (result.length >= MAX_PARTITION_LENGTH)\r\n            throw new Error('Binary partition table length longer than max');\r\n        if (result.length > 0)\r\n            result = Buffer.concat([result, MD5_PARTITION_BEGIN, crypto.createHash('md5').update(result).digest()]);\r\n        return Buffer.concat([result, Buffer.alloc(MAX_PARTITION_LENGTH - result.length, 0xFF)]);\r\n        // const flags = (this.encrypted ? 1 : 0) | (this.readonly ? 2 : 0);\r\n        // let b = new Buffer(PartitionDefinition.MAGIC_BYTES);\r\n        // this.partitions.forEach(element => {\r\n        //   b = Buffer.concat([\r\n        //     // todo: fix to use actual partitions collection\r\n        //   ]);\r\n        // });\r\n        // return b;\r\n    }\r\n}\r\nexport class PartitionDefinition {\r\n    constructor() {\r\n        this.name = \"\";\r\n        this.type = null;\r\n        this.subtype = null;\r\n        this.offset = null;\r\n        this.size = null;\r\n        this.encrypted = false;\r\n        this.readonly = false;\r\n    }\r\n    static fromCSV(line, lineNo) {\r\n        var _a;\r\n        const fields = line.split(',').map(field => field.trim());\r\n        const result = new PartitionDefinition();\r\n        result.name = fields[0];\r\n        result.type = parseIntWithSuffix(fields[1], TYPES);\r\n        result.subtype = parseIntWithSuffix(fields[2], (_a = SUBTYPES[result.type]) !== null && _a !== void 0 ? _a : {});\r\n        result.offset = parseIntWithSuffix(fields[3]);\r\n        result.size = parseIntWithSuffix(fields[4]);\r\n        for (const flag of fields[5].split(':')) {\r\n            if (flag === 'encrypted')\r\n                result.encrypted = true;\r\n            if (flag === 'readonly')\r\n                result.readonly = true;\r\n        }\r\n        return result;\r\n    }\r\n    static fromBinary(data) {\r\n        data = Buffer.from(data); // avoid method not found\r\n        const result = new PartitionDefinition();\r\n        const [magic, type, subtype, offset, size, name, flags] = [\r\n            data.slice(0, 2),\r\n            data.readUInt8(2),\r\n            data.readUInt8(3),\r\n            data.readUInt32LE(4),\r\n            data.readUInt32LE(8),\r\n            data.slice(12, 28).toString('utf-8').replace(/\\0/g, ''),\r\n            data.readUInt32LE(28)\r\n        ];\r\n        if (!magic.equals(PartitionDefinition.MAGIC_BYTES))\r\n            throw new Error('Invalid magic bytes for partition definition');\r\n        result.type = type;\r\n        result.subtype = subtype;\r\n        result.offset = offset;\r\n        result.size = size;\r\n        result.name = name;\r\n        result.encrypted = !!(flags & 1);\r\n        result.readonly = !!(flags & 2);\r\n        return result;\r\n    }\r\n    toCSV() {\r\n        var _a, _b, _c, _d, _e;\r\n        return [\r\n            this.name,\r\n            this.type !== null ? Object.keys(TYPES).find(key => TYPES[key] === this.type) : '',\r\n            this.subtype !== null ? Object.keys(SUBTYPES[(_a = this.type) !== null && _a !== void 0 ? _a : 0]).find(key => { var _a; return SUBTYPES[(_a = this.type) !== null && _a !== void 0 ? _a : 0][key] === this.subtype; }) : '',\r\n            `0x${(_c = (_b = this.offset) === null || _b === void 0 ? void 0 : _b.toString(16)) !== null && _c !== void 0 ? _c : '0'}`,\r\n            `0x${(_e = (_d = this.size) === null || _d === void 0 ? void 0 : _d.toString(16)) !== null && _e !== void 0 ? _e : '0'}`,\r\n            this.encrypted ? 'encrypted' : '',\r\n            this.readonly ? 'readonly' : ''\r\n        ].join(',');\r\n    }\r\n    toBinary() {\r\n        var _a, _b, _c, _d;\r\n        const flags = (this.encrypted ? 1 : 0) | (this.readonly ? 2 : 0);\r\n        const offsetBytes = Buffer.alloc(4);\r\n        offsetBytes.writeUInt32LE((_a = this.offset) !== null && _a !== void 0 ? _a : 0, 0);\r\n        const sizeBytes = Buffer.alloc(4);\r\n        sizeBytes.writeUInt32LE((_b = this.size) !== null && _b !== void 0 ? _b : 0, 0);\r\n        const flagBytes = Buffer.alloc(4);\r\n        flagBytes.writeUInt32LE(flags, 0);\r\n        return Buffer.concat([\r\n            Buffer.from([(_c = this.type) !== null && _c !== void 0 ? _c : 0, (_d = this.subtype) !== null && _d !== void 0 ? _d : 0]),\r\n            offsetBytes,\r\n            sizeBytes,\r\n            Buffer.alloc(16, this.name, 'utf-8'),\r\n            flagBytes\r\n        ]);\r\n    }\r\n}\r\nPartitionDefinition.MAGIC_BYTES = Buffer.from([0xAA, 0x50]);\r\n// async function main() {\r\n//   // Ensure yargs argv is properly typed\r\n// const argv = yargs(hideBin(process.argv)).options({\r\n//   'flash-size': { choices: ['1MB', '2MB', '4MB', '8MB', '16MB', '32MB', '64MB', '128MB'], describe: 'Optional flash size limit, checks partition table fits in flash' },\r\n//   'disable-md5sum': { type: 'boolean', describe: 'Disable md5 checksum for the partition table' },\r\n//   'no-verify': { type: 'boolean', describe: \"Don't verify partition table fields\", default: false },\r\n//   'offset': { type: 'string', default: '0x8000', describe: 'Set offset partition table' },\r\n//   'input': { type: 'string', demandOption: true, describe: 'Path to CSV or binary file to parse.' },\r\n//   'output': { type: 'string', default: '-', describe: 'Path to output converted binary or CSV file. Will use stdout if omitted.' }\r\n// }).argv as {\r\n//   'flashSize'?: string;\r\n//   'disableMd5sum'?: boolean;\r\n//   'noVerify'?: boolean;\r\n//   'offset': string;\r\n//   'input': string;\r\n//   'output': string;\r\n// };\r\n//   const [partitions, inputIsBinary] = await Partitions.fromFile(argv.input);\r\n//   if (!argv.noVerify) {\r\n//     console.log('Verifying table...');\r\n//     // partitions.verify(); // Implement verification logic similar to Python code\r\n//   }\r\n//   const output = inputIsBinary ? partitions.toCSV() : partitions.toBinary();\r\n//   const outputPath = argv.output === '-' ? '/dev/stdout' : argv.output;\r\n//   await fs.promises.writeFile(outputPath, output);\r\n// }\r\n// main().catch(error => {\r\n//   console.error(error);\r\n//   process.exit(2);\r\n// });\r\n// export class DummyImporter {\r\n//   started = false;\r\n//   constructor(){//self:DummyImporter) {\r\n//     console.log(\"ESP32 Partition Reader loading...\");\r\n//     // this.started = true;\r\n//   }\r\n//   static start(self:DummyImporter, inputBinary: ArrayBuffer){\r\n//     self.started = false;\r\n//   }\r\n// }\r\n","'use strict';\n\n// eslint-disable-next-line no-multi-assign\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes');\n\n// eslint-disable-next-line no-multi-assign\nexports.createHash = exports.Hash = require('create-hash');\n\n// eslint-disable-next-line no-multi-assign\nexports.createHmac = exports.Hmac = require('create-hmac');\n\nvar algos = require('browserify-sign/algos');\nvar algoKeys = Object.keys(algos);\nvar hashes = [\n\t'sha1',\n\t'sha224',\n\t'sha256',\n\t'sha384',\n\t'sha512',\n\t'md5',\n\t'rmd160'\n].concat(algoKeys);\n\nexports.getHashes = function () {\n\treturn hashes;\n};\n\nvar p = require('pbkdf2');\nexports.pbkdf2 = p.pbkdf2;\nexports.pbkdf2Sync = p.pbkdf2Sync;\n\nvar aes = require('browserify-cipher');\n\nexports.Cipher = aes.Cipher;\nexports.createCipher = aes.createCipher;\nexports.Cipheriv = aes.Cipheriv;\nexports.createCipheriv = aes.createCipheriv;\nexports.Decipher = aes.Decipher;\nexports.createDecipher = aes.createDecipher;\nexports.Decipheriv = aes.Decipheriv;\nexports.createDecipheriv = aes.createDecipheriv;\nexports.getCiphers = aes.getCiphers;\nexports.listCiphers = aes.listCiphers;\n\nvar dh = require('diffie-hellman');\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup;\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;\nexports.getDiffieHellman = dh.getDiffieHellman;\nexports.createDiffieHellman = dh.createDiffieHellman;\nexports.DiffieHellman = dh.DiffieHellman;\n\nvar sign = require('browserify-sign');\n\nexports.createSign = sign.createSign;\nexports.Sign = sign.Sign;\nexports.createVerify = sign.createVerify;\nexports.Verify = sign.Verify;\n\nexports.createECDH = require('create-ecdh');\n\nvar publicEncrypt = require('public-encrypt');\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt;\nexports.privateEncrypt = publicEncrypt.privateEncrypt;\nexports.publicDecrypt = publicEncrypt.publicDecrypt;\nexports.privateDecrypt = publicEncrypt.privateDecrypt;\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// [\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error('sorry, ' + name + ' is not implemented yet\\nwe accept pull requests\\nhttps://github.com/browserify/crypto-browserify');\n//   };\n// });\n\nvar rf = require('randomfill');\n\nexports.randomFill = rf.randomFill;\nexports.randomFillSync = rf.randomFillSync;\n\nexports.createCredentials = function () {\n\tthrow new Error('sorry, createCredentials is not implemented yet\\nwe accept pull requests\\nhttps://github.com/browserify/crypto-browserify');\n};\n\nexports.constants = {\n\tDH_CHECK_P_NOT_SAFE_PRIME: 2,\n\tDH_CHECK_P_NOT_PRIME: 1,\n\tDH_UNABLE_TO_CHECK_GENERATOR: 4,\n\tDH_NOT_SUITABLE_GENERATOR: 8,\n\tNPN_ENABLED: 1,\n\tALPN_ENABLED: 1,\n\tRSA_PKCS1_PADDING: 1,\n\tRSA_SSLV23_PADDING: 2,\n\tRSA_NO_PADDING: 3,\n\tRSA_PKCS1_OAEP_PADDING: 4,\n\tRSA_X931_PADDING: 5,\n\tRSA_PKCS1_PSS_PADDING: 6,\n\tPOINT_CONVERSION_COMPRESSED: 2,\n\tPOINT_CONVERSION_UNCOMPRESSED: 4,\n\tPOINT_CONVERSION_HYBRID: 6\n};\n","'use strict';\n\nmodule.exports = require('./browser/algorithms.json');\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","{\n    \"modp1\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"\n    },\n    \"modp2\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"\n    },\n    \"modp5\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"\n    },\n    \"modp14\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"\n    },\n    \"modp15\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"\n    },\n    \"modp16\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"\n    },\n    \"modp17\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"\n    },\n    \"modp18\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"\n    }\n}","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar createHash = require('create-hash');\nvar stream = require('readable-stream');\nvar inherits = require('inherits');\nvar sign = require('./sign');\nvar verify = require('./verify');\n\nvar algorithms = require('./algorithms.json');\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\n\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Sign, stream.Writable);\n\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nSign.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n  var hash = this._hash.digest();\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Verify, stream.Writable);\n\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nVerify.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  var sigBuffer = typeof sig === 'string' ? Buffer.from(sig, enc) : sig;\n\n  this.end();\n  var hash = this._hash.digest();\n  return verify(sigBuffer, hash, key, this._signType, this._tag);\n};\n\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\n\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};\n","'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar createHmac = require('create-hmac');\nvar crt = require('browserify-rsa');\nvar EC = require('elliptic').ec;\nvar BN = require('bn.js');\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nvar RSA_PKCS1_PADDING = 1;\n\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong private key type'); }\n    return dsaSign(hash, priv, hashType);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n  if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) { throw new Error('illegal or unsupported padding mode'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n  while (hash.length + pad.length + 1 < len) { pad.push(0xff); }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) { pad.push(hash[i]); }\n\n  var out = crt(pad, priv);\n  return out;\n}\n\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + priv.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n\n  return Buffer.from(out.toDER());\n}\n\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n  return toDER(r, s);\n}\n\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80) { r = [0].concat(r); }\n  if (s[0] & 0x80) { s = [0].concat(s); }\n\n  var total = r.length + s.length + 4;\n  var res = [\n    0x30, total, 0x02, r.length\n  ];\n  res = res.concat(r, [0x02, s.length], s);\n  return Buffer.from(res);\n}\n\nfunction getKey(x, q, hash, algo) {\n  x = Buffer.from(x.toArray());\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length);\n    x = Buffer.concat([zeros, x]);\n  }\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = Buffer.alloc(hlen);\n  v.fill(1);\n  var k = Buffer.alloc(hlen);\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return { k: k, v: v };\n}\n\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) { bits.ishrn(shift); }\n  return bits;\n}\n\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = Buffer.from(bits.toArray());\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length);\n    out = Buffer.concat([zeros, out]);\n  }\n  return out;\n}\n\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n\n  do {\n    t = Buffer.alloc(0);\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n\n  return k;\n}\n\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\n\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;\n","{\n  \"1.3.132.0.10\": \"secp256k1\",\n  \"1.3.132.0.33\": \"p224\",\n  \"1.2.840.10045.3.1.1\": \"p192\",\n  \"1.2.840.10045.3.1.7\": \"p256\",\n  \"1.3.132.0.34\": \"p384\",\n  \"1.3.132.0.35\": \"p521\"\n}\n","'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar BN = require('bn.js');\nvar EC = require('elliptic').ec;\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nfunction verify(sig, hash, key, signType, tag) {\n  var pub = parseKeys(key);\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }\n    return ecVerify(sig, hash, pub);\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong public key type'); }\n    return dsaVerify(sig, hash, pub);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = pub.modulus.byteLength();\n  var pad = [1];\n  var padNum = 0;\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff);\n    padNum += 1;\n  }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) {\n    pad.push(hash[i]);\n  }\n  pad = Buffer.from(pad);\n  var red = BN.mont(pub.modulus);\n  sig = new BN(sig).toRed(red);\n\n  sig = sig.redPow(new BN(pub.publicExponent));\n  sig = Buffer.from(sig.fromRed().toArray());\n  var out = padNum < 8 ? 1 : 0;\n  len = Math.min(sig.length, pad.length);\n  if (sig.length !== pad.length) { out = 1; }\n\n  i = -1;\n  while (++i < len) { out |= sig[i] ^ pad[i]; }\n  return out === 0;\n}\n\nfunction ecVerify(sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var pubkey = pub.data.subjectPrivateKey.data;\n\n  return curve.verify(hash, sig, pubkey);\n}\n\nfunction dsaVerify(sig, hash, pub) {\n  var p = pub.data.p;\n  var q = pub.data.q;\n  var g = pub.data.g;\n  var y = pub.data.pub_key;\n  var unpacked = parseKeys.signature.decode(sig, 'der');\n  var s = unpacked.s;\n  var r = unpacked.r;\n  checkValue(s, q);\n  checkValue(r, q);\n  var montp = BN.mont(p);\n  var w = s.invm(q);\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q);\n  return v.cmp(r) === 0;\n}\n\nfunction checkValue(b, q) {\n  if (b.cmpn(0) <= 0) { throw new Error('invalid sig'); }\n  if (b.cmp(q) >= 0) { throw new Error('invalid sig'); }\n}\n\nmodule.exports = verify;\n","exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","/*\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of\n * the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in\n * writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing\n * permissions and limitations under the License.\n */\n'use strict';\nexport var SerialPolyfillProtocol;\n(function (SerialPolyfillProtocol) {\n    SerialPolyfillProtocol[SerialPolyfillProtocol[\"UsbCdcAcm\"] = 0] = \"UsbCdcAcm\";\n})(SerialPolyfillProtocol || (SerialPolyfillProtocol = {}));\nconst kSetLineCoding = 0x20;\nconst kSetControlLineState = 0x22;\nconst kSendBreak = 0x23;\nconst kDefaultBufferSize = 255;\nconst kDefaultDataBits = 8;\nconst kDefaultParity = 'none';\nconst kDefaultStopBits = 1;\nconst kAcceptableDataBits = [16, 8, 7, 6, 5];\nconst kAcceptableStopBits = [1, 2];\nconst kAcceptableParity = ['none', 'even', 'odd'];\nconst kParityIndexMapping = ['none', 'odd', 'even'];\nconst kStopBitsIndexMapping = [1, 1.5, 2];\nconst kDefaultPolyfillOptions = {\n    protocol: SerialPolyfillProtocol.UsbCdcAcm,\n    usbControlInterfaceClass: 2,\n    usbTransferInterfaceClass: 10,\n};\n/**\n * Utility function to get the interface implementing a desired class.\n * @param {USBDevice} device The USB device.\n * @param {number} classCode The desired interface class.\n * @return {USBInterface} The first interface found that implements the desired\n * class.\n * @throws TypeError if no interface is found.\n */\nfunction findInterface(device, classCode) {\n    const configuration = device.configurations[0];\n    for (const iface of configuration.interfaces) {\n        const alternate = iface.alternates[0];\n        if (alternate.interfaceClass === classCode) {\n            return iface;\n        }\n    }\n    throw new TypeError(`Unable to find interface with class ${classCode}.`);\n}\n/**\n * Utility function to get an endpoint with a particular direction.\n * @param {USBInterface} iface The interface to search.\n * @param {USBDirection} direction The desired transfer direction.\n * @return {USBEndpoint} The first endpoint with the desired transfer direction.\n * @throws TypeError if no endpoint is found.\n */\nfunction findEndpoint(iface, direction) {\n    const alternate = iface.alternates[0];\n    for (const endpoint of alternate.endpoints) {\n        if (endpoint.direction == direction) {\n            return endpoint;\n        }\n    }\n    throw new TypeError(`Interface ${iface.interfaceNumber} does not have an ` +\n        `${direction} endpoint.`);\n}\n/**\n * Implementation of the underlying source API[1] which reads data from a USB\n * endpoint. This can be used to construct a ReadableStream.\n *\n * [1]: https://streams.spec.whatwg.org/#underlying-source-api\n */\nclass UsbEndpointUnderlyingSource {\n    /**\n     * Constructs a new UnderlyingSource that will pull data from the specified\n     * endpoint on the given USB device.\n     *\n     * @param {USBDevice} device\n     * @param {USBEndpoint} endpoint\n     * @param {function} onError function to be called on error\n     */\n    constructor(device, endpoint, onError) {\n        this.type = 'bytes';\n        this.device_ = device;\n        this.endpoint_ = endpoint;\n        this.onError_ = onError;\n    }\n    /**\n     * Reads a chunk of data from the device.\n     *\n     * @param {ReadableByteStreamController} controller\n     */\n    pull(controller) {\n        (async () => {\n            var _a;\n            let chunkSize;\n            if (controller.desiredSize) {\n                const d = controller.desiredSize / this.endpoint_.packetSize;\n                chunkSize = Math.ceil(d) * this.endpoint_.packetSize;\n            }\n            else {\n                chunkSize = this.endpoint_.packetSize;\n            }\n            try {\n                const result = await this.device_.transferIn(this.endpoint_.endpointNumber, chunkSize);\n                if (result.status != 'ok') {\n                    controller.error(`USB error: ${result.status}`);\n                    this.onError_();\n                }\n                if ((_a = result.data) === null || _a === void 0 ? void 0 : _a.buffer) {\n                    const chunk = new Uint8Array(result.data.buffer, result.data.byteOffset, result.data.byteLength);\n                    controller.enqueue(chunk);\n                }\n            }\n            catch (error) {\n                controller.error(error.toString());\n                this.onError_();\n            }\n        })();\n    }\n}\n/**\n * Implementation of the underlying sink API[2] which writes data to a USB\n * endpoint. This can be used to construct a WritableStream.\n *\n * [2]: https://streams.spec.whatwg.org/#underlying-sink-api\n */\nclass UsbEndpointUnderlyingSink {\n    /**\n     * Constructs a new UnderlyingSink that will write data to the specified\n     * endpoint on the given USB device.\n     *\n     * @param {USBDevice} device\n     * @param {USBEndpoint} endpoint\n     * @param {function} onError function to be called on error\n     */\n    constructor(device, endpoint, onError) {\n        this.device_ = device;\n        this.endpoint_ = endpoint;\n        this.onError_ = onError;\n    }\n    /**\n     * Writes a chunk to the device.\n     *\n     * @param {Uint8Array} chunk\n     * @param {WritableStreamDefaultController} controller\n     */\n    async write(chunk, controller) {\n        try {\n            const result = await this.device_.transferOut(this.endpoint_.endpointNumber, chunk);\n            if (result.status != 'ok') {\n                controller.error(result.status);\n                this.onError_();\n            }\n        }\n        catch (error) {\n            controller.error(error.toString());\n            this.onError_();\n        }\n    }\n}\n/** a class used to control serial devices over WebUSB */\nexport class SerialPort {\n    /**\n     * constructor taking a WebUSB device that creates a SerialPort instance.\n     * @param {USBDevice} device A device acquired from the WebUSB API\n     * @param {SerialPolyfillOptions} polyfillOptions Optional options to\n     * configure the polyfill.\n     */\n    constructor(device, polyfillOptions) {\n        this.polyfillOptions_ = Object.assign(Object.assign({}, kDefaultPolyfillOptions), polyfillOptions);\n        this.outputSignals_ = {\n            dataTerminalReady: false,\n            requestToSend: false,\n            break: false,\n        };\n        this.device_ = device;\n        this.controlInterface_ = findInterface(this.device_, this.polyfillOptions_.usbControlInterfaceClass);\n        this.transferInterface_ = findInterface(this.device_, this.polyfillOptions_.usbTransferInterfaceClass);\n        this.inEndpoint_ = findEndpoint(this.transferInterface_, 'in');\n        this.outEndpoint_ = findEndpoint(this.transferInterface_, 'out');\n    }\n    /**\n     * Getter for the readable attribute. Constructs a new ReadableStream as\n     * necessary.\n     * @return {ReadableStream} the current readable stream\n     */\n    get readable() {\n        var _a;\n        if (!this.readable_ && this.device_.opened) {\n            this.readable_ = new ReadableStream(new UsbEndpointUnderlyingSource(this.device_, this.inEndpoint_, () => {\n                this.readable_ = null;\n            }), {\n                highWaterMark: (_a = this.serialOptions_.bufferSize) !== null && _a !== void 0 ? _a : kDefaultBufferSize,\n            });\n        }\n        return this.readable_;\n    }\n    /**\n     * Getter for the writable attribute. Constructs a new WritableStream as\n     * necessary.\n     * @return {WritableStream} the current writable stream\n     */\n    get writable() {\n        var _a;\n        if (!this.writable_ && this.device_.opened) {\n            this.writable_ = new WritableStream(new UsbEndpointUnderlyingSink(this.device_, this.outEndpoint_, () => {\n                this.writable_ = null;\n            }), new ByteLengthQueuingStrategy({\n                highWaterMark: (_a = this.serialOptions_.bufferSize) !== null && _a !== void 0 ? _a : kDefaultBufferSize,\n            }));\n        }\n        return this.writable_;\n    }\n    /**\n     * a function that opens the device and claims all interfaces needed to\n     * control and communicate to and from the serial device\n     * @param {SerialOptions} options Object containing serial options\n     * @return {Promise<void>} A promise that will resolve when device is ready\n     * for communication\n     */\n    async open(options) {\n        this.serialOptions_ = options;\n        this.validateOptions();\n        try {\n            await this.device_.open();\n            if (this.device_.configuration === null) {\n                await this.device_.selectConfiguration(1);\n            }\n            await this.device_.claimInterface(this.controlInterface_.interfaceNumber);\n            if (this.controlInterface_ !== this.transferInterface_) {\n                await this.device_.claimInterface(this.transferInterface_.interfaceNumber);\n            }\n            await this.setLineCoding();\n            await this.setSignals({ dataTerminalReady: true });\n        }\n        catch (error) {\n            if (this.device_.opened) {\n                await this.device_.close();\n            }\n            throw new Error('Error setting up device: ' + error.toString());\n        }\n    }\n    /**\n     * Closes the port.\n     *\n     * @return {Promise<void>} A promise that will resolve when the port is\n     * closed.\n     */\n    async close() {\n        const promises = [];\n        if (this.readable_) {\n            promises.push(this.readable_.cancel());\n        }\n        if (this.writable_) {\n            promises.push(this.writable_.abort());\n        }\n        await Promise.all(promises);\n        this.readable_ = null;\n        this.writable_ = null;\n        if (this.device_.opened) {\n            await this.setSignals({ dataTerminalReady: false, requestToSend: false });\n            await this.device_.close();\n        }\n    }\n    /**\n     * Forgets the port.\n     *\n     * @return {Promise<void>} A promise that will resolve when the port is\n     * forgotten.\n     */\n    async forget() {\n        return this.device_.forget();\n    }\n    /**\n     * A function that returns properties of the device.\n     * @return {SerialPortInfo} Device properties.\n     */\n    getInfo() {\n        return {\n            usbVendorId: this.device_.vendorId,\n            usbProductId: this.device_.productId,\n        };\n    }\n    /**\n     * A function used to change the serial settings of the device\n     * @param {object} options the object which carries serial settings data\n     * @return {Promise<void>} A promise that will resolve when the options are\n     * set\n     */\n    reconfigure(options) {\n        this.serialOptions_ = Object.assign(Object.assign({}, this.serialOptions_), options);\n        this.validateOptions();\n        return this.setLineCoding();\n    }\n    /**\n     * Sets control signal state for the port.\n     * @param {SerialOutputSignals} signals The signals to enable or disable.\n     * @return {Promise<void>} a promise that is resolved when the signal state\n     * has been changed.\n     */\n    async setSignals(signals) {\n        this.outputSignals_ = Object.assign(Object.assign({}, this.outputSignals_), signals);\n        if (signals.dataTerminalReady !== undefined ||\n            signals.requestToSend !== undefined) {\n            // The Set_Control_Line_State command expects a bitmap containing the\n            // values of all output signals that should be enabled or disabled.\n            //\n            // Ref: USB CDC specification version 1.1 §6.2.14.\n            const value = (this.outputSignals_.dataTerminalReady ? 1 << 0 : 0) |\n                (this.outputSignals_.requestToSend ? 1 << 1 : 0);\n            await this.device_.controlTransferOut({\n                'requestType': 'class',\n                'recipient': 'interface',\n                'request': kSetControlLineState,\n                'value': value,\n                'index': this.controlInterface_.interfaceNumber,\n            });\n        }\n        if (signals.break !== undefined) {\n            // The SendBreak command expects to be given a duration for how long the\n            // break signal should be asserted. Passing 0xFFFF enables the signal\n            // until 0x0000 is send.\n            //\n            // Ref: USB CDC specification version 1.1 §6.2.15.\n            const value = this.outputSignals_.break ? 0xFFFF : 0x0000;\n            await this.device_.controlTransferOut({\n                'requestType': 'class',\n                'recipient': 'interface',\n                'request': kSendBreak,\n                'value': value,\n                'index': this.controlInterface_.interfaceNumber,\n            });\n        }\n    }\n    /**\n     * Checks the serial options for validity and throws an error if it is\n     * not valid\n     */\n    validateOptions() {\n        if (!this.isValidBaudRate(this.serialOptions_.baudRate)) {\n            throw new RangeError('invalid Baud Rate ' + this.serialOptions_.baudRate);\n        }\n        if (!this.isValidDataBits(this.serialOptions_.dataBits)) {\n            throw new RangeError('invalid dataBits ' + this.serialOptions_.dataBits);\n        }\n        if (!this.isValidStopBits(this.serialOptions_.stopBits)) {\n            throw new RangeError('invalid stopBits ' + this.serialOptions_.stopBits);\n        }\n        if (!this.isValidParity(this.serialOptions_.parity)) {\n            throw new RangeError('invalid parity ' + this.serialOptions_.parity);\n        }\n    }\n    /**\n     * Checks the baud rate for validity\n     * @param {number} baudRate the baud rate to check\n     * @return {boolean} A boolean that reflects whether the baud rate is valid\n     */\n    isValidBaudRate(baudRate) {\n        return baudRate % 1 === 0;\n    }\n    /**\n     * Checks the data bits for validity\n     * @param {number} dataBits the data bits to check\n     * @return {boolean} A boolean that reflects whether the data bits setting is\n     * valid\n     */\n    isValidDataBits(dataBits) {\n        if (typeof dataBits === 'undefined') {\n            return true;\n        }\n        return kAcceptableDataBits.includes(dataBits);\n    }\n    /**\n     * Checks the stop bits for validity\n     * @param {number} stopBits the stop bits to check\n     * @return {boolean} A boolean that reflects whether the stop bits setting is\n     * valid\n     */\n    isValidStopBits(stopBits) {\n        if (typeof stopBits === 'undefined') {\n            return true;\n        }\n        return kAcceptableStopBits.includes(stopBits);\n    }\n    /**\n     * Checks the parity for validity\n     * @param {string} parity the parity to check\n     * @return {boolean} A boolean that reflects whether the parity is valid\n     */\n    isValidParity(parity) {\n        if (typeof parity === 'undefined') {\n            return true;\n        }\n        return kAcceptableParity.includes(parity);\n    }\n    /**\n     * sends the options alog the control interface to set them on the device\n     * @return {Promise} a promise that will resolve when the options are set\n     */\n    async setLineCoding() {\n        var _a, _b, _c;\n        // Ref: USB CDC specification version 1.1 §6.2.12.\n        const buffer = new ArrayBuffer(7);\n        const view = new DataView(buffer);\n        view.setUint32(0, this.serialOptions_.baudRate, true);\n        view.setUint8(4, kStopBitsIndexMapping.indexOf((_a = this.serialOptions_.stopBits) !== null && _a !== void 0 ? _a : kDefaultStopBits));\n        view.setUint8(5, kParityIndexMapping.indexOf((_b = this.serialOptions_.parity) !== null && _b !== void 0 ? _b : kDefaultParity));\n        view.setUint8(6, (_c = this.serialOptions_.dataBits) !== null && _c !== void 0 ? _c : kDefaultDataBits);\n        const result = await this.device_.controlTransferOut({\n            'requestType': 'class',\n            'recipient': 'interface',\n            'request': kSetLineCoding,\n            'value': 0x00,\n            'index': this.controlInterface_.interfaceNumber,\n        }, buffer);\n        if (result.status != 'ok') {\n            throw new DOMException('NetworkError', 'Failed to set line coding.');\n        }\n    }\n}\n/** implementation of the global navigator.serial object */\nclass Serial {\n    /**\n     * Requests permission to access a new port.\n     *\n     * @param {SerialPortRequestOptions} options\n     * @param {SerialPolyfillOptions} polyfillOptions\n     * @return {Promise<SerialPort>}\n     */\n    async requestPort(options, polyfillOptions) {\n        polyfillOptions = Object.assign(Object.assign({}, kDefaultPolyfillOptions), polyfillOptions);\n        const usbFilters = [];\n        if (options && options.filters) {\n            for (const filter of options.filters) {\n                const usbFilter = {\n                    classCode: polyfillOptions.usbControlInterfaceClass,\n                };\n                if (filter.usbVendorId !== undefined) {\n                    usbFilter.vendorId = filter.usbVendorId;\n                }\n                if (filter.usbProductId !== undefined) {\n                    usbFilter.productId = filter.usbProductId;\n                }\n                usbFilters.push(usbFilter);\n            }\n        }\n        if (usbFilters.length === 0) {\n            usbFilters.push({\n                classCode: polyfillOptions.usbControlInterfaceClass,\n            });\n        }\n        const device = await navigator.usb.requestDevice({ 'filters': usbFilters });\n        const port = new SerialPort(device, polyfillOptions);\n        return port;\n    }\n    /**\n     * Get the set of currently available ports.\n     *\n     * @param {SerialPolyfillOptions} polyfillOptions Polyfill configuration that\n     * should be applied to these ports.\n     * @return {Promise<SerialPort[]>} a promise that is resolved with a list of\n     * ports.\n     */\n    async getPorts(polyfillOptions) {\n        polyfillOptions = Object.assign(Object.assign({}, kDefaultPolyfillOptions), polyfillOptions);\n        const devices = await navigator.usb.getDevices();\n        const ports = [];\n        devices.forEach((device) => {\n            try {\n                const port = new SerialPort(device, polyfillOptions);\n                ports.push(port);\n            }\n            catch (e) {\n                // Skip unrecognized port.\n            }\n        });\n        return ports;\n    }\n}\n/* an object to be used for starting the serial workflow */\nexport const serial = new Serial();\n//# sourceMappingURL=serial.js.map","/*\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of\n * the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in\n * writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing\n * permissions and limitations under the License.\n */\n'use strict';\n\nexport enum SerialPolyfillProtocol {\n  UsbCdcAcm, // eslint-disable-line no-unused-vars\n}\n\nexport interface SerialPolyfillOptions {\n  protocol?: SerialPolyfillProtocol;\n  usbControlInterfaceClass?: number;\n  usbTransferInterfaceClass?: number;\n}\n\nconst kSetLineCoding = 0x20;\nconst kSetControlLineState = 0x22;\nconst kSendBreak = 0x23;\n\nconst kDefaultBufferSize = 255;\nconst kDefaultDataBits = 8;\nconst kDefaultParity = 'none';\nconst kDefaultStopBits = 1;\n\nconst kAcceptableDataBits = [16, 8, 7, 6, 5];\nconst kAcceptableStopBits = [1, 2];\nconst kAcceptableParity = ['none', 'even', 'odd'];\n\nconst kParityIndexMapping: ParityType[] =\n    ['none', 'odd', 'even'];\nconst kStopBitsIndexMapping = [1, 1.5, 2];\n\nconst kDefaultPolyfillOptions = {\n  protocol: SerialPolyfillProtocol.UsbCdcAcm,\n  usbControlInterfaceClass: 2,\n  usbTransferInterfaceClass: 10,\n};\n\n/**\n * Utility function to get the interface implementing a desired class.\n * @param {USBDevice} device The USB device.\n * @param {number} classCode The desired interface class.\n * @return {USBInterface} The first interface found that implements the desired\n * class.\n * @throws TypeError if no interface is found.\n */\nfunction findInterface(device: USBDevice, classCode: number): USBInterface {\n  const configuration = device.configurations[0];\n  for (const iface of configuration.interfaces) {\n    const alternate = iface.alternates[0];\n    if (alternate.interfaceClass === classCode) {\n      return iface;\n    }\n  }\n  throw new TypeError(`Unable to find interface with class ${classCode}.`);\n}\n\n/**\n * Utility function to get an endpoint with a particular direction.\n * @param {USBInterface} iface The interface to search.\n * @param {USBDirection} direction The desired transfer direction.\n * @return {USBEndpoint} The first endpoint with the desired transfer direction.\n * @throws TypeError if no endpoint is found.\n */\nfunction findEndpoint(iface: USBInterface, direction: USBDirection):\n    USBEndpoint {\n  const alternate = iface.alternates[0];\n  for (const endpoint of alternate.endpoints) {\n    if (endpoint.direction == direction) {\n      return endpoint;\n    }\n  }\n  throw new TypeError(`Interface ${iface.interfaceNumber} does not have an ` +\n                      `${direction} endpoint.`);\n}\n\n/**\n * Implementation of the underlying source API[1] which reads data from a USB\n * endpoint. This can be used to construct a ReadableStream.\n *\n * [1]: https://streams.spec.whatwg.org/#underlying-source-api\n */\nclass UsbEndpointUnderlyingSource implements UnderlyingByteSource {\n  private device_: USBDevice;\n  private endpoint_: USBEndpoint;\n  private onError_: () => void;\n\n  type: 'bytes';\n\n  /**\n   * Constructs a new UnderlyingSource that will pull data from the specified\n   * endpoint on the given USB device.\n   *\n   * @param {USBDevice} device\n   * @param {USBEndpoint} endpoint\n   * @param {function} onError function to be called on error\n   */\n  constructor(device: USBDevice, endpoint: USBEndpoint, onError: () => void) {\n    this.type = 'bytes';\n    this.device_ = device;\n    this.endpoint_ = endpoint;\n    this.onError_ = onError;\n  }\n\n  /**\n   * Reads a chunk of data from the device.\n   *\n   * @param {ReadableByteStreamController} controller\n   */\n  pull(controller: ReadableByteStreamController): void {\n    (async (): Promise<void> => {\n      let chunkSize;\n      if (controller.desiredSize) {\n        const d = controller.desiredSize / this.endpoint_.packetSize;\n        chunkSize = Math.ceil(d) * this.endpoint_.packetSize;\n      } else {\n        chunkSize = this.endpoint_.packetSize;\n      }\n\n      try {\n        const result = await this.device_.transferIn(\n            this.endpoint_.endpointNumber, chunkSize);\n        if (result.status != 'ok') {\n          controller.error(`USB error: ${result.status}`);\n          this.onError_();\n        }\n        if (result.data?.buffer) {\n          const chunk = new Uint8Array(\n              result.data.buffer, result.data.byteOffset,\n              result.data.byteLength);\n          controller.enqueue(chunk);\n        }\n      } catch (error) {\n        controller.error(error.toString());\n        this.onError_();\n      }\n    })();\n  }\n}\n\n/**\n * Implementation of the underlying sink API[2] which writes data to a USB\n * endpoint. This can be used to construct a WritableStream.\n *\n * [2]: https://streams.spec.whatwg.org/#underlying-sink-api\n */\nclass UsbEndpointUnderlyingSink implements UnderlyingSink<Uint8Array> {\n  private device_: USBDevice;\n  private endpoint_: USBEndpoint;\n  private onError_: () => void;\n\n  /**\n   * Constructs a new UnderlyingSink that will write data to the specified\n   * endpoint on the given USB device.\n   *\n   * @param {USBDevice} device\n   * @param {USBEndpoint} endpoint\n   * @param {function} onError function to be called on error\n   */\n  constructor(device: USBDevice, endpoint: USBEndpoint, onError: () => void) {\n    this.device_ = device;\n    this.endpoint_ = endpoint;\n    this.onError_ = onError;\n  }\n\n  /**\n   * Writes a chunk to the device.\n   *\n   * @param {Uint8Array} chunk\n   * @param {WritableStreamDefaultController} controller\n   */\n  async write(\n      chunk: Uint8Array,\n      controller: WritableStreamDefaultController): Promise<void> {\n    try {\n      const result =\n          await this.device_.transferOut(this.endpoint_.endpointNumber, chunk);\n      if (result.status != 'ok') {\n        controller.error(result.status);\n        this.onError_();\n      }\n    } catch (error) {\n      controller.error(error.toString());\n      this.onError_();\n    }\n  }\n}\n\n/** a class used to control serial devices over WebUSB */\nexport class SerialPort {\n  private polyfillOptions_: SerialPolyfillOptions;\n  private device_: USBDevice;\n  private controlInterface_: USBInterface;\n  private transferInterface_: USBInterface;\n  private inEndpoint_: USBEndpoint;\n  private outEndpoint_: USBEndpoint;\n\n  private serialOptions_: SerialOptions;\n  private readable_: ReadableStream<Uint8Array> | null;\n  private writable_: WritableStream<Uint8Array> | null;\n  private outputSignals_: SerialOutputSignals;\n\n  /**\n   * constructor taking a WebUSB device that creates a SerialPort instance.\n   * @param {USBDevice} device A device acquired from the WebUSB API\n   * @param {SerialPolyfillOptions} polyfillOptions Optional options to\n   * configure the polyfill.\n   */\n  public constructor(\n      device: USBDevice,\n      polyfillOptions?: SerialPolyfillOptions) {\n    this.polyfillOptions_ = {...kDefaultPolyfillOptions, ...polyfillOptions};\n    this.outputSignals_ = {\n      dataTerminalReady: false,\n      requestToSend: false,\n      break: false,\n    };\n\n    this.device_ = device;\n    this.controlInterface_ = findInterface(\n        this.device_,\n        this.polyfillOptions_.usbControlInterfaceClass as number);\n    this.transferInterface_ = findInterface(\n        this.device_,\n        this.polyfillOptions_.usbTransferInterfaceClass as number);\n    this.inEndpoint_ = findEndpoint(this.transferInterface_, 'in');\n    this.outEndpoint_ = findEndpoint(this.transferInterface_, 'out');\n  }\n\n  /**\n   * Getter for the readable attribute. Constructs a new ReadableStream as\n   * necessary.\n   * @return {ReadableStream} the current readable stream\n   */\n  public get readable(): ReadableStream<Uint8Array> | null {\n    if (!this.readable_ && this.device_.opened) {\n      this.readable_ = new ReadableStream<Uint8Array>(\n          new UsbEndpointUnderlyingSource(\n              this.device_, this.inEndpoint_, () => {\n                this.readable_ = null;\n              }),\n          {\n            highWaterMark: this.serialOptions_.bufferSize ?? kDefaultBufferSize,\n          });\n    }\n    return this.readable_;\n  }\n\n  /**\n   * Getter for the writable attribute. Constructs a new WritableStream as\n   * necessary.\n   * @return {WritableStream} the current writable stream\n   */\n  public get writable(): WritableStream<Uint8Array> | null {\n    if (!this.writable_ && this.device_.opened) {\n      this.writable_ = new WritableStream(\n          new UsbEndpointUnderlyingSink(\n              this.device_, this.outEndpoint_, () => {\n                this.writable_ = null;\n              }),\n          new ByteLengthQueuingStrategy({\n            highWaterMark: this.serialOptions_.bufferSize ?? kDefaultBufferSize,\n          }));\n    }\n    return this.writable_;\n  }\n\n  /**\n   * a function that opens the device and claims all interfaces needed to\n   * control and communicate to and from the serial device\n   * @param {SerialOptions} options Object containing serial options\n   * @return {Promise<void>} A promise that will resolve when device is ready\n   * for communication\n   */\n  public async open(options: SerialOptions): Promise<void> {\n    this.serialOptions_ = options;\n    this.validateOptions();\n\n    try {\n      await this.device_.open();\n      if (this.device_.configuration === null) {\n        await this.device_.selectConfiguration(1);\n      }\n\n      await this.device_.claimInterface(this.controlInterface_.interfaceNumber);\n      if (this.controlInterface_ !== this.transferInterface_) {\n        await this.device_.claimInterface(\n            this.transferInterface_.interfaceNumber);\n      }\n\n      await this.setLineCoding();\n      await this.setSignals({dataTerminalReady: true});\n    } catch (error) {\n      if (this.device_.opened) {\n        await this.device_.close();\n      }\n      throw new Error('Error setting up device: ' + error.toString());\n    }\n  }\n\n  /**\n   * Closes the port.\n   *\n   * @return {Promise<void>} A promise that will resolve when the port is\n   * closed.\n   */\n  public async close(): Promise<void> {\n    const promises = [];\n    if (this.readable_) {\n      promises.push(this.readable_.cancel());\n    }\n    if (this.writable_) {\n      promises.push(this.writable_.abort());\n    }\n    await Promise.all(promises);\n    this.readable_ = null;\n    this.writable_ = null;\n    if (this.device_.opened) {\n      await this.setSignals({dataTerminalReady: false, requestToSend: false});\n      await this.device_.close();\n    }\n  }\n\n  /**\n   * Forgets the port.\n   *\n   * @return {Promise<void>} A promise that will resolve when the port is\n   * forgotten.\n   */\n  public async forget(): Promise<void> {\n    return this.device_.forget();\n  }\n\n  /**\n   * A function that returns properties of the device.\n   * @return {SerialPortInfo} Device properties.\n   */\n  public getInfo(): SerialPortInfo {\n    return {\n      usbVendorId: this.device_.vendorId,\n      usbProductId: this.device_.productId,\n    };\n  }\n\n  /**\n   * A function used to change the serial settings of the device\n   * @param {object} options the object which carries serial settings data\n   * @return {Promise<void>} A promise that will resolve when the options are\n   * set\n   */\n  public reconfigure(options: SerialOptions): Promise<void> {\n    this.serialOptions_ = {...this.serialOptions_, ...options};\n    this.validateOptions();\n    return this.setLineCoding();\n  }\n\n  /**\n   * Sets control signal state for the port.\n   * @param {SerialOutputSignals} signals The signals to enable or disable.\n   * @return {Promise<void>} a promise that is resolved when the signal state\n   * has been changed.\n   */\n  public async setSignals(signals: SerialOutputSignals): Promise<void> {\n    this.outputSignals_ = {...this.outputSignals_, ...signals};\n\n    if (signals.dataTerminalReady !== undefined ||\n        signals.requestToSend !== undefined) {\n      // The Set_Control_Line_State command expects a bitmap containing the\n      // values of all output signals that should be enabled or disabled.\n      //\n      // Ref: USB CDC specification version 1.1 §6.2.14.\n      const value = (this.outputSignals_.dataTerminalReady ? 1 << 0 : 0) |\n                    (this.outputSignals_.requestToSend ? 1 << 1 : 0);\n\n      await this.device_.controlTransferOut({\n        'requestType': 'class',\n        'recipient': 'interface',\n        'request': kSetControlLineState,\n        'value': value,\n        'index': this.controlInterface_.interfaceNumber,\n      });\n    }\n\n    if (signals.break !== undefined) {\n      // The SendBreak command expects to be given a duration for how long the\n      // break signal should be asserted. Passing 0xFFFF enables the signal\n      // until 0x0000 is send.\n      //\n      // Ref: USB CDC specification version 1.1 §6.2.15.\n      const value = this.outputSignals_.break ? 0xFFFF : 0x0000;\n\n      await this.device_.controlTransferOut({\n        'requestType': 'class',\n        'recipient': 'interface',\n        'request': kSendBreak,\n        'value': value,\n        'index': this.controlInterface_.interfaceNumber,\n      });\n    }\n  }\n\n  /**\n   * Checks the serial options for validity and throws an error if it is\n   * not valid\n   */\n  private validateOptions(): void {\n    if (!this.isValidBaudRate(this.serialOptions_.baudRate)) {\n      throw new RangeError('invalid Baud Rate ' + this.serialOptions_.baudRate);\n    }\n\n    if (!this.isValidDataBits(this.serialOptions_.dataBits)) {\n      throw new RangeError('invalid dataBits ' + this.serialOptions_.dataBits);\n    }\n\n    if (!this.isValidStopBits(this.serialOptions_.stopBits)) {\n      throw new RangeError('invalid stopBits ' + this.serialOptions_.stopBits);\n    }\n\n    if (!this.isValidParity(this.serialOptions_.parity)) {\n      throw new RangeError('invalid parity ' + this.serialOptions_.parity);\n    }\n  }\n\n  /**\n   * Checks the baud rate for validity\n   * @param {number} baudRate the baud rate to check\n   * @return {boolean} A boolean that reflects whether the baud rate is valid\n   */\n  private isValidBaudRate(baudRate: number): boolean {\n    return baudRate % 1 === 0;\n  }\n\n  /**\n   * Checks the data bits for validity\n   * @param {number} dataBits the data bits to check\n   * @return {boolean} A boolean that reflects whether the data bits setting is\n   * valid\n   */\n  private isValidDataBits(dataBits: number | undefined): boolean {\n    if (typeof dataBits === 'undefined') {\n      return true;\n    }\n    return kAcceptableDataBits.includes(dataBits);\n  }\n\n  /**\n   * Checks the stop bits for validity\n   * @param {number} stopBits the stop bits to check\n   * @return {boolean} A boolean that reflects whether the stop bits setting is\n   * valid\n   */\n  private isValidStopBits(stopBits: number | undefined): boolean {\n    if (typeof stopBits === 'undefined') {\n      return true;\n    }\n    return kAcceptableStopBits.includes(stopBits);\n  }\n\n  /**\n   * Checks the parity for validity\n   * @param {string} parity the parity to check\n   * @return {boolean} A boolean that reflects whether the parity is valid\n   */\n  private isValidParity(parity: ParityType | undefined): boolean {\n    if (typeof parity === 'undefined') {\n      return true;\n    }\n    return kAcceptableParity.includes(parity);\n  }\n\n  /**\n   * sends the options alog the control interface to set them on the device\n   * @return {Promise} a promise that will resolve when the options are set\n   */\n  private async setLineCoding(): Promise<void> {\n    // Ref: USB CDC specification version 1.1 §6.2.12.\n    const buffer = new ArrayBuffer(7);\n    const view = new DataView(buffer);\n    view.setUint32(0, this.serialOptions_.baudRate, true);\n    view.setUint8(\n        4, kStopBitsIndexMapping.indexOf(\n            this.serialOptions_.stopBits ?? kDefaultStopBits));\n    view.setUint8(\n        5, kParityIndexMapping.indexOf(\n            this.serialOptions_.parity ?? kDefaultParity));\n    view.setUint8(6, this.serialOptions_.dataBits ?? kDefaultDataBits);\n\n    const result = await this.device_.controlTransferOut({\n      'requestType': 'class',\n      'recipient': 'interface',\n      'request': kSetLineCoding,\n      'value': 0x00,\n      'index': this.controlInterface_.interfaceNumber,\n    }, buffer);\n    if (result.status != 'ok') {\n      throw new DOMException('NetworkError', 'Failed to set line coding.');\n    }\n  }\n}\n\n/** implementation of the global navigator.serial object */\nclass Serial {\n  /**\n   * Requests permission to access a new port.\n   *\n   * @param {SerialPortRequestOptions} options\n   * @param {SerialPolyfillOptions} polyfillOptions\n   * @return {Promise<SerialPort>}\n   */\n  async requestPort(\n      options?: SerialPortRequestOptions,\n      polyfillOptions?: SerialPolyfillOptions): Promise<SerialPort> {\n    polyfillOptions = {...kDefaultPolyfillOptions, ...polyfillOptions};\n\n    const usbFilters: USBDeviceFilter[] = [];\n    if (options && options.filters) {\n      for (const filter of options.filters) {\n        const usbFilter: USBDeviceFilter = {\n          classCode: polyfillOptions.usbControlInterfaceClass,\n        };\n        if (filter.usbVendorId !== undefined) {\n          usbFilter.vendorId = filter.usbVendorId;\n        }\n        if (filter.usbProductId !== undefined) {\n          usbFilter.productId = filter.usbProductId;\n        }\n        usbFilters.push(usbFilter);\n      }\n    }\n\n    if (usbFilters.length === 0) {\n      usbFilters.push({\n        classCode: polyfillOptions.usbControlInterfaceClass,\n      });\n    }\n\n    const device = await navigator.usb.requestDevice({'filters': usbFilters});\n    const port = new SerialPort(device, polyfillOptions);\n    return port;\n  }\n\n  /**\n   * Get the set of currently available ports.\n   *\n   * @param {SerialPolyfillOptions} polyfillOptions Polyfill configuration that\n   * should be applied to these ports.\n   * @return {Promise<SerialPort[]>} a promise that is resolved with a list of\n   * ports.\n   */\n  async getPorts(polyfillOptions?: SerialPolyfillOptions):\n      Promise<SerialPort[]> {\n    polyfillOptions = {...kDefaultPolyfillOptions, ...polyfillOptions};\n\n    const devices = await navigator.usb.getDevices();\n    const ports: SerialPort[] = [];\n    devices.forEach((device) => {\n      try {\n        const port = new SerialPort(device, polyfillOptions);\n        ports.push(port);\n      } catch (e) {\n        // Skip unrecognized port.\n      }\n    });\n    return ports;\n  }\n}\n\n/* an object to be used for starting the serial workflow */\nexport const serial = new Serial();\n"],"names":[],"version":3,"file":"typescript.89fa9879.js.map"}