{"mappings":"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","sources":["../../lib/targets/esp32c61.js"],"sourcesContent":["import { ESP32C6ROM } from \"./esp32c6\";\r\nexport class ESP32C61ROM extends ESP32C6ROM {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.CHIP_NAME = \"ESP32-C61\";\r\n        this.IMAGE_CHIP_ID = 20;\r\n        this.CHIP_DETECT_MAGIC_VALUE = [0x33f0206f, 0x2421606f];\r\n        this.UART_DATE_REG_ADDR = 0x60000000 + 0x7c;\r\n        this.EFUSE_BASE = 0x600b4800;\r\n        this.EFUSE_BLOCK1_ADDR = this.EFUSE_BASE + 0x044;\r\n        this.MAC_EFUSE_REG = this.EFUSE_BASE + 0x044;\r\n        this.EFUSE_RD_REG_BASE = this.EFUSE_BASE + 0x030; // BLOCK0 read base address\r\n        this.EFUSE_PURPOSE_KEY0_REG = this.EFUSE_BASE + 0x34;\r\n        this.EFUSE_PURPOSE_KEY0_SHIFT = 0;\r\n        this.EFUSE_PURPOSE_KEY1_REG = this.EFUSE_BASE + 0x34;\r\n        this.EFUSE_PURPOSE_KEY1_SHIFT = 4;\r\n        this.EFUSE_PURPOSE_KEY2_REG = this.EFUSE_BASE + 0x34;\r\n        this.EFUSE_PURPOSE_KEY2_SHIFT = 8;\r\n        this.EFUSE_PURPOSE_KEY3_REG = this.EFUSE_BASE + 0x34;\r\n        this.EFUSE_PURPOSE_KEY3_SHIFT = 12;\r\n        this.EFUSE_PURPOSE_KEY4_REG = this.EFUSE_BASE + 0x34;\r\n        this.EFUSE_PURPOSE_KEY4_SHIFT = 16;\r\n        this.EFUSE_PURPOSE_KEY5_REG = this.EFUSE_BASE + 0x34;\r\n        this.EFUSE_PURPOSE_KEY5_SHIFT = 20;\r\n        this.EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT_REG = this.EFUSE_RD_REG_BASE;\r\n        this.EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT = 1 << 20;\r\n        this.EFUSE_SPI_BOOT_CRYPT_CNT_REG = this.EFUSE_BASE + 0x030;\r\n        this.EFUSE_SPI_BOOT_CRYPT_CNT_MASK = 0x7 << 23;\r\n        this.EFUSE_SECURE_BOOT_EN_REG = this.EFUSE_BASE + 0x034;\r\n        this.EFUSE_SECURE_BOOT_EN_MASK = 1 << 26;\r\n        this.FLASH_FREQUENCY = {\r\n            \"80m\": 0xf,\r\n            \"40m\": 0x0,\r\n            \"20m\": 0x2,\r\n        };\r\n        this.IROM_MAP_START = 0x42000000;\r\n        this.IROM_MAP_END = 0x42800000;\r\n        this.MEMORY_MAP = [\r\n            [0x00000000, 0x00010000, \"PADDING\"],\r\n            [0x41800000, 0x42000000, \"DROM\"],\r\n            [0x40800000, 0x40860000, \"DRAM\"],\r\n            [0x40800000, 0x40860000, \"BYTE_ACCESSIBLE\"],\r\n            [0x4004ac00, 0x40050000, \"DROM_MASK\"],\r\n            [0x40000000, 0x4004ac00, \"IROM_MASK\"],\r\n            [0x41000000, 0x41800000, \"IROM\"],\r\n            [0x40800000, 0x40860000, \"IRAM\"],\r\n            [0x50000000, 0x50004000, \"RTC_IRAM\"],\r\n            [0x50000000, 0x50004000, \"RTC_DRAM\"],\r\n            [0x600fe000, 0x60100000, \"MEM_INTERNAL2\"],\r\n        ];\r\n        this.UF2_FAMILY_ID = 0x77d850c4;\r\n        this.EFUSE_MAX_KEY = 5;\r\n        this.KEY_PURPOSES = {\r\n            0: \"USER/EMPTY\",\r\n            1: \"ECDSA_KEY\",\r\n            2: \"XTS_AES_256_KEY_1\",\r\n            3: \"XTS_AES_256_KEY_2\",\r\n            4: \"XTS_AES_128_KEY\",\r\n            5: \"HMAC_DOWN_ALL\",\r\n            6: \"HMAC_DOWN_JTAG\",\r\n            7: \"HMAC_DOWN_DIGITAL_SIGNATURE\",\r\n            8: \"HMAC_UP\",\r\n            9: \"SECURE_BOOT_DIGEST0\",\r\n            10: \"SECURE_BOOT_DIGEST1\",\r\n            11: \"SECURE_BOOT_DIGEST2\",\r\n            12: \"KM_INIT_KEY\",\r\n            13: \"XTS_AES_256_KEY_1_PSRAM\",\r\n            14: \"XTS_AES_256_KEY_2_PSRAM\",\r\n            15: \"XTS_AES_128_KEY_PSRAM\",\r\n        };\r\n    }\r\n    async getPkgVersion(loader) {\r\n        const numWord = 2;\r\n        return ((await loader.readReg(this.EFUSE_BLOCK1_ADDR + 4 * numWord)) >> 26) & 0x07;\r\n    }\r\n    async getMinorChipVersion(loader) {\r\n        const numWord = 2;\r\n        return ((await loader.readReg(this.EFUSE_BLOCK1_ADDR + 4 * numWord)) >> 0) & 0x0f;\r\n    }\r\n    async getMajorChipVersion(loader) {\r\n        const numWord = 2;\r\n        return ((await loader.readReg(this.EFUSE_BLOCK1_ADDR + 4 * numWord)) >> 4) & 0x03;\r\n    }\r\n    async getChipDescription(loader) {\r\n        const pkgVer = await this.getPkgVersion(loader);\r\n        let desc;\r\n        if (pkgVer === 0) {\r\n            desc = \"ESP32-C61\";\r\n        }\r\n        else {\r\n            desc = \"unknown ESP32-C61\";\r\n        }\r\n        const majorRev = await this.getMajorChipVersion(loader);\r\n        const minorRev = await this.getMinorChipVersion(loader);\r\n        return `${desc} (revision v${majorRev}.${minorRev})`;\r\n    }\r\n    async getChipFeatures(loader) {\r\n        return [\"WiFi 6\", \"BT 5\"];\r\n    }\r\n    async readMac(loader) {\r\n        let mac0 = await loader.readReg(this.MAC_EFUSE_REG);\r\n        mac0 = mac0 >>> 0;\r\n        let mac1 = await loader.readReg(this.MAC_EFUSE_REG + 4);\r\n        mac1 = (mac1 >>> 0) & 0x0000ffff;\r\n        const mac = new Uint8Array(6);\r\n        mac[0] = (mac1 >> 8) & 0xff;\r\n        mac[1] = mac1 & 0xff;\r\n        mac[2] = (mac0 >> 24) & 0xff;\r\n        mac[3] = (mac0 >> 16) & 0xff;\r\n        mac[4] = (mac0 >> 8) & 0xff;\r\n        mac[5] = mac0 & 0xff;\r\n        return (this._d2h(mac[0]) +\r\n            \":\" +\r\n            this._d2h(mac[1]) +\r\n            \":\" +\r\n            this._d2h(mac[2]) +\r\n            \":\" +\r\n            this._d2h(mac[3]) +\r\n            \":\" +\r\n            this._d2h(mac[4]) +\r\n            \":\" +\r\n            this._d2h(mac[5]));\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"esp32c61.51ba51c9.js.map"}